#include <memory>
#include <QMap>
#include <QString>
#include <version.h>
#include <palette.h>
#include <IDMapping.h>

SampleMapping makeSampleMapping(std::string first, std::string second) {
    return SampleMapping(QString::fromStdString(first), QString::fromStdString(second));
}

AnimMapping makeAnimMapping(std::string first, std::string second, const sf::Color* palette) {
    return AnimMapping(QString::fromStdString(first), QString::fromStdString(second), palette);
}

std::unique_ptr<AnimIDMap> getAnimMappingForVersion(JJ2Version version) {
    auto map = std::make_unique<AnimIDMap>(AnimIDMap());

    if (version == JJ2Version::UNKNOWN) {
        return map;
    }

    quint32 offset = 0;
    quint32 offset_local = 0;
    bool useOffsets = version != JJ2Version::JJ2_TSF;

    map->insert(qMakePair(  0,  0), makeAnimMapping("unknown", "flame_blue"));
    map->insert(qMakePair(  0,  1), makeAnimMapping("common", "bomb"));
    map->insert(qMakePair(  0,  2), makeAnimMapping("common", "smoke_poof"));
    map->insert(qMakePair(  0,  3), makeAnimMapping("common", "explosion_rf"));
    map->insert(qMakePair(  0,  4), makeAnimMapping("common", "explosion_small"));
    map->insert(qMakePair(  0,  5), makeAnimMapping("common", "explosion_large"));
    map->insert(qMakePair(  0,  6), makeAnimMapping("common", "smoke_circling_gray"));
    map->insert(qMakePair(  0,  7), makeAnimMapping("common", "smoke_circling_brown"));
    map->insert(qMakePair(  0,  8), makeAnimMapping("unknown", "bubble"));
    map->insert(qMakePair(  0,  9), makeAnimMapping("unknown", "brown_thing"));
    map->insert(qMakePair(  0, 10), makeAnimMapping("common", "explosion_pepper"));
    map->insert(qMakePair(  0, 11), makeAnimMapping("unknown", "bullet_maybe_electro"));
    map->insert(qMakePair(  0, 12), makeAnimMapping("unknown", "bullet_maybe_electro_trail"));
    map->insert(qMakePair(  0, 13), makeAnimMapping("unknown", "flame_red"));
    map->insert(qMakePair(  0, 14), makeAnimMapping("weapon", "bullet_shield_fireball"));
    map->insert(qMakePair(  0, 15), makeAnimMapping("unknown", "flare_diag_downleft"));
    map->insert(qMakePair(  0, 16), makeAnimMapping("unknown", "flare_hor"));
    map->insert(qMakePair(  0, 17), makeAnimMapping("weapon", "bullet_blaster_upgraded_hor"));
    map->insert(qMakePair(  0, 18), makeAnimMapping("ui", "blaster_upgraded_jazz"));
    map->insert(qMakePair(  0, 19), makeAnimMapping("ui", "blaster_upgraded_spaz"));
    map->insert(qMakePair(  0, 20), makeAnimMapping("weapon", "bullet_blaster_hor"));
    map->insert(qMakePair(  0, 21), makeAnimMapping("weapon", "bullet_blaster_upgraded_ver"));
    map->insert(qMakePair(  0, 22), makeAnimMapping("weapon", "bullet_blaster_ver"));
    map->insert(qMakePair(  0, 23), makeAnimMapping("weapon", "bullet_bouncer"));
    map->insert(qMakePair(  0, 24), makeAnimMapping("pickup", "ammo_bouncer_upgraded"));
    map->insert(qMakePair(  0, 25), makeAnimMapping("pickup", "ammo_bouncer"));
    map->insert(qMakePair(  0, 26), makeAnimMapping("weapon", "bullet_bouncer_upgraded"));
    map->insert(qMakePair(  0, 27), makeAnimMapping("weapon", "bullet_freezer_hor"));
    map->insert(qMakePair(  0, 28), makeAnimMapping("pickup", "ammo_freezer_upgraded"));
    map->insert(qMakePair(  0, 29), makeAnimMapping("pickup", "ammo_freezer"));
    map->insert(qMakePair(  0, 30), makeAnimMapping("weapon", "bullet_freezer_upgraded_hor"));
    map->insert(qMakePair(  0, 31), makeAnimMapping("weapon", "bullet_freezer_ver"));
    map->insert(qMakePair(  0, 32), makeAnimMapping("weapon", "bullet_freezer_upgraded_ver"));
    map->insert(qMakePair(  0, 33), makeAnimMapping("pickup", "ammo_seeker_upgraded"));
    map->insert(qMakePair(  0, 34), makeAnimMapping("pickup", "ammo_seeker"));
    map->insert(qMakePair(  0, 35), makeAnimMapping("weapon", "bullet_seeker_ver_down"));
    map->insert(qMakePair(  0, 36), makeAnimMapping("weapon", "bullet_seeker_diag_downright"));
    map->insert(qMakePair(  0, 37), makeAnimMapping("weapon", "bullet_seeker_hor"));
    map->insert(qMakePair(  0, 38), makeAnimMapping("weapon", "bullet_seeker_ver_up"));
    map->insert(qMakePair(  0, 39), makeAnimMapping("weapon", "bullet_seeker_diag_upright"));
    map->insert(qMakePair(  0, 40), makeAnimMapping("weapon", "bullet_seeker_upgraded_ver_down"));
    map->insert(qMakePair(  0, 41), makeAnimMapping("weapon", "bullet_seeker_upgraded_diag_downright"));
    map->insert(qMakePair(  0, 42), makeAnimMapping("weapon", "bullet_seeker_upgraded_hor"));
    map->insert(qMakePair(  0, 43), makeAnimMapping("weapon", "bullet_seeker_upgraded_ver_up"));
    map->insert(qMakePair(  0, 44), makeAnimMapping("weapon", "bullet_seeker_upgraded_diag_upright"));
    map->insert(qMakePair(  0, 45), makeAnimMapping("weapon", "bullet_rf_hor"));
    map->insert(qMakePair(  0, 46), makeAnimMapping("weapon", "bullet_rf_diag_downright"));
    map->insert(qMakePair(  0, 47), makeAnimMapping("weapon", "bullet_rf_upgraded_diag_downright"));
    map->insert(qMakePair(  0, 48), makeAnimMapping("pickup", "ammo_rf_upgraded"));
    map->insert(qMakePair(  0, 49), makeAnimMapping("pickup", "ammo_rf"));
    map->insert(qMakePair(  0, 50), makeAnimMapping("weapon", "bullet_rf_upgraded_hor"));
    map->insert(qMakePair(  0, 51), makeAnimMapping("weapon", "bullet_rf_upgraded_ver"));
    map->insert(qMakePair(  0, 52), makeAnimMapping("weapon", "bullet_rf_upgraded_diag_upright"));
    map->insert(qMakePair(  0, 53), makeAnimMapping("weapon", "bullet_rf_ver"));
    map->insert(qMakePair(  0, 54), makeAnimMapping("weapon", "bullet_rf_diag_upright"));
    map->insert(qMakePair(  0, 55), makeAnimMapping("weapon", "bullet_toaster"));
    map->insert(qMakePair(  0, 56), makeAnimMapping("pickup", "ammo_toaster_upgraded"));
    map->insert(qMakePair(  0, 57), makeAnimMapping("pickup", "ammo_toaster"));
    map->insert(qMakePair(  0, 58), makeAnimMapping("weapon", "bullet_toaster_upgraded"));
    map->insert(qMakePair(  0, 59), makeAnimMapping("weapon", "bullet_tnt"));
    map->insert(qMakePair(  0, 60), makeAnimMapping("weapon", "bullet_fireball_hor"));
    map->insert(qMakePair(  0, 61), makeAnimMapping("pickup", "ammo_pepper_upgraded"));
    map->insert(qMakePair(  0, 62), makeAnimMapping("pickup", "ammo_pepper"));
    map->insert(qMakePair(  0, 63), makeAnimMapping("weapon", "bullet_fireball_upgraded_hor"));
    map->insert(qMakePair(  0, 64), makeAnimMapping("weapon", "bullet_fireball_ver"));
    map->insert(qMakePair(  0, 65), makeAnimMapping("weapon", "bullet_fireball_upgraded_ver"));
    map->insert(qMakePair(  0, 66), makeAnimMapping("weapon", "bullet_bladegun"));
    map->insert(qMakePair(  0, 67), makeAnimMapping("pickup", "ammo_electro_upgraded"));
    map->insert(qMakePair(  0, 68), makeAnimMapping("pickup", "ammo_electro"));
    map->insert(qMakePair(  0, 69), makeAnimMapping("weapon", "bullet_bladegun_upgraded"));
    map->insert(qMakePair(  0, 70), makeAnimMapping("common", "explosion_tiny"));
    map->insert(qMakePair(  0, 71), makeAnimMapping("common", "explosion_freezer_maybe"));
    map->insert(qMakePair(  0, 72), makeAnimMapping("common", "explosion_tiny_black"));
    map->insert(qMakePair(  0, 73), makeAnimMapping("weapon", "bullet_fireball_upgraded_hor_2"));
    map->insert(qMakePair(  0, 74), makeAnimMapping("unknown", "flare_hor_2"));
    map->insert(qMakePair(  0, 75), makeAnimMapping("unknown", "green_explosion"));
    map->insert(qMakePair(  0, 76), makeAnimMapping("weapon", "bullet_bladegun_alt"));
    map->insert(qMakePair(  0, 77), makeAnimMapping("weapon", "bullet_tnt_explosion"));
    map->insert(qMakePair(  0, 78), makeAnimMapping("object", "container_ammo_shrapnel_1"));
    map->insert(qMakePair(  0, 79), makeAnimMapping("object", "container_ammo_shrapnel_2"));
    map->insert(qMakePair(  0, 80), makeAnimMapping("common", "explosion_upwards"));
    map->insert(qMakePair(  0, 81), makeAnimMapping("common", "explosion_bomb"));
    map->insert(qMakePair(  0, 82), makeAnimMapping("common", "smoke_circling_white"));
    map->insert(qMakePair(  1,  0), makeAnimMapping("bat", "idle"));
    map->insert(qMakePair(  1,  1), makeAnimMapping("bat", "resting"));
    map->insert(qMakePair(  1,  2), makeAnimMapping("bat", "takeoff_1"));
    map->insert(qMakePair(  1,  3), makeAnimMapping("bat", "takeoff_2"));
    map->insert(qMakePair(  1,  4), makeAnimMapping("bat", "roost"));
    map->insert(qMakePair(  2,  0), makeAnimMapping("bee", "swarm"));
    map->insert(qMakePair(  3,  0), makeAnimMapping("bee", "swarm_2"));
    map->insert(qMakePair(  4,  0), makeAnimMapping("object", "pushbox_crate"));
    map->insert(qMakePair(  5,  0), makeAnimMapping("object", "pushbox_rock"));
    map->insert(qMakePair(  6,  0), makeAnimMapping("unknown", "diamondus_tileset_tree"));
    map->insert(qMakePair(  7,  0), makeAnimMapping("bilsy", "throw_fireball"));
    map->insert(qMakePair(  7,  1), makeAnimMapping("bilsy", "appear"));
    map->insert(qMakePair(  7,  2), makeAnimMapping("bilsy", "vanish"));
    map->insert(qMakePair(  7,  3), makeAnimMapping("bilsy", "bullet_fireball"));
    map->insert(qMakePair(  7,  4), makeAnimMapping("bilsy", "idle"));
    map->insert(qMakePair(  8,  0), makeAnimMapping("birdy", "charge_diag_downright"));
    map->insert(qMakePair(  8,  1), makeAnimMapping("birdy", "charge_ver"));
    map->insert(qMakePair(  8,  2), makeAnimMapping("birdy", "charge_diag_upright"));
    map->insert(qMakePair(  8,  3), makeAnimMapping("birdy", "caged"));
    map->insert(qMakePair(  8,  4), makeAnimMapping("birdy", "cage_destroyed"));
    map->insert(qMakePair(  8,  5), makeAnimMapping("birdy", "die"));
    map->insert(qMakePair(  8,  6), makeAnimMapping("birdy", "feather_green"));
    map->insert(qMakePair(  8,  7), makeAnimMapping("birdy", "feather_red"));
    map->insert(qMakePair(  8,  8), makeAnimMapping("birdy", "feather_green_and_red"));
    map->insert(qMakePair(  8,  9), makeAnimMapping("birdy", "fly"));
    map->insert(qMakePair(  8, 10), makeAnimMapping("birdy", "hurt"));
    map->insert(qMakePair(  8, 11), makeAnimMapping("birdy", "idle_worm"));
    map->insert(qMakePair(  8, 12), makeAnimMapping("birdy", "idle_turn_head_left"));
    map->insert(qMakePair(  8, 13), makeAnimMapping("birdy", "idle_look_left"));
    map->insert(qMakePair(  8, 14), makeAnimMapping("birdy", "idle_turn_head_left_back"));
    map->insert(qMakePair(  8, 15), makeAnimMapping("birdy", "idle_turn_head_right"));
    map->insert(qMakePair(  8, 16), makeAnimMapping("birdy", "idle_look_right"));
    map->insert(qMakePair(  8, 17), makeAnimMapping("birdy", "idle_turn_head_right_back"));
    map->insert(qMakePair(  8, 18), makeAnimMapping("birdy", "idle"));
    map->insert(qMakePair(  8, 19), makeAnimMapping("birdy", "corpse"));
    map->insert(qMakePair(  9,  0), makeAnimMapping("unimplemented", "bonus_birdy"));
    map->insert(qMakePair( 10,  0), makeAnimMapping("platform", "ball"));
    map->insert(qMakePair( 10,  1), makeAnimMapping("platform", "ball_chain"));
    map->insert(qMakePair( 11,  0), makeAnimMapping("object", "bonus_active"));
    map->insert(qMakePair( 11,  1), makeAnimMapping("object", "bonus_inactive"));
    map->insert(qMakePair( 12,  0), makeAnimMapping("ui", "boss_health_bar"));
    map->insert(qMakePair( 13,  0), makeAnimMapping("bridge", "rope"));
    map->insert(qMakePair( 13,  1), makeAnimMapping("bridge", "stone"));
    map->insert(qMakePair( 13,  2), makeAnimMapping("bridge", "vine"));
    map->insert(qMakePair( 13,  3), makeAnimMapping("bridge", "stone_red"));
    map->insert(qMakePair( 13,  4), makeAnimMapping("bridge", "log"));
    map->insert(qMakePair( 13,  5), makeAnimMapping("bridge", "gem"));
    map->insert(qMakePair( 13,  6), makeAnimMapping("bridge", "lab"));
    map->insert(qMakePair( 14,  0), makeAnimMapping("bubba", "spew_fireball"));
    map->insert(qMakePair( 14,  1), makeAnimMapping("bubba", "corpse"));
    map->insert(qMakePair( 14,  2), makeAnimMapping("bubba", "jump"));
    map->insert(qMakePair( 14,  3), makeAnimMapping("bubba", "jump_fall"));
    map->insert(qMakePair( 14,  4), makeAnimMapping("bubba", "fireball"));
    map->insert(qMakePair( 14,  5), makeAnimMapping("bubba", "hop"));
    map->insert(qMakePair( 14,  6), makeAnimMapping("bubba", "tornado"));
    map->insert(qMakePair( 14,  7), makeAnimMapping("bubba", "tornado_start"));
    map->insert(qMakePair( 14,  8), makeAnimMapping("bubba", "tornado_end"));
    map->insert(qMakePair( 15,  0), makeAnimMapping("bee", "bee"));
    map->insert(qMakePair( 15,  1), makeAnimMapping("bee", "bee_turn"));
    map->insert(qMakePair( 16,  0), makeAnimMapping("unimplemented", "butterfly"));
    map->insert(qMakePair( 17,  0), makeAnimMapping("pole", "carrotus", CARROTUS_POLE_PALETTE));
    map->insert(qMakePair( 18,  0), makeAnimMapping("cheshire", "platform_appear"));
    map->insert(qMakePair( 18,  1), makeAnimMapping("cheshire", "platform_vanish"));
    map->insert(qMakePair( 18,  2), makeAnimMapping("cheshire", "platform_idle"));
    map->insert(qMakePair( 18,  3), makeAnimMapping("cheshire", "platform_invisible"));
    map->insert(qMakePair( 19,  0), makeAnimMapping("cheshire", "hook_appear"));
    map->insert(qMakePair( 19,  1), makeAnimMapping("cheshire", "hook_vanish"));
    map->insert(qMakePair( 19,  2), makeAnimMapping("cheshire", "hook_idle"));
    map->insert(qMakePair( 19,  3), makeAnimMapping("cheshire", "hook_invisible"));
    map->insert(qMakePair( 20,  0), makeAnimMapping("caterpillar", "exhale_start"));
    map->insert(qMakePair( 20,  1), makeAnimMapping("caterpillar", "exhale"));
    map->insert(qMakePair( 20,  2), makeAnimMapping("caterpillar", "disoriented"));
    map->insert(qMakePair( 20,  3), makeAnimMapping("caterpillar", "idle"));
    map->insert(qMakePair( 20,  4), makeAnimMapping("caterpillar", "inhale_start"));
    map->insert(qMakePair( 20,  5), makeAnimMapping("caterpillar", "inhale"));
    map->insert(qMakePair( 20,  6), makeAnimMapping("caterpillar", "smoke"));
    map->insert(qMakePair( 21,  0), makeAnimMapping("birdy_yellow", "charge_diag_downright_placeholder"));
    map->insert(qMakePair( 21,  1), makeAnimMapping("birdy_yellow", "charge_ver"));
    map->insert(qMakePair( 21,  2), makeAnimMapping("birdy_yellow", "charge_diag_upright"));
    map->insert(qMakePair( 21,  3), makeAnimMapping("birdy_yellow", "caged"));
    map->insert(qMakePair( 21,  4), makeAnimMapping("birdy_yellow", "cage_destroyed"));
    map->insert(qMakePair( 21,  5), makeAnimMapping("birdy_yellow", "die"));
    map->insert(qMakePair( 21,  6), makeAnimMapping("birdy_yellow", "feather_blue"));
    map->insert(qMakePair( 21,  7), makeAnimMapping("birdy_yellow", "feather_yellow"));
    map->insert(qMakePair( 21,  8), makeAnimMapping("birdy_yellow", "feather_blue_and_yellow"));
    map->insert(qMakePair( 21,  9), makeAnimMapping("birdy_yellow", "fly"));
    map->insert(qMakePair( 21, 10), makeAnimMapping("birdy_yellow", "hurt"));
    map->insert(qMakePair( 21, 11), makeAnimMapping("birdy_yellow", "idle_worm"));
    map->insert(qMakePair( 21, 12), makeAnimMapping("birdy_yellow", "idle_turn_head_left"));
    map->insert(qMakePair( 21, 13), makeAnimMapping("birdy_yellow", "idle_look_left"));
    map->insert(qMakePair( 21, 14), makeAnimMapping("birdy_yellow", "idle_turn_head_left_back"));
    map->insert(qMakePair( 21, 15), makeAnimMapping("birdy_yellow", "idle_turn_head_right"));
    map->insert(qMakePair( 21, 16), makeAnimMapping("birdy_yellow", "idle_look_right"));
    map->insert(qMakePair( 21, 17), makeAnimMapping("birdy_yellow", "idle_turn_head_right_back"));
    map->insert(qMakePair( 21, 18), makeAnimMapping("birdy_yellow", "idle"));
    map->insert(qMakePair( 21, 19), makeAnimMapping("birdy_yellow", "corpse"));
    map->insert(qMakePair( 22,  0), makeAnimMapping("common", "water_bubble_1"));
    map->insert(qMakePair( 22,  1), makeAnimMapping("common", "water_bubble_2"));
    map->insert(qMakePair( 22,  2), makeAnimMapping("common", "water_bubble_3"));
    map->insert(qMakePair( 22,  3), makeAnimMapping("common", "water_splash"));
    map->insert(qMakePair( 23,  0), makeAnimMapping("jazz", "gameover_continue"));
    map->insert(qMakePair( 23,  1), makeAnimMapping("jazz", "gameover_idle"));
    map->insert(qMakePair( 23,  2), makeAnimMapping("jazz", "gameover_end"));
    map->insert(qMakePair( 23,  3), makeAnimMapping("spaz", "gameover_continue"));
    map->insert(qMakePair( 23,  4), makeAnimMapping("spaz", "gameover_idle"));
    map->insert(qMakePair( 23,  5), makeAnimMapping("spaz", "gameover_end"));
    map->insert(qMakePair( 24,  0), makeAnimMapping("demon", "idle"));
    map->insert(qMakePair( 24,  1), makeAnimMapping("demon", "attack_start"));
    map->insert(qMakePair( 24,  2), makeAnimMapping("demon", "attack"));
    map->insert(qMakePair( 24,  3), makeAnimMapping("demon", "attack_end"));
    map->insert(qMakePair( 25,  4), makeAnimMapping("common", "ice_block"));
    map->insert(qMakePair( 26,  0), makeAnimMapping("devan", "bullet_small"));
    map->insert(qMakePair( 26,  1), makeAnimMapping("devan", "remote_idle"));
    map->insert(qMakePair( 26,  2), makeAnimMapping("devan", "remote_fall_warp_out"));
    map->insert(qMakePair( 26,  3), makeAnimMapping("devan", "remote_fall"));
    map->insert(qMakePair( 26,  4), makeAnimMapping("devan", "remote_fall_rotate"));
    map->insert(qMakePair( 26,  5), makeAnimMapping("devan", "remote_fall_warp_in"));
    map->insert(qMakePair( 26,  6), makeAnimMapping("devan", "remote_warp_out"));
    map->insert(qMakePair( 27,  0), makeAnimMapping("devan", "demon_spew_fireball"));
    map->insert(qMakePair( 27,  1), makeAnimMapping("devan", "disoriented"));
    map->insert(qMakePair( 27,  2), makeAnimMapping("devan", "freefall"));
    map->insert(qMakePair( 27,  3), makeAnimMapping("devan", "disoriented_start"));
    map->insert(qMakePair( 27,  4), makeAnimMapping("devan", "demon_fireball"));
    map->insert(qMakePair( 27,  5), makeAnimMapping("devan", "demon_fly"));
    map->insert(qMakePair( 27,  6), makeAnimMapping("devan", "demon_transform_start"));
    map->insert(qMakePair( 27,  7), makeAnimMapping("devan", "demon_transform_end"));
    map->insert(qMakePair( 27,  8), makeAnimMapping("devan", "disarmed_idle"));
    map->insert(qMakePair( 27,  9), makeAnimMapping("devan", "demon_turn"));
    map->insert(qMakePair( 27, 10), makeAnimMapping("devan", "disarmed_warp_in"));
    map->insert(qMakePair( 27, 11), makeAnimMapping("devan", "disoriented_warp_out"));
    map->insert(qMakePair( 27, 12), makeAnimMapping("devan", "disarmed"));
    map->insert(qMakePair( 27, 13), makeAnimMapping("devan", "crouch"));
    map->insert(qMakePair( 27, 14), makeAnimMapping("devan", "shoot"));
    map->insert(qMakePair( 27, 15), makeAnimMapping("devan", "disarmed_gun"));
    map->insert(qMakePair( 27, 16), makeAnimMapping("devan", "jump"));
    map->insert(qMakePair( 27, 17), makeAnimMapping("devan", "bullet"));
    map->insert(qMakePair( 27, 18), makeAnimMapping("devan", "run"));
    map->insert(qMakePair( 27, 19), makeAnimMapping("devan", "run_end"));
    map->insert(qMakePair( 27, 20), makeAnimMapping("devan", "jump_end"));
    map->insert(qMakePair( 27, 21), makeAnimMapping("devan", "idle"));
    map->insert(qMakePair( 27, 22), makeAnimMapping("devan", "warp_in"));
    map->insert(qMakePair( 27, 23), makeAnimMapping("devan", "warp_out"));
    map->insert(qMakePair( 28,  0), makeAnimMapping("pole", "diamondus", DIAMONDUS_POLE_PALETTE));
    map->insert(qMakePair( 29,  0), makeAnimMapping("doggy", "attack"));
    map->insert(qMakePair( 29,  1), makeAnimMapping("doggy", "walk"));
    map->insert(qMakePair( 30,  0), makeAnimMapping("unimplemented", "door"));
    map->insert(qMakePair( 30,  1), makeAnimMapping("unimplemented", "door_enter_jazz_spaz"));
    map->insert(qMakePair( 31,  0), makeAnimMapping("dragonfly", "idle"));
    map->insert(qMakePair( 32,  0), makeAnimMapping("dragon", "attack"));
    map->insert(qMakePair( 32,  1), makeAnimMapping("dragon", "idle"));
    map->insert(qMakePair( 32,  2), makeAnimMapping("dragon", "turn"));
    if (useOffsets) { offset += 1; }
    map->insert(qMakePair( 38 - offset,  0), makeAnimMapping("eva", "blink"));
    map->insert(qMakePair( 38 - offset,  1), makeAnimMapping("eva", "idle"));
    map->insert(qMakePair( 38 - offset,  2), makeAnimMapping("eva", "kiss_start"));
    map->insert(qMakePair( 38 - offset,  3), makeAnimMapping("eva", "kiss_end"));
    map->insert(qMakePair( 39 - offset,  0), makeAnimMapping("ui", "icon_birdy"));
    map->insert(qMakePair( 39 - offset,  1), makeAnimMapping("ui", "icon_birdy_yellow"));
    map->insert(qMakePair( 39 - offset,  2), makeAnimMapping("ui", "icon_frog"));
    map->insert(qMakePair( 39 - offset,  3), makeAnimMapping("ui", "icon_jazz"));
    if (!useOffsets) {
        offset_local = 0;
        map->insert(qMakePair( 39 - offset,  4), makeAnimMapping("ui", "icon_lori"));
    } else {
        offset_local = 1;
    }
    map->insert(qMakePair( 39 - offset,  5 - offset_local), makeAnimMapping("ui", "icon_spaz"));
    map->insert(qMakePair( 41 - offset,  0), makeAnimMapping("chick", "attack"));
    map->insert(qMakePair( 41 - offset,  1), makeAnimMapping("chick", "walk"));
    map->insert(qMakePair( 42 - offset,  0), makeAnimMapping("fencer", "attack"));
    map->insert(qMakePair( 42 - offset,  1), makeAnimMapping("fencer", "idle"));
    map->insert(qMakePair( 43 - offset,  0), makeAnimMapping("fish", "attack"));
    map->insert(qMakePair( 43 - offset,  1), makeAnimMapping("fish", "idle"));
    map->insert(qMakePair( 44 - offset,  0), makeAnimMapping("ctf", "arrow"));
    map->insert(qMakePair( 44 - offset,  1), makeAnimMapping("ctf", "base"));
    map->insert(qMakePair( 44 - offset,  2), makeAnimMapping("ctf", "lights"));
    map->insert(qMakePair( 44 - offset,  3), makeAnimMapping("ctf", "flag_blue"));
    map->insert(qMakePair( 44 - offset,  4), makeAnimMapping("ui", "ctf_flag_blue"));
    map->insert(qMakePair( 44 - offset,  5), makeAnimMapping("ctf", "base_eva"));
    map->insert(qMakePair( 44 - offset,  6), makeAnimMapping("ctf", "base_eva_cheer"));
    map->insert(qMakePair( 44 - offset,  7), makeAnimMapping("ctf", "flag_red"));
    map->insert(qMakePair( 44 - offset,  8), makeAnimMapping("ui", "ctf_flag_red"));
    map->insert(qMakePair( 46 - offset,  0), makeAnimMapping("ui", "font_medium"));
    map->insert(qMakePair( 46 - offset,  1), makeAnimMapping("ui", "font_small"));
    map->insert(qMakePair( 46 - offset,  2), makeAnimMapping("ui", "font_large"));
    map->insert(qMakePair( 46 - offset,  3), makeAnimMapping("ui", "logo"));
    map->insert(qMakePair( 47 - offset,  0), makeAnimMapping("frog", "fall_land"));
    map->insert(qMakePair( 47 - offset,  1), makeAnimMapping("frog", "hurt"));
    map->insert(qMakePair( 47 - offset,  2), makeAnimMapping("frog", "idle"));
    map->insert(qMakePair( 47 - offset,  3), makeAnimMapping("jazz", "transform_frog"));
    map->insert(qMakePair( 47 - offset,  4), makeAnimMapping("frog", "fall"));
    map->insert(qMakePair( 47 - offset,  5), makeAnimMapping("frog", "jump_start"));
    map->insert(qMakePair( 47 - offset,  6), makeAnimMapping("frog", "crouch"));
    if (useOffsets) {
        offset_local = 1;
    } else {
        map->insert(qMakePair( 47 - offset,  7), makeAnimMapping("lori", "transform_frog"));
    }
    map->insert(qMakePair( 47 - offset,  8 - offset_local), makeAnimMapping("frog", "tongue_diag_upright"));
    map->insert(qMakePair( 47 - offset,  9 - offset_local), makeAnimMapping("frog", "tongue_hor"));
    map->insert(qMakePair( 47 - offset, 10 - offset_local), makeAnimMapping("frog", "tongue_ver"));
    map->insert(qMakePair( 47 - offset, 11 - offset_local), makeAnimMapping("spaz", "transform_frog"));
    map->insert(qMakePair( 47 - offset, 12 - offset_local), makeAnimMapping("frog", "run"));
    map->insert(qMakePair( 48 - offset,  0), makeAnimMapping("platform", "carrotus_fruit"));
    map->insert(qMakePair( 48 - offset,  1), makeAnimMapping("platform", "carrotus_fruit_chain"));
    map->insert(qMakePair( 49 - offset,  0), makeAnimMapping("pickup", "gem_gemring", GEM_PALETTE));
    map->insert(qMakePair( 50 - offset,  0), makeAnimMapping("unimplemented", "boxing_glove_stiff"));
    map->insert(qMakePair( 50 - offset,  1), makeAnimMapping("unimplemented", "boxing_glove_stiff_idle"));
    map->insert(qMakePair( 50 - offset,  2), makeAnimMapping("unimplemented", "boxing_glove_normal"));
    map->insert(qMakePair( 50 - offset,  3), makeAnimMapping("unimplemented", "boxing_glove_normal_idle"));
    map->insert(qMakePair( 50 - offset,  4), makeAnimMapping("unimplemented", "boxing_glove_relaxed"));
    map->insert(qMakePair( 50 - offset,  5), makeAnimMapping("unimplemented", "boxing_glove_relaxed_idle"));
    map->insert(qMakePair( 51 - offset,  0), makeAnimMapping("platform", "carrotus_grass"));
    map->insert(qMakePair( 51 - offset,  1), makeAnimMapping("platform", "carrotus_grass_chain"));
    map->insert(qMakePair( 52 - offset,  0), makeAnimMapping("mad_hatter", "cup"));
    map->insert(qMakePair( 52 - offset,  1), makeAnimMapping("mad_hatter", "hat"));
    map->insert(qMakePair( 52 - offset,  2), makeAnimMapping("mad_hatter", "attack"));
    map->insert(qMakePair( 52 - offset,  3), makeAnimMapping("mad_hatter", "bullet_spit"));
    map->insert(qMakePair( 52 - offset,  4), makeAnimMapping("mad_hatter", "walk"));
    map->insert(qMakePair( 53 - offset,  0), makeAnimMapping("helmut", "idle"));
    map->insert(qMakePair( 53 - offset,  1), makeAnimMapping("helmut", "walk"));
    if (useOffsets) {
        map->insert(qMakePair( 55 - offset,  0), makeAnimMapping("jazz", "unused_unknown_disoriented"));
        offset_local = 1;
    }
    map->insert(qMakePair( 55 - offset,  0 + offset_local), makeAnimMapping("jazz", "airboard"));
    map->insert(qMakePair( 55 - offset,  1 + offset_local), makeAnimMapping("jazz", "airboard_turn"));
    map->insert(qMakePair( 55 - offset,  2 + offset_local), makeAnimMapping("jazz", "buttstomp_end"));
    map->insert(qMakePair( 55 - offset,  3 + offset_local), makeAnimMapping("jazz", "corpse"));
    map->insert(qMakePair( 55 - offset,  4 + offset_local), makeAnimMapping("jazz", "die"));
    map->insert(qMakePair( 55 - offset,  5 + offset_local), makeAnimMapping("jazz", "crouch_start"));
    map->insert(qMakePair( 55 - offset,  6 + offset_local), makeAnimMapping("jazz", "crouch"));
    map->insert(qMakePair( 55 - offset,  7 + offset_local), makeAnimMapping("jazz", "crouch_shoot"));
    map->insert(qMakePair( 55 - offset,  8 + offset_local), makeAnimMapping("jazz", "crouch_end"));
    if (useOffsets) {
        map->insert(qMakePair( 55 - offset,  9 + offset_local), makeAnimMapping("jazz", "unused_door_enter"));
        offset_local += 1;
    }
    map->insert(qMakePair( 55 - offset,  9 + offset_local), makeAnimMapping("jazz", "vine_walk"));
    map->insert(qMakePair( 55 - offset, 10 + offset_local), makeAnimMapping("jazz", "eol"));
    map->insert(qMakePair( 55 - offset, 11 + offset_local), makeAnimMapping("jazz", "fall"));
    map->insert(qMakePair( 55 - offset, 12 + offset_local), makeAnimMapping("jazz", "buttstomp"));
    map->insert(qMakePair( 55 - offset, 13 + offset_local), makeAnimMapping("jazz", "fall_end"));
    map->insert(qMakePair( 55 - offset, 14 + offset_local), makeAnimMapping("jazz", "shoot"));
    map->insert(qMakePair( 55 - offset, 15 + offset_local), makeAnimMapping("jazz", "shoot_ver"));
    map->insert(qMakePair( 55 - offset, 16 + offset_local), makeAnimMapping("jazz", "shoot_end"));
    map->insert(qMakePair( 55 - offset, 17 + offset_local), makeAnimMapping("jazz", "transform_frog_end"));
    if (useOffsets) {
        map->insert(qMakePair( 55 - offset, 18 + offset_local), makeAnimMapping("jazz", "unused_ledge_climb"));
        offset_local += 1;
    }
    map->insert(qMakePair( 55 - offset, 18 + offset_local), makeAnimMapping("jazz", "vine_shoot_start"));
    map->insert(qMakePair( 55 - offset, 19 + offset_local), makeAnimMapping("jazz", "vine_shoot_up_end"));
    map->insert(qMakePair( 55 - offset, 20 + offset_local), makeAnimMapping("jazz", "vine_shoot_up"));
    map->insert(qMakePair( 55 - offset, 21 + offset_local), makeAnimMapping("jazz", "vine_idle"));
    map->insert(qMakePair( 55 - offset, 22 + offset_local), makeAnimMapping("jazz", "vine_idle_flavor"));
    map->insert(qMakePair( 55 - offset, 23 + offset_local), makeAnimMapping("jazz", "vine_shoot_end"));
    map->insert(qMakePair( 55 - offset, 24 + offset_local), makeAnimMapping("jazz", "vine_shoot"));
    map->insert(qMakePair( 55 - offset, 25 + offset_local), makeAnimMapping("jazz", "copter"));
    map->insert(qMakePair( 55 - offset, 26 + offset_local), makeAnimMapping("jazz", "copter_shoot_start"));
    map->insert(qMakePair( 55 - offset, 27 + offset_local), makeAnimMapping("jazz", "copter_shoot"));
    map->insert(qMakePair( 55 - offset, 28 + offset_local), makeAnimMapping("jazz", "pole_h"));
    map->insert(qMakePair( 55 - offset, 29 + offset_local), makeAnimMapping("jazz", "hurt"));
    map->insert(qMakePair( 55 - offset, 30 + offset_local), makeAnimMapping("jazz", "idle_flavor_1"));
    map->insert(qMakePair( 55 - offset, 31 + offset_local), makeAnimMapping("jazz", "idle_flavor_2"));
    map->insert(qMakePair( 55 - offset, 32 + offset_local), makeAnimMapping("jazz", "idle_flavor_3"));
    map->insert(qMakePair( 55 - offset, 33 + offset_local), makeAnimMapping("jazz", "idle_flavor_4"));
    map->insert(qMakePair( 55 - offset, 34 + offset_local), makeAnimMapping("jazz", "idle_flavor_5"));
    map->insert(qMakePair( 55 - offset, 35 + offset_local), makeAnimMapping("jazz", "vine_shoot_up_start"));
    map->insert(qMakePair( 55 - offset, 36 + offset_local), makeAnimMapping("jazz", "fall_shoot"));
    map->insert(qMakePair( 55 - offset, 37 + offset_local), makeAnimMapping("jazz", "jump_unknown_1"));
    map->insert(qMakePair( 55 - offset, 38 + offset_local), makeAnimMapping("jazz", "jump_unknown_2"));
    map->insert(qMakePair( 55 - offset, 39 + offset_local), makeAnimMapping("jazz", "jump"));
    map->insert(qMakePair( 55 - offset, 40 + offset_local), makeAnimMapping("jazz", "ledge"));
    map->insert(qMakePair( 55 - offset, 41 + offset_local), makeAnimMapping("jazz", "lift"));
    map->insert(qMakePair( 55 - offset, 42 + offset_local), makeAnimMapping("jazz", "lift_jump_light"));
    map->insert(qMakePair( 55 - offset, 43 + offset_local), makeAnimMapping("jazz", "lift_jump_heavy"));
    map->insert(qMakePair( 55 - offset, 44 + offset_local), makeAnimMapping("jazz", "lookup_start"));
    if (useOffsets) {
        map->insert(qMakePair( 55 - offset, 45 + offset_local), makeAnimMapping("jazz", "unused_run_diag_upright"));
        map->insert(qMakePair( 55 - offset, 46 + offset_local), makeAnimMapping("jazz", "unused_run_ver_up"));
        map->insert(qMakePair( 55 - offset, 47 + offset_local), makeAnimMapping("jazz", "unused_run_diag_upleft_reverse"));
        map->insert(qMakePair( 55 - offset, 48 + offset_local), makeAnimMapping("jazz", "unused_run_reverse"));
        map->insert(qMakePair( 55 - offset, 49 + offset_local), makeAnimMapping("jazz", "unused_run_diag_downleft_reverse"));
        map->insert(qMakePair( 55 - offset, 50 + offset_local), makeAnimMapping("jazz", "unused_run_ver_down"));
        map->insert(qMakePair( 55 - offset, 51 + offset_local), makeAnimMapping("jazz", "unused_run_diag_downright"));
        offset_local += 7;
    }
    map->insert(qMakePair( 55 - offset, 45 + offset_local), makeAnimMapping("jazz", "dizzy_walk"));
    map->insert(qMakePair( 55 - offset, 46 + offset_local), makeAnimMapping("jazz", "push"));
    map->insert(qMakePair( 55 - offset, 47 + offset_local), makeAnimMapping("jazz", "shoot_start"));
    map->insert(qMakePair( 55 - offset, 48 + offset_local), makeAnimMapping("jazz", "revup_start"));
    map->insert(qMakePair( 55 - offset, 49 + offset_local), makeAnimMapping("jazz", "revup"));
    map->insert(qMakePair( 55 - offset, 50 + offset_local), makeAnimMapping("jazz", "revup_end"));
    map->insert(qMakePair( 55 - offset, 51 + offset_local), makeAnimMapping("jazz", "fall_diag"));
    if (useOffsets) {
        map->insert(qMakePair( 55 - offset, 52 + offset_local), makeAnimMapping("jazz", "unused_unknown_mid_frame"));
        offset_local += 1;
    }
    map->insert(qMakePair( 55 - offset, 52 + offset_local), makeAnimMapping("jazz", "jump_diag"));
    if (useOffsets) {
        map->insert(qMakePair( 55 - offset, 53 + offset_local), makeAnimMapping("jazz", "unused_jump_shoot_end"));
        map->insert(qMakePair( 55 - offset, 54 + offset_local), makeAnimMapping("jazz", "unused_jump_shoot_ver_start"));
        map->insert(qMakePair( 55 - offset, 55 + offset_local), makeAnimMapping("jazz", "unused_jump_shoot_ver"));
        offset_local += 3;
    }
    map->insert(qMakePair( 55 - offset, 53 + offset_local), makeAnimMapping("jazz", "ball"));
    map->insert(qMakePair( 55 - offset, 54 + offset_local), makeAnimMapping("jazz", "run"));
    if (useOffsets) {
        map->insert(qMakePair( 55 - offset, 55 + offset_local), makeAnimMapping("jazz", "unused_run_aim_diag"));
        offset_local += 1;
    }
    map->insert(qMakePair( 55 - offset, 55 + offset_local), makeAnimMapping("jazz", "dash_start"));
    map->insert(qMakePair( 55 - offset, 56 + offset_local), makeAnimMapping("jazz", "dash"));
    map->insert(qMakePair( 55 - offset, 57 + offset_local), makeAnimMapping("jazz", "dash_stop"));
    map->insert(qMakePair( 55 - offset, 58 + offset_local), makeAnimMapping("jazz", "walk_stop"));
    map->insert(qMakePair( 55 - offset, 59 + offset_local), makeAnimMapping("jazz", "run_stop"));
    map->insert(qMakePair( 55 - offset, 60 + offset_local), makeAnimMapping("jazz", "spring"));
    map->insert(qMakePair( 55 - offset, 61 + offset_local), makeAnimMapping("jazz", "idle"));
    map->insert(qMakePair( 55 - offset, 62 + offset_local), makeAnimMapping("jazz", "uppercut"));
    map->insert(qMakePair( 55 - offset, 63 + offset_local), makeAnimMapping("jazz", "uppercut_end"));
    map->insert(qMakePair( 55 - offset, 64 + offset_local), makeAnimMapping("jazz", "uppercut_start"));
    map->insert(qMakePair( 55 - offset, 65 + offset_local), makeAnimMapping("jazz", "dizzy"));
    map->insert(qMakePair( 55 - offset, 66 + offset_local), makeAnimMapping("jazz", "swim_diag_downright"));
    map->insert(qMakePair( 55 - offset, 67 + offset_local), makeAnimMapping("jazz", "swim_right"));
    map->insert(qMakePair( 55 - offset, 68 + offset_local), makeAnimMapping("jazz", "swim_diag_right_to_downright"));
    map->insert(qMakePair( 55 - offset, 69 + offset_local), makeAnimMapping("jazz", "swim_diag_right_to_upright"));
    map->insert(qMakePair( 55 - offset, 70 + offset_local), makeAnimMapping("jazz", "swim_diag_upright"));
    map->insert(qMakePair( 55 - offset, 71 + offset_local), makeAnimMapping("jazz", "swing"));
    map->insert(qMakePair( 55 - offset, 72 + offset_local), makeAnimMapping("jazz", "warp_in"));
    map->insert(qMakePair( 55 - offset, 73 + offset_local), makeAnimMapping("jazz", "warp_out_freefall"));
    map->insert(qMakePair( 55 - offset, 74 + offset_local), makeAnimMapping("jazz", "freefall"));
    map->insert(qMakePair( 55 - offset, 75 + offset_local), makeAnimMapping("jazz", "warp_in_freefall"));
    map->insert(qMakePair( 55 - offset, 76 + offset_local), makeAnimMapping("jazz", "warp_out"));
    map->insert(qMakePair( 55 - offset, 77 + offset_local), makeAnimMapping("jazz", "pole_v"));
    if (useOffsets) {
        map->insert(qMakePair( 55 - offset, 78 + offset_local), makeAnimMapping("jazz", "unused_unarmed_crouch_start"));
        map->insert(qMakePair( 55 - offset, 79 + offset_local), makeAnimMapping("jazz", "unused_unarmed_crouch_end"));
        map->insert(qMakePair( 55 - offset, 80 + offset_local), makeAnimMapping("jazz", "unused_unarmed_fall"));
        map->insert(qMakePair( 55 - offset, 81 + offset_local), makeAnimMapping("jazz", "unused_unarmed_hurt"));
        map->insert(qMakePair( 55 - offset, 82 + offset_local), makeAnimMapping("jazz", "unused_unarmed_idle"));
        map->insert(qMakePair( 55 - offset, 83 + offset_local), makeAnimMapping("jazz", "unused_unarmed_jump"));
        map->insert(qMakePair( 55 - offset, 84 + offset_local), makeAnimMapping("jazz", "unused_unarmed_crouch_end_2"));
        map->insert(qMakePair( 55 - offset, 85 + offset_local), makeAnimMapping("jazz", "unused_lookup_start"));
        map->insert(qMakePair( 55 - offset, 86 + offset_local), makeAnimMapping("jazz", "unused_unarmed_run"));
        map->insert(qMakePair( 55 - offset, 87 + offset_local), makeAnimMapping("jazz", "unused_unarmed_stare"));
        map->insert(qMakePair( 55 - offset, 88 + offset_local), makeAnimMapping("jazz", "unused_lookup_start_2"));
        map->insert(qMakePair( 56 - offset,  0), makeAnimMapping("unimplemented", "bonus_jazz_idle_flavor_2"));
        map->insert(qMakePair( 56 - offset,  1), makeAnimMapping("unimplemented", "bonus_jazz_jump_2"));
        map->insert(qMakePair( 56 - offset,  2), makeAnimMapping("unimplemented", "bonus_jazz_dash_2"));
        map->insert(qMakePair( 56 - offset,  3), makeAnimMapping("unimplemented", "bonus_jazz_rotate_2"));
        map->insert(qMakePair( 56 - offset,  4), makeAnimMapping("unimplemented", "bonus_jazz_ball_2"));
        map->insert(qMakePair( 56 - offset,  5), makeAnimMapping("unimplemented", "bonus_jazz_run_2"));
        map->insert(qMakePair( 56 - offset,  6), makeAnimMapping("unimplemented", "bonus_jazz_idle_2"));
        offset_local = 7;
    }
    map->insert(qMakePair( 56 - offset,  0 + offset_local), makeAnimMapping("unimplemented", "bonus_jazz_idle_flavor"));
    map->insert(qMakePair( 56 - offset,  1 + offset_local), makeAnimMapping("unimplemented", "bonus_jazz_jump"));
    map->insert(qMakePair( 56 - offset,  2 + offset_local), makeAnimMapping("unimplemented", "bonus_jazz_ball"));
    map->insert(qMakePair( 56 - offset,  3 + offset_local), makeAnimMapping("unimplemented", "bonus_jazz_run"));
    map->insert(qMakePair( 56 - offset,  4 + offset_local), makeAnimMapping("unimplemented", "bonus_jazz_dash"));
    map->insert(qMakePair( 56 - offset,  5 + offset_local), makeAnimMapping("unimplemented", "bonus_jazz_rotate"));
    map->insert(qMakePair( 56 - offset,  6 + offset_local), makeAnimMapping("unimplemented", "bonus_jazz_idle"));
    map->insert(qMakePair( 58 - offset,  0), makeAnimMapping("pole", "jungle", JUNGLE_POLE_PALETTE));
    map->insert(qMakePair( 59 - offset,  0), makeAnimMapping("lab_rat", "attack"));
    map->insert(qMakePair( 59 - offset,  1), makeAnimMapping("lab_rat", "idle"));
    map->insert(qMakePair( 59 - offset,  2), makeAnimMapping("lab_rat", "walk"));
    map->insert(qMakePair( 60 - offset,  0), makeAnimMapping("lizard", "copter_attack"));
    map->insert(qMakePair( 60 - offset,  1), makeAnimMapping("lizard", "bomb"));
    map->insert(qMakePair( 60 - offset,  2), makeAnimMapping("lizard", "copter_idle"));
    map->insert(qMakePair( 60 - offset,  3), makeAnimMapping("lizard", "copter"));
    map->insert(qMakePair( 60 - offset,  4), makeAnimMapping("lizard", "walk"));
    if (useOffsets) {
        offset += 3;
    } else {
        map->insert(qMakePair( 61 - offset,  0), makeAnimMapping("lori", "airboard"));
        map->insert(qMakePair( 61 - offset,  1), makeAnimMapping("lori", "airboard_turn"));
        map->insert(qMakePair( 61 - offset,  2), makeAnimMapping("lori", "buttstomp_end"));
        map->insert(qMakePair( 61 - offset,  3), makeAnimMapping("lori", "corpse"));
        map->insert(qMakePair( 61 - offset,  4), makeAnimMapping("lori", "die"));
        map->insert(qMakePair( 61 - offset,  5), makeAnimMapping("lori", "crouch_start"));
        map->insert(qMakePair( 61 - offset,  6), makeAnimMapping("lori", "crouch"));
        map->insert(qMakePair( 61 - offset,  7), makeAnimMapping("lori", "crouch_shoot"));
        map->insert(qMakePair( 61 - offset,  8), makeAnimMapping("lori", "crouch_end"));
        map->insert(qMakePair( 61 - offset,  9), makeAnimMapping("lori", "vine_walk"));
        map->insert(qMakePair( 61 - offset, 10), makeAnimMapping("lori", "eol"));
        map->insert(qMakePair( 61 - offset, 11), makeAnimMapping("lori", "fall"));
        map->insert(qMakePair( 61 - offset, 12), makeAnimMapping("lori", "buttstomp"));
        map->insert(qMakePair( 61 - offset, 13), makeAnimMapping("lori", "fall_end"));
        map->insert(qMakePair( 61 - offset, 14), makeAnimMapping("lori", "shoot"));
        map->insert(qMakePair( 61 - offset, 15), makeAnimMapping("lori", "shoot_ver"));
        map->insert(qMakePair( 61 - offset, 16), makeAnimMapping("lori", "shoot_end"));
        map->insert(qMakePair( 61 - offset, 17), makeAnimMapping("lori", "transform_frog_end"));
        map->insert(qMakePair( 61 - offset, 18), makeAnimMapping("lori", "vine_shoot_start"));
        map->insert(qMakePair( 61 - offset, 19), makeAnimMapping("lori", "vine_shoot_up_end"));
        map->insert(qMakePair( 61 - offset, 20), makeAnimMapping("lori", "vine_shoot_up"));
        map->insert(qMakePair( 61 - offset, 21), makeAnimMapping("lori", "vine_idle"));
        map->insert(qMakePair( 61 - offset, 22), makeAnimMapping("lori", "vine_idle_flavor"));
        map->insert(qMakePair( 61 - offset, 23), makeAnimMapping("lori", "vine_shoot_end"));
        map->insert(qMakePair( 61 - offset, 24), makeAnimMapping("lori", "vine_shoot"));
        map->insert(qMakePair( 61 - offset, 25), makeAnimMapping("lori", "copter"));
        map->insert(qMakePair( 61 - offset, 26), makeAnimMapping("lori", "copter_shoot_start"));
        map->insert(qMakePair( 61 - offset, 27), makeAnimMapping("lori", "copter_shoot"));
        map->insert(qMakePair( 61 - offset, 28), makeAnimMapping("lori", "pole_h"));
        map->insert(qMakePair( 61 - offset, 29), makeAnimMapping("lori", "hurt"));
        map->insert(qMakePair( 61 - offset, 30), makeAnimMapping("lori", "idle_flavor_1"));
        map->insert(qMakePair( 61 - offset, 31), makeAnimMapping("lori", "idle_flavor_2"));
        map->insert(qMakePair( 61 - offset, 32), makeAnimMapping("lori", "idle_flavor_3"));
        map->insert(qMakePair( 61 - offset, 33), makeAnimMapping("lori", "idle_flavor_4"));
        map->insert(qMakePair( 61 - offset, 34), makeAnimMapping("lori", "idle_flavor_5"));
        map->insert(qMakePair( 61 - offset, 35), makeAnimMapping("lori", "vine_shoot_up_start"));
        map->insert(qMakePair( 61 - offset, 36), makeAnimMapping("lori", "fall_shoot"));
        map->insert(qMakePair( 61 - offset, 37), makeAnimMapping("lori", "jump_unknown_1"));
        map->insert(qMakePair( 61 - offset, 38), makeAnimMapping("lori", "jump_unknown_2"));
        map->insert(qMakePair( 61 - offset, 39), makeAnimMapping("lori", "jump"));
        map->insert(qMakePair( 61 - offset, 40), makeAnimMapping("lori", "ledge"));
        map->insert(qMakePair( 61 - offset, 41), makeAnimMapping("lori", "lift"));
        map->insert(qMakePair( 61 - offset, 42), makeAnimMapping("lori", "lift_jump_light"));
        map->insert(qMakePair( 61 - offset, 43), makeAnimMapping("lori", "lift_jump_heavy"));
        map->insert(qMakePair( 61 - offset, 44), makeAnimMapping("lori", "lookup_start"));
        map->insert(qMakePair( 61 - offset, 45), makeAnimMapping("lori", "dizzy_walk"));
        map->insert(qMakePair( 61 - offset, 46), makeAnimMapping("lori", "push"));
        map->insert(qMakePair( 61 - offset, 47), makeAnimMapping("lori", "shoot_start"));
        map->insert(qMakePair( 61 - offset, 48), makeAnimMapping("lori", "revup_start"));
        map->insert(qMakePair( 61 - offset, 49), makeAnimMapping("lori", "revup"));
        map->insert(qMakePair( 61 - offset, 50), makeAnimMapping("lori", "revup_end"));
        map->insert(qMakePair( 61 - offset, 51), makeAnimMapping("lori", "fall_diag"));
        map->insert(qMakePair( 61 - offset, 52), makeAnimMapping("lori", "jump_diag"));
        map->insert(qMakePair( 61 - offset, 53), makeAnimMapping("lori", "ball"));
        map->insert(qMakePair( 61 - offset, 54), makeAnimMapping("lori", "run"));
        map->insert(qMakePair( 61 - offset, 55), makeAnimMapping("lori", "dash_start"));
        map->insert(qMakePair( 61 - offset, 56), makeAnimMapping("lori", "dash"));
        map->insert(qMakePair( 61 - offset, 57), makeAnimMapping("lori", "dash_stop"));
        map->insert(qMakePair( 61 - offset, 58), makeAnimMapping("lori", "walk_stop"));
        map->insert(qMakePair( 61 - offset, 59), makeAnimMapping("lori", "run_stop"));
        map->insert(qMakePair( 61 - offset, 60), makeAnimMapping("lori", "spring"));
        map->insert(qMakePair( 61 - offset, 61), makeAnimMapping("lori", "idle"));
        map->insert(qMakePair( 61 - offset, 62), makeAnimMapping("lori", "uppercut_placeholder_1"));
        map->insert(qMakePair( 61 - offset, 63), makeAnimMapping("lori", "uppercut_placeholder_2"));
        map->insert(qMakePair( 61 - offset, 64), makeAnimMapping("lori", "sidekick"));
        map->insert(qMakePair( 61 - offset, 65), makeAnimMapping("lori", "dizzy"));
        map->insert(qMakePair( 61 - offset, 66), makeAnimMapping("lori", "swim_diag_downright"));
        map->insert(qMakePair( 61 - offset, 67), makeAnimMapping("lori", "swim_right"));
        map->insert(qMakePair( 61 - offset, 68), makeAnimMapping("lori", "swim_diag_right_to_downright"));
        map->insert(qMakePair( 61 - offset, 69), makeAnimMapping("lori", "swim_diag_right_to_upright"));
        map->insert(qMakePair( 61 - offset, 70), makeAnimMapping("lori", "swim_diag_upright"));
        map->insert(qMakePair( 61 - offset, 71), makeAnimMapping("lori", "swing"));
        map->insert(qMakePair( 61 - offset, 72), makeAnimMapping("lori", "warp_in"));
        map->insert(qMakePair( 61 - offset, 73), makeAnimMapping("lori", "warp_out_freefall"));
        map->insert(qMakePair( 61 - offset, 74), makeAnimMapping("lori", "freefall"));
        map->insert(qMakePair( 61 - offset, 75), makeAnimMapping("lori", "warp_in_freefall"));
        map->insert(qMakePair( 61 - offset, 76), makeAnimMapping("lori", "warp_out"));
        map->insert(qMakePair( 61 - offset, 77), makeAnimMapping("lori", "pole_v"));
        map->insert(qMakePair( 62 - offset,  0), makeAnimMapping("lori", "idle_2"));
        map->insert(qMakePair( 62 - offset,  1), makeAnimMapping("lori", "gun"));
    }
    map->insert(qMakePair( 64 - offset,  0), makeAnimMapping("ui", "multiplayer_char", MENU_PALETTE));
    map->insert(qMakePair( 64 - offset,  1), makeAnimMapping("ui", "multiplayer_color", MENU_PALETTE));
    map->insert(qMakePair( 64 - offset,  2), makeAnimMapping("ui", "character_art_difficulty_jazz", MENU_PALETTE));
    if (useOffsets) {
        offset_local = 1;
    } else {
        map->insert(qMakePair(64 - offset, 3), makeAnimMapping("ui", "character_art_difficulty_lori", MENU_PALETTE));
    }
    map->insert(qMakePair( 64 - offset,  4 - offset_local), makeAnimMapping("ui", "character_art_difficulty_spaz", MENU_PALETTE));
    map->insert(qMakePair( 64 - offset,  5 - offset_local), makeAnimMapping("unimplemented", "key", MENU_PALETTE));
    map->insert(qMakePair( 64 - offset,  6 - offset_local), makeAnimMapping("ui", "loading_bar", MENU_PALETTE));
    map->insert(qMakePair( 64 - offset,  7 - offset_local), makeAnimMapping("ui", "multiplayer_mode", MENU_PALETTE));
    map->insert(qMakePair( 64 - offset,  8 - offset_local), makeAnimMapping("ui", "character_name_jazz", MENU_PALETTE));
    if (useOffsets) {
        offset_local += 1;
    } else {
        map->insert(qMakePair( 64 - offset,  9), makeAnimMapping("ui", "character_name_lori", MENU_PALETTE));
    }
    map->insert(qMakePair( 64 - offset, 10 - offset_local), makeAnimMapping("ui", "character_name_spaz", MENU_PALETTE));
    map->insert(qMakePair( 64 - offset, 11 - offset_local), makeAnimMapping("ui", "character_art_jazz", MENU_PALETTE));
    if (useOffsets) {
        offset_local += 1;
    } else {
        map->insert(qMakePair( 64 - offset, 12 - offset_local), makeAnimMapping("ui", "character_art_lori", MENU_PALETTE));
    }
    map->insert(qMakePair( 64 - offset, 13 - offset_local), makeAnimMapping("ui", "character_art_spaz", MENU_PALETTE));
    map->insert(qMakePair( 65 - offset,  0), makeAnimMapping("ui", "font_medium_2", MENU_PALETTE));
    map->insert(qMakePair( 65 - offset,  1), makeAnimMapping("ui", "font_small_2", MENU_PALETTE));
    map->insert(qMakePair( 65 - offset,  2), makeAnimMapping("ui", "logo_large", MENU_PALETTE));
    if (useOffsets) {
        offset_local = 1;
    } else {
        map->insert(qMakePair( 65 - offset,  3), makeAnimMapping("ui", "expansion_title", MENU_PALETTE));
    }
    map->insert(qMakePair( 65 - offset,  4 - offset_local), makeAnimMapping("ui", "logo_small", MENU_PALETTE));
    map->insert(qMakePair( 67 - offset,  0), makeAnimMapping("monkey", "banana"));
    map->insert(qMakePair( 67 - offset,  1), makeAnimMapping("monkey", "banana_splat"));
    map->insert(qMakePair( 67 - offset,  2), makeAnimMapping("monkey", "jump"));
    map->insert(qMakePair( 67 - offset,  3), makeAnimMapping("monkey", "walk_start"));
    map->insert(qMakePair( 67 - offset,  4), makeAnimMapping("monkey", "walk_end"));
    map->insert(qMakePair( 67 - offset,  5), makeAnimMapping("monkey", "attack"));
    map->insert(qMakePair( 67 - offset,  6), makeAnimMapping("monkey", "walk"));
    map->insert(qMakePair( 68 - offset,  0), makeAnimMapping("moth", "green"));
    map->insert(qMakePair( 68 - offset,  1), makeAnimMapping("moth", "gray"));
    map->insert(qMakePair( 68 - offset,  2), makeAnimMapping("moth", "purple"));
    map->insert(qMakePair( 68 - offset,  3), makeAnimMapping("moth", "pink"));
    map->insert(qMakePair( 71 - offset,  0), makeAnimMapping("pickup", "1up"));
    map->insert(qMakePair( 71 - offset,  1), makeAnimMapping("pickup", "food_apple"));
    map->insert(qMakePair( 71 - offset,  2), makeAnimMapping("pickup", "food_banana"));
    map->insert(qMakePair( 71 - offset,  3), makeAnimMapping("object", "container_barrel"));
    map->insert(qMakePair( 71 - offset,  4), makeAnimMapping("common", "poof_brown"));
    map->insert(qMakePair( 71 - offset,  5), makeAnimMapping("object", "container_box_crush"));
    map->insert(qMakePair( 71 - offset,  6), makeAnimMapping("object", "container_barrel_shrapnel_1"));
    map->insert(qMakePair( 71 - offset,  7), makeAnimMapping("object", "container_barrel_shrapnel_2"));
    map->insert(qMakePair( 71 - offset,  8), makeAnimMapping("object", "container_barrel_shrapnel_3"));
    map->insert(qMakePair( 71 - offset,  9), makeAnimMapping("object", "container_barrel_shrapnel_4"));
    map->insert(qMakePair( 71 - offset, 10), makeAnimMapping("object", "powerup_shield_bubble"));
    map->insert(qMakePair( 71 - offset, 11), makeAnimMapping("pickup", "food_burger"));
    map->insert(qMakePair( 71 - offset, 12), makeAnimMapping("pickup", "food_cake"));
    map->insert(qMakePair( 71 - offset, 13), makeAnimMapping("pickup", "food_candy"));
    map->insert(qMakePair( 71 - offset, 14), makeAnimMapping("object", "savepoint"));
    map->insert(qMakePair( 71 - offset, 15), makeAnimMapping("pickup", "food_cheese"));
    map->insert(qMakePair( 71 - offset, 16), makeAnimMapping("pickup", "food_cherry"));
    map->insert(qMakePair( 71 - offset, 17), makeAnimMapping("pickup", "food_chicken"));
    map->insert(qMakePair( 71 - offset, 18), makeAnimMapping("pickup", "food_chips"));
    map->insert(qMakePair( 71 - offset, 19), makeAnimMapping("pickup", "food_chocolate"));
    map->insert(qMakePair( 71 - offset, 20), makeAnimMapping("pickup", "food_cola"));
    map->insert(qMakePair( 71 - offset, 21), makeAnimMapping("pickup", "carrot"));
    map->insert(qMakePair( 71 - offset, 22), makeAnimMapping("pickup", "gem", GEM_PALETTE));
    map->insert(qMakePair( 71 - offset, 23), makeAnimMapping("pickup", "food_cucumber"));
    map->insert(qMakePair( 71 - offset, 24), makeAnimMapping("pickup", "food_cupcake"));
    map->insert(qMakePair( 71 - offset, 25), makeAnimMapping("pickup", "food_donut"));
    map->insert(qMakePair( 71 - offset, 26), makeAnimMapping("pickup", "food_eggplant"));
    map->insert(qMakePair( 71 - offset, 27), makeAnimMapping("unknown", "green_blast_thing"));
    map->insert(qMakePair( 71 - offset, 28), makeAnimMapping("object", "exit_sign"));
    map->insert(qMakePair( 71 - offset, 29), makeAnimMapping("pickup", "fast_fire_jazz"));
    map->insert(qMakePair( 71 - offset, 30), makeAnimMapping("pickup", "fast_fire_spaz"));
    map->insert(qMakePair( 71 - offset, 31), makeAnimMapping("object", "powerup_shield_fire"));
    map->insert(qMakePair( 71 - offset, 32), makeAnimMapping("pickup", "food_fries"));
    map->insert(qMakePair( 71 - offset, 33), makeAnimMapping("pickup", "fast_feet"));
    map->insert(qMakePair( 71 - offset, 34), makeAnimMapping("object", "gem_super", GEM_PALETTE));
    map->insert(qMakePair( 71 - offset, 35), makeAnimMapping("pickup", "gem_2", GEM_PALETTE));
    map->insert(qMakePair( 71 - offset, 36), makeAnimMapping("pickup", "airboard"));
    map->insert(qMakePair( 71 - offset, 37), makeAnimMapping("pickup", "coin_gold"));
    map->insert(qMakePair( 71 - offset, 38), makeAnimMapping("pickup", "food_grapes"));
    map->insert(qMakePair( 71 - offset, 39), makeAnimMapping("pickup", "food_ham"));
    map->insert(qMakePair( 71 - offset, 40), makeAnimMapping("pickup", "carrot_fly"));
    map->insert(qMakePair( 71 - offset, 41), makeAnimMapping("ui", "heart"));
    map->insert(qMakePair( 71 - offset, 42), makeAnimMapping("pickup", "freeze_enemies"));
    map->insert(qMakePair( 71 - offset, 43), makeAnimMapping("pickup", "food_ice_cream"));
    map->insert(qMakePair( 71 - offset, 44), makeAnimMapping("common", "ice_break_shrapnel_1"));
    map->insert(qMakePair( 71 - offset, 45), makeAnimMapping("common", "ice_break_shrapnel_2"));
    map->insert(qMakePair( 71 - offset, 46), makeAnimMapping("common", "ice_break_shrapnel_3"));
    map->insert(qMakePair( 71 - offset, 47), makeAnimMapping("common", "ice_break_shrapnel_4"));
    map->insert(qMakePair( 71 - offset, 48), makeAnimMapping("pickup", "food_lemon"));
    map->insert(qMakePair( 71 - offset, 49), makeAnimMapping("pickup", "food_lettuce"));
    map->insert(qMakePair( 71 - offset, 50), makeAnimMapping("pickup", "food_lime"));
    map->insert(qMakePair( 71 - offset, 51), makeAnimMapping("object", "powerup_shield_lightning"));
    map->insert(qMakePair( 71 - offset, 52), makeAnimMapping("object", "trigger_crate"));
    map->insert(qMakePair( 71 - offset, 53), makeAnimMapping("pickup", "food_milk"));
    map->insert(qMakePair( 71 - offset, 54), makeAnimMapping("object", "crate_ammo_bouncer"));
    map->insert(qMakePair( 71 - offset, 55), makeAnimMapping("object", "crate_ammo_freezer"));
    map->insert(qMakePair( 71 - offset, 56), makeAnimMapping("object", "crate_ammo_seeker"));
    map->insert(qMakePair( 71 - offset, 57), makeAnimMapping("object", "crate_ammo_rf"));
    map->insert(qMakePair( 71 - offset, 58), makeAnimMapping("object", "crate_ammo_toaster"));
    map->insert(qMakePair( 71 - offset, 59), makeAnimMapping("object", "crate_ammo_tnt"));
    map->insert(qMakePair( 71 - offset, 60), makeAnimMapping("object", "powerup_upgrade_blaster_jazz"));
    map->insert(qMakePair( 71 - offset, 61), makeAnimMapping("object", "powerup_upgrade_bouncer"));
    map->insert(qMakePair( 71 - offset, 62), makeAnimMapping("object", "powerup_upgrade_freezer"));
    map->insert(qMakePair( 71 - offset, 63), makeAnimMapping("object", "powerup_upgrade_seeker"));
    map->insert(qMakePair( 71 - offset, 64), makeAnimMapping("object", "powerup_upgrade_rf"));
    map->insert(qMakePair( 71 - offset, 65), makeAnimMapping("object", "powerup_upgrade_toaster"));
    map->insert(qMakePair( 71 - offset, 66), makeAnimMapping("object", "powerup_upgrade_pepper"));
    map->insert(qMakePair( 71 - offset, 67), makeAnimMapping("object", "powerup_upgrade_electro"));
    map->insert(qMakePair( 71 - offset, 68), makeAnimMapping("object", "powerup_transform_birdy"));
    map->insert(qMakePair( 71 - offset, 69), makeAnimMapping("object", "powerup_transform_birdy_yellow"));
    map->insert(qMakePair( 71 - offset, 70), makeAnimMapping("object", "powerup_swap_characters"));
    map->insert(qMakePair( 71 - offset, 71), makeAnimMapping("pickup", "food_orange"));
    map->insert(qMakePair( 71 - offset, 72), makeAnimMapping("pickup", "carrot_invincibility"));
    map->insert(qMakePair( 71 - offset, 73), makeAnimMapping("pickup", "food_peach"));
    map->insert(qMakePair( 71 - offset, 74), makeAnimMapping("pickup", "food_pear"));
    map->insert(qMakePair( 71 - offset, 75), makeAnimMapping("pickup", "food_soda"));
    map->insert(qMakePair( 71 - offset, 76), makeAnimMapping("pickup", "food_pie"));
    map->insert(qMakePair( 71 - offset, 77), makeAnimMapping("pickup", "food_pizza"));
    map->insert(qMakePair( 71 - offset, 78), makeAnimMapping("pickup", "potion"));
    map->insert(qMakePair( 71 - offset, 79), makeAnimMapping("pickup", "food_pretzel"));
    map->insert(qMakePair( 71 - offset, 80), makeAnimMapping("pickup", "food_sandwich"));
    map->insert(qMakePair( 71 - offset, 81), makeAnimMapping("pickup", "food_strawberry"));
    map->insert(qMakePair( 71 - offset, 82), makeAnimMapping("pickup", "carrot_full"));
    map->insert(qMakePair( 71 - offset, 83), makeAnimMapping("object", "powerup_upgrade_blaster_spaz"));
    map->insert(qMakePair( 71 - offset, 84), makeAnimMapping("pickup", "coin_silver"));
    map->insert(qMakePair( 71 - offset, 85), makeAnimMapping("unknown", "green_blast_thing_2"));
    map->insert(qMakePair( 71 - offset, 86), makeAnimMapping("common", "generator"));
    map->insert(qMakePair( 71 - offset, 87), makeAnimMapping("pickup", "stopwatch"));
    map->insert(qMakePair( 71 - offset, 88), makeAnimMapping("pickup", "food_taco"));
    map->insert(qMakePair( 71 - offset, 89), makeAnimMapping("pickup", "food_thing"));
    map->insert(qMakePair( 71 - offset, 90), makeAnimMapping("object", "tnt"));
    map->insert(qMakePair( 71 - offset, 91), makeAnimMapping("pickup", "food_hotdog"));
    map->insert(qMakePair( 71 - offset, 92), makeAnimMapping("pickup", "food_watermelon"));
    map->insert(qMakePair( 71 - offset, 93), makeAnimMapping("object", "container_crate_shrapnel_1"));
    map->insert(qMakePair( 71 - offset, 94), makeAnimMapping("object", "container_crate_shrapnel_2"));
    map->insert(qMakePair( 72 - offset,  0), makeAnimMapping("pinball", "bumper_500", PINBALL_PALETTE));
    map->insert(qMakePair( 72 - offset,  1), makeAnimMapping("pinball", "bumper_500_hit", PINBALL_PALETTE));
    map->insert(qMakePair( 72 - offset,  2), makeAnimMapping("pinball", "bumper_carrot", PINBALL_PALETTE));
    map->insert(qMakePair( 72 - offset,  3), makeAnimMapping("pinball", "bumper_carrot_hit", PINBALL_PALETTE));
    map->insert(qMakePair( 72 - offset,  4), makeAnimMapping("pinball", "paddle_left"));
    map->insert(qMakePair( 72 - offset,  5), makeAnimMapping("pinball", "paddle_right"));
    map->insert(qMakePair( 73 - offset,  0), makeAnimMapping("platform", "lab"));
    map->insert(qMakePair( 73 - offset,  1), makeAnimMapping("platform", "lab_chain"));
    map->insert(qMakePair( 74 - offset,  0), makeAnimMapping("pole", "psych", PSYCH_POLE_PALETTE));
    map->insert(qMakePair( 75 - offset,  0), makeAnimMapping("queen", "scream"));
    map->insert(qMakePair( 75 - offset,  1), makeAnimMapping("queen", "ledge"));
    map->insert(qMakePair( 75 - offset,  2), makeAnimMapping("queen", "ledge_recover"));
    map->insert(qMakePair( 75 - offset,  3), makeAnimMapping("queen", "idle"));
    map->insert(qMakePair( 75 - offset,  4), makeAnimMapping("queen", "brick"));
    map->insert(qMakePair( 75 - offset,  5), makeAnimMapping("queen", "fall"));
    map->insert(qMakePair( 75 - offset,  6), makeAnimMapping("queen", "stomp"));
    map->insert(qMakePair( 75 - offset,  7), makeAnimMapping("queen", "backstep"));
    map->insert(qMakePair( 76 - offset,  0), makeAnimMapping("rapier", "attack"));
    map->insert(qMakePair( 76 - offset,  1), makeAnimMapping("rapier", "attack_swing"));
    map->insert(qMakePair( 76 - offset,  2), makeAnimMapping("rapier", "idle"));
    map->insert(qMakePair( 76 - offset,  3), makeAnimMapping("rapier", "attack_start"));
    map->insert(qMakePair( 76 - offset,  4), makeAnimMapping("rapier", "attack_end"));
    map->insert(qMakePair( 77 - offset,  0), makeAnimMapping("raven", "attack"));
    map->insert(qMakePair( 77 - offset,  1), makeAnimMapping("raven", "idle"));
    map->insert(qMakePair( 77 - offset,  2), makeAnimMapping("raven", "turn"));
    map->insert(qMakePair( 78 - offset,  0), makeAnimMapping("robot", "spike_ball"));
    map->insert(qMakePair( 78 - offset,  1), makeAnimMapping("robot", "attack_start"));
    map->insert(qMakePair( 78 - offset,  2), makeAnimMapping("robot", "attack"));
    map->insert(qMakePair( 78 - offset,  3), makeAnimMapping("robot", "copter"));
    map->insert(qMakePair( 78 - offset,  4), makeAnimMapping("robot", "idle"));
    map->insert(qMakePair( 78 - offset,  5), makeAnimMapping("robot", "attack_end"));
    map->insert(qMakePair( 78 - offset,  6), makeAnimMapping("robot", "shrapnel_1"));
    map->insert(qMakePair( 78 - offset,  7), makeAnimMapping("robot", "shrapnel_2"));
    map->insert(qMakePair( 78 - offset,  8), makeAnimMapping("robot", "shrapnel_3"));
    map->insert(qMakePair( 78 - offset,  9), makeAnimMapping("robot", "shrapnel_4"));
    map->insert(qMakePair( 78 - offset, 10), makeAnimMapping("robot", "shrapnel_5"));
    map->insert(qMakePair( 78 - offset, 11), makeAnimMapping("robot", "shrapnel_6"));
    map->insert(qMakePair( 78 - offset, 12), makeAnimMapping("robot", "shrapnel_7"));
    map->insert(qMakePair( 78 - offset, 13), makeAnimMapping("robot", "shrapnel_8"));
    map->insert(qMakePair( 78 - offset, 14), makeAnimMapping("robot", "shrapnel_9"));
    map->insert(qMakePair( 78 - offset, 15), makeAnimMapping("robot", "run"));
    map->insert(qMakePair( 78 - offset, 16), makeAnimMapping("robot", "copter_start"));
    map->insert(qMakePair( 78 - offset, 17), makeAnimMapping("robot", "copter_end"));
    map->insert(qMakePair( 79 - offset,  0), makeAnimMapping("object", "rolling_rock"));
    map->insert(qMakePair( 80 - offset,  0), makeAnimMapping("rocket_turtle", "downright"));
    map->insert(qMakePair( 80 - offset,  1), makeAnimMapping("rocket_turtle", "upright"));
    map->insert(qMakePair( 80 - offset,  2), makeAnimMapping("rocket_turtle", "smoke"));
    map->insert(qMakePair( 80 - offset,  3), makeAnimMapping("rocket_turtle", "upright_to_downright"));
    map->insert(qMakePair( 83 - offset,  0), makeAnimMapping("skeleton", "bone"));
    map->insert(qMakePair( 83 - offset,  1), makeAnimMapping("skeleton", "skull"));
    map->insert(qMakePair( 83 - offset,  2), makeAnimMapping("skeleton", "walk"));
    map->insert(qMakePair( 84 - offset,  0), makeAnimMapping("pole", "diamondus_tree", DIAMONDUS_POLE_PALETTE));
    map->insert(qMakePair( 85 - offset,  0), makeAnimMapping("common", "snow", SNOW_PALETTE));
    map->insert(qMakePair( 86 - offset,  0), makeAnimMapping("spike", "rocket"));
    map->insert(qMakePair( 86 - offset,  1), makeAnimMapping("spike", "mace_chain"));
    map->insert(qMakePair( 86 - offset,  2), makeAnimMapping("spike", "bottom"));
    map->insert(qMakePair( 86 - offset,  3), makeAnimMapping("spike", "top"));
    map->insert(qMakePair( 86 - offset,  4), makeAnimMapping("spike", "puff"));
    map->insert(qMakePair( 86 - offset,  5), makeAnimMapping("spike", "mace"));
    map->insert(qMakePair( 86 - offset,  6), makeAnimMapping("spike", "turret"));
    map->insert(qMakePair( 86 - offset,  7), makeAnimMapping("spike", "crosshairs"));
    map->insert(qMakePair( 87 - offset,  0), makeAnimMapping("platform", "sonic"));
    map->insert(qMakePair( 87 - offset,  1), makeAnimMapping("platform", "sonic_chain"));
    map->insert(qMakePair( 88 - offset,  0), makeAnimMapping("sparks", "idle"));
    if (useOffsets) {
        map->insert(qMakePair( 89 - offset, 0), makeAnimMapping("spaz", "unused_unknown_disoriented"));
        offset_local = 1;
    }
    map->insert(qMakePair( 89 - offset,  0 + offset_local), makeAnimMapping("spaz", "airboard"));
    map->insert(qMakePair( 89 - offset,  1 + offset_local), makeAnimMapping("spaz", "airboard_turn"));
    map->insert(qMakePair( 89 - offset,  2 + offset_local), makeAnimMapping("spaz", "buttstomp_end"));
    map->insert(qMakePair( 89 - offset,  3 + offset_local), makeAnimMapping("spaz", "corpse"));
    map->insert(qMakePair( 89 - offset,  4 + offset_local), makeAnimMapping("spaz", "die"));
    map->insert(qMakePair( 89 - offset,  5 + offset_local), makeAnimMapping("spaz", "crouch_start"));
    if (useOffsets) {
        map->insert(qMakePair( 89 - offset,  6 + offset_local), makeAnimMapping("spaz", "crouch_shoot_2"));
    } else {
        map->insert(qMakePair( 89 - offset,  6 + offset_local), makeAnimMapping("spaz", "crouch"));
    }
    map->insert(qMakePair( 89 - offset,  7 + offset_local), makeAnimMapping("spaz", "crouch_shoot"));
    map->insert(qMakePair( 89 - offset,  8 + offset_local), makeAnimMapping("spaz", "crouch_end"));
    if (useOffsets) {
        map->insert(qMakePair( 89 - offset,  9 + offset_local), makeAnimMapping("spaz", "unused_door_enter"));
        offset_local += 1;
    }
    map->insert(qMakePair( 89 - offset,  9 + offset_local), makeAnimMapping("spaz", "vine_walk"));
    map->insert(qMakePair( 89 - offset, 10 + offset_local), makeAnimMapping("spaz", "eol"));
    map->insert(qMakePair( 89 - offset, 11 + offset_local), makeAnimMapping("spaz", "fall"));
    map->insert(qMakePair( 89 - offset, 12 + offset_local), makeAnimMapping("spaz", "buttstomp"));
    map->insert(qMakePair( 89 - offset, 13 + offset_local), makeAnimMapping("spaz", "fall_end"));
    map->insert(qMakePair( 89 - offset, 14 + offset_local), makeAnimMapping("spaz", "shoot"));
    map->insert(qMakePair( 89 - offset, 15 + offset_local), makeAnimMapping("spaz", "shoot_ver"));
    map->insert(qMakePair( 89 - offset, 16 + offset_local), makeAnimMapping("spaz", "shoot_end"));
    map->insert(qMakePair( 89 - offset, 17 + offset_local), makeAnimMapping("spaz", "transform_frog_end"));
    if (useOffsets) {
        map->insert(qMakePair( 89 - offset, 18 + offset_local), makeAnimMapping("spaz", "unused_ledge_climb"));
        offset_local += 1;
    }
    map->insert(qMakePair( 89 - offset, 18 + offset_local), makeAnimMapping("spaz", "vine_shoot_start"));
    map->insert(qMakePair( 89 - offset, 19 + offset_local), makeAnimMapping("spaz", "vine_shoot_up_end"));
    map->insert(qMakePair( 89 - offset, 20 + offset_local), makeAnimMapping("spaz", "vine_shoot_up"));
    map->insert(qMakePair( 89 - offset, 21 + offset_local), makeAnimMapping("spaz", "vine_idle"));
    map->insert(qMakePair( 89 - offset, 22 + offset_local), makeAnimMapping("spaz", "vine_idle_flavor"));
    map->insert(qMakePair( 89 - offset, 23 + offset_local), makeAnimMapping("spaz", "vine_shoot_end"));
    map->insert(qMakePair( 89 - offset, 24 + offset_local), makeAnimMapping("spaz", "vine_shoot"));
    map->insert(qMakePair( 89 - offset, 25 + offset_local), makeAnimMapping("spaz", "copter"));
    map->insert(qMakePair( 89 - offset, 26 + offset_local), makeAnimMapping("spaz", "copter_shoot_start"));
    map->insert(qMakePair( 89 - offset, 27 + offset_local), makeAnimMapping("spaz", "copter_shoot"));
    map->insert(qMakePair( 89 - offset, 28 + offset_local), makeAnimMapping("spaz", "pole_h"));
    map->insert(qMakePair( 89 - offset, 29 + offset_local), makeAnimMapping("spaz", "hurt"));
    map->insert(qMakePair( 89 - offset, 30 + offset_local), makeAnimMapping("spaz", "idle_flavor_1"));
    map->insert(qMakePair( 89 - offset, 31 + offset_local), makeAnimMapping("spaz", "idle_flavor_2"));
    map->insert(qMakePair( 89 - offset, 32 + offset_local), makeAnimMapping("spaz", "idle_flavor_3_placeholder"));
    map->insert(qMakePair( 89 - offset, 33 + offset_local), makeAnimMapping("spaz", "idle_flavor_4"));
    map->insert(qMakePair( 89 - offset, 34 + offset_local), makeAnimMapping("spaz", "idle_flavor_5"));
    map->insert(qMakePair( 89 - offset, 35 + offset_local), makeAnimMapping("spaz", "vine_shoot_up_start"));
    map->insert(qMakePair( 89 - offset, 36 + offset_local), makeAnimMapping("spaz", "fall_shoot"));
    map->insert(qMakePair( 89 - offset, 37 + offset_local), makeAnimMapping("spaz", "jump_unknown_1"));
    map->insert(qMakePair( 89 - offset, 38 + offset_local), makeAnimMapping("spaz", "jump_unknown_2"));
    map->insert(qMakePair( 89 - offset, 39 + offset_local), makeAnimMapping("spaz", "jump"));
    map->insert(qMakePair( 89 - offset, 40 + offset_local), makeAnimMapping("spaz", "ledge"));
    map->insert(qMakePair( 89 - offset, 41 + offset_local), makeAnimMapping("spaz", "lift"));
    map->insert(qMakePair( 89 - offset, 42 + offset_local), makeAnimMapping("spaz", "lift_jump_light"));
    map->insert(qMakePair( 89 - offset, 43 + offset_local), makeAnimMapping("spaz", "lift_jump_heavy"));
    map->insert(qMakePair( 89 - offset, 44 + offset_local), makeAnimMapping("spaz", "lookup_start"));
    if (useOffsets) {
        map->insert(qMakePair( 89 - offset, 45 + offset_local), makeAnimMapping("spaz", "unused_run_diag_upright"));
        map->insert(qMakePair( 89 - offset, 46 + offset_local), makeAnimMapping("spaz", "unused_run_ver_up"));
        map->insert(qMakePair( 89 - offset, 47 + offset_local), makeAnimMapping("spaz", "unused_run_diag_upleft_reverse"));
        map->insert(qMakePair( 89 - offset, 48 + offset_local), makeAnimMapping("spaz", "unused_run_reverse"));
        map->insert(qMakePair( 89 - offset, 49 + offset_local), makeAnimMapping("spaz", "unused_run_diag_downleft_reverse"));
        map->insert(qMakePair( 89 - offset, 50 + offset_local), makeAnimMapping("spaz", "unused_run_ver_down"));
        map->insert(qMakePair( 89 - offset, 51 + offset_local), makeAnimMapping("spaz", "unused_run_diag_downright"));
        offset_local += 7;
    }
    map->insert(qMakePair( 89 - offset, 45 + offset_local), makeAnimMapping("spaz", "dizzy_walk"));
    map->insert(qMakePair( 89 - offset, 46 + offset_local), makeAnimMapping("spaz", "push"));
    map->insert(qMakePair( 89 - offset, 47 + offset_local), makeAnimMapping("spaz", "shoot_start"));
    map->insert(qMakePair( 89 - offset, 48 + offset_local), makeAnimMapping("spaz", "revup_start"));
    map->insert(qMakePair( 89 - offset, 49 + offset_local), makeAnimMapping("spaz", "revup"));
    map->insert(qMakePair( 89 - offset, 50 + offset_local), makeAnimMapping("spaz", "revup_end"));
    map->insert(qMakePair( 89 - offset, 51 + offset_local), makeAnimMapping("spaz", "fall_diag"));
    if (useOffsets) {
        map->insert(qMakePair( 89 - offset, 52 + offset_local), makeAnimMapping("spaz", "unused_unknown_mid_frame"));
        offset_local += 1;
    }
    map->insert(qMakePair( 89 - offset, 52 + offset_local), makeAnimMapping("spaz", "jump_diag"));
    if (useOffsets) {
        map->insert(qMakePair( 89 - offset, 53 + offset_local), makeAnimMapping("spaz", "unused_jump_shoot_end"));
        map->insert(qMakePair( 89 - offset, 54 + offset_local), makeAnimMapping("spaz", "unused_jump_shoot_ver_start"));
        map->insert(qMakePair( 89 - offset, 55 + offset_local), makeAnimMapping("spaz", "unused_jump_shoot_ver"));
        offset_local += 3;
    }
    map->insert(qMakePair( 89 - offset, 53 + offset_local), makeAnimMapping("spaz", "ball"));
    map->insert(qMakePair( 89 - offset, 54 + offset_local), makeAnimMapping("spaz", "run"));
    if (useOffsets) {
        map->insert(qMakePair( 89 - offset, 55 + offset_local), makeAnimMapping("spaz", "unused_run_aim_diag"));
        offset_local += 1;
    }
    map->insert(qMakePair( 89 - offset, 55 + offset_local), makeAnimMapping("spaz", "dash_start"));
    map->insert(qMakePair( 89 - offset, 56 + offset_local), makeAnimMapping("spaz", "dash"));
    map->insert(qMakePair( 89 - offset, 57 + offset_local), makeAnimMapping("spaz", "dash_stop"));
    map->insert(qMakePair( 89 - offset, 58 + offset_local), makeAnimMapping("spaz", "walk_stop"));
    map->insert(qMakePair( 89 - offset, 59 + offset_local), makeAnimMapping("spaz", "run_stop"));
    map->insert(qMakePair( 89 - offset, 60 + offset_local), makeAnimMapping("spaz", "spring"));
    map->insert(qMakePair( 89 - offset, 61 + offset_local), makeAnimMapping("spaz", "idle"));
    map->insert(qMakePair( 89 - offset, 62 + offset_local), makeAnimMapping("spaz", "sidekick"));
    map->insert(qMakePair( 89 - offset, 63 + offset_local), makeAnimMapping("spaz", "sidekick_end"));
    map->insert(qMakePair( 89 - offset, 64 + offset_local), makeAnimMapping("spaz", "sidekick_start"));
    map->insert(qMakePair( 89 - offset, 65 + offset_local), makeAnimMapping("spaz", "dizzy"));
    map->insert(qMakePair( 89 - offset, 66 + offset_local), makeAnimMapping("spaz", "swim_diag_downright"));
    map->insert(qMakePair( 89 - offset, 67 + offset_local), makeAnimMapping("spaz", "swim_right"));
    map->insert(qMakePair( 89 - offset, 68 + offset_local), makeAnimMapping("spaz", "swim_diag_right_to_downright"));
    map->insert(qMakePair( 89 - offset, 69 + offset_local), makeAnimMapping("spaz", "swim_diag_right_to_upright"));
    map->insert(qMakePair( 89 - offset, 70 + offset_local), makeAnimMapping("spaz", "swim_diag_upright"));
    map->insert(qMakePair( 89 - offset, 71 + offset_local), makeAnimMapping("spaz", "swing"));
    map->insert(qMakePair( 89 - offset, 72 + offset_local), makeAnimMapping("spaz", "warp_in"));
    map->insert(qMakePair( 89 - offset, 73 + offset_local), makeAnimMapping("spaz", "warp_out_freefall"));
    map->insert(qMakePair( 89 - offset, 74 + offset_local), makeAnimMapping("spaz", "freefall"));
    map->insert(qMakePair( 89 - offset, 75 + offset_local), makeAnimMapping("spaz", "warp_in_freefall"));
    map->insert(qMakePair( 89 - offset, 76 + offset_local), makeAnimMapping("spaz", "warp_out"));
    map->insert(qMakePair( 89 - offset, 77 + offset_local), makeAnimMapping("spaz", "pole_v"));
    if (useOffsets) {
        map->insert(qMakePair( 89 - offset, 78 + offset_local), makeAnimMapping("spaz", "unused_unarmed_crouch_start"));
        map->insert(qMakePair( 89 - offset, 79 + offset_local), makeAnimMapping("spaz", "unused_unarmed_crouch_end"));
        map->insert(qMakePair( 89 - offset, 80 + offset_local), makeAnimMapping("spaz", "unused_unarmed_fall"));
        map->insert(qMakePair( 89 - offset, 81 + offset_local), makeAnimMapping("spaz", "unused_unarmed_hurt"));
        map->insert(qMakePair( 89 - offset, 82 + offset_local), makeAnimMapping("spaz", "unused_unarmed_idle"));
        map->insert(qMakePair( 89 - offset, 83 + offset_local), makeAnimMapping("spaz", "unused_unarmed_jump"));
        map->insert(qMakePair( 89 - offset, 84 + offset_local), makeAnimMapping("spaz", "unused_unarmed_crouch_end_2"));
        map->insert(qMakePair( 89 - offset, 85 + offset_local), makeAnimMapping("spaz", "unused_lookup_start"));
        map->insert(qMakePair( 89 - offset, 86 + offset_local), makeAnimMapping("spaz", "unused_unarmed_run"));
        map->insert(qMakePair( 89 - offset, 87 + offset_local), makeAnimMapping("spaz", "unused_unarmed_stare"));
        map->insert(qMakePair( 89 - offset, 88 + offset_local), makeAnimMapping("spaz", "unused_lookup_start_2"));
    }
    map->insert(qMakePair( 90 - offset,  0), makeAnimMapping("spaz", "idle_flavor_3_start"));
    map->insert(qMakePair( 90 - offset,  1), makeAnimMapping("spaz", "idle_flavor_3"));
    map->insert(qMakePair( 90 - offset,  2), makeAnimMapping("spaz", "idle_flavor_3_bird"));
    map->insert(qMakePair( 90 - offset,  3), makeAnimMapping("spaz", "idle_flavor_5_spaceship"));
    map->insert(qMakePair( 91 - offset,  0), makeAnimMapping("unimplemented", "bonus_spaz_idle_flavor"));
    map->insert(qMakePair( 91 - offset,  1), makeAnimMapping("unimplemented", "bonus_spaz_jump"));
    map->insert(qMakePair( 91 - offset,  2), makeAnimMapping("unimplemented", "bonus_spaz_ball"));
    map->insert(qMakePair( 91 - offset,  3), makeAnimMapping("unimplemented", "bonus_spaz_run"));
    map->insert(qMakePair( 91 - offset,  4), makeAnimMapping("unimplemented", "bonus_spaz_dash"));
    map->insert(qMakePair( 91 - offset,  5), makeAnimMapping("unimplemented", "bonus_spaz_rotate"));
    map->insert(qMakePair( 91 - offset,  6), makeAnimMapping("unimplemented", "bonus_spaz_idle"));
    map->insert(qMakePair( 93 - offset,  0), makeAnimMapping("object", "3d_spike"));
    map->insert(qMakePair( 93 - offset,  1), makeAnimMapping("object", "3d_spike_chain"));
    map->insert(qMakePair( 94 - offset,  0), makeAnimMapping("object", "3d_spike_2"));
    map->insert(qMakePair( 94 - offset,  1), makeAnimMapping("object", "3d_spike_2_chain"));
    map->insert(qMakePair( 95 - offset,  0), makeAnimMapping("platform", "spike"));
    map->insert(qMakePair( 95 - offset,  1), makeAnimMapping("platform", "spike_chain"));
    map->insert(qMakePair( 96 - offset,  0), makeAnimMapping("object", "spring_blue_ver"));
    map->insert(qMakePair( 96 - offset,  1), makeAnimMapping("object", "spring_blue_hor"));
    map->insert(qMakePair( 96 - offset,  2), makeAnimMapping("object", "spring_blue_ver_reverse"));
    map->insert(qMakePair( 96 - offset,  3), makeAnimMapping("object", "spring_green_ver_reverse"));
    map->insert(qMakePair( 96 - offset,  4), makeAnimMapping("object", "spring_red_ver_reverse"));
    map->insert(qMakePair( 96 - offset,  5), makeAnimMapping("object", "spring_green_ver"));
    map->insert(qMakePair( 96 - offset,  6), makeAnimMapping("object", "spring_green_hor"));
    map->insert(qMakePair( 96 - offset,  7), makeAnimMapping("object", "spring_red_ver"));
    map->insert(qMakePair( 96 - offset,  8), makeAnimMapping("object", "spring_red_hor"));
    map->insert(qMakePair( 97 - offset,  0), makeAnimMapping("common", "steam_note"));
    map->insert(qMakePair( 99 - offset,  0), makeAnimMapping("sucker_tube", "walk_top"));
    map->insert(qMakePair( 99 - offset,  1), makeAnimMapping("sucker_tube", "inflated_deflate"));
    map->insert(qMakePair( 99 - offset,  2), makeAnimMapping("sucker_tube", "walk_ver_down"));
    map->insert(qMakePair( 99 - offset,  3), makeAnimMapping("sucker_tube", "fall"));
    map->insert(qMakePair( 99 - offset,  4), makeAnimMapping("sucker_tube", "inflated"));
    map->insert(qMakePair( 99 - offset,  5), makeAnimMapping("sucker_tube", "poof"));
    map->insert(qMakePair( 99 - offset,  6), makeAnimMapping("sucker_tube", "walk"));
    map->insert(qMakePair( 99 - offset,  7), makeAnimMapping("sucker_tube", "walk_ver_up"));
    map->insert(qMakePair(100 - offset,  0), makeAnimMapping("tube_turtle", "idle"));
    map->insert(qMakePair(101 - offset,  0), makeAnimMapping("tough_turtle_boss", "attack_start"));
    map->insert(qMakePair(101 - offset,  1), makeAnimMapping("tough_turtle_boss", "attack_end"));
    map->insert(qMakePair(101 - offset,  2), makeAnimMapping("tough_turtle_boss", "shell"));
    map->insert(qMakePair(101 - offset,  3), makeAnimMapping("tough_turtle_boss", "mace"));
    map->insert(qMakePair(101 - offset,  4), makeAnimMapping("tough_turtle_boss", "idle"));
    map->insert(qMakePair(101 - offset,  5), makeAnimMapping("tough_turtle_boss", "walk"));
    map->insert(qMakePair(102 - offset,  0), makeAnimMapping("tough_turtle", "walk"));
    map->insert(qMakePair(103 - offset,  0), makeAnimMapping("turtle", "attack"));
    map->insert(qMakePair(103 - offset,  1), makeAnimMapping("turtle", "idle_flavor"));
    map->insert(qMakePair(103 - offset,  2), makeAnimMapping("turtle", "turn_start"));
    map->insert(qMakePair(103 - offset,  3), makeAnimMapping("turtle", "turn_end"));
    map->insert(qMakePair(103 - offset,  4), makeAnimMapping("turtle", "shell_reverse"));
    map->insert(qMakePair(103 - offset,  5), makeAnimMapping("turtle", "shell"));
    map->insert(qMakePair(103 - offset,  6), makeAnimMapping("turtle", "idle"));
    map->insert(qMakePair(103 - offset,  7), makeAnimMapping("turtle", "walk"));
    map->insert(qMakePair(104 - offset,  0), makeAnimMapping("tweedle", "magnet_start"));
    map->insert(qMakePair(104 - offset,  1), makeAnimMapping("tweedle", "spin"));
    map->insert(qMakePair(104 - offset,  2), makeAnimMapping("tweedle", "magnet_end"));
    map->insert(qMakePair(104 - offset,  3), makeAnimMapping("tweedle", "shoot_jazz"));
    map->insert(qMakePair(104 - offset,  4), makeAnimMapping("tweedle", "shoot_spaz"));
    map->insert(qMakePair(104 - offset,  5), makeAnimMapping("tweedle", "hurt"));
    map->insert(qMakePair(104 - offset,  6), makeAnimMapping("tweedle", "idle"));
    map->insert(qMakePair(104 - offset,  7), makeAnimMapping("tweedle", "magnet"));
    map->insert(qMakePair(104 - offset,  8), makeAnimMapping("tweedle", "walk"));
    map->insert(qMakePair(105 - offset,  0), makeAnimMapping("uterus", "closed_start"));
    map->insert(qMakePair(105 - offset,  1), makeAnimMapping("uterus", "crab_spawn"));
    map->insert(qMakePair(105 - offset,  2), makeAnimMapping("uterus", "closed_idle"));
    map->insert(qMakePair(105 - offset,  3), makeAnimMapping("uterus", "idle"));
    map->insert(qMakePair(105 - offset,  4), makeAnimMapping("crab", "fall_end"));
    map->insert(qMakePair(105 - offset,  5), makeAnimMapping("uterus", "closed_end"));
    map->insert(qMakePair(105 - offset,  6), makeAnimMapping("uterus", "shield"));
    map->insert(qMakePair(105 - offset,  7), makeAnimMapping("crab", "walk"));
    map->insert(qMakePair(106 - offset,  1), makeAnimMapping("object", "vine"));
    map->insert(qMakePair(107 - offset,  0), makeAnimMapping("object", "bonus_10"));
    map->insert(qMakePair(108 - offset,  0), makeAnimMapping("object", "bonus_100"));
    map->insert(qMakePair(109 - offset,  0), makeAnimMapping("object", "bonus_20"));
    map->insert(qMakePair(110 - offset,  0), makeAnimMapping("object", "bonus_50"));
    map->insert(qMakePair(112 - offset,  0), makeAnimMapping("witch", "attack"));
    map->insert(qMakePair(112 - offset,  1), makeAnimMapping("witch", "die"));
    map->insert(qMakePair(112 - offset,  2), makeAnimMapping("witch", "idle"));
    map->insert(qMakePair(112 - offset,  3), makeAnimMapping("witch", "bullet_magic"));
    if (!useOffsets) {
        map->insert(qMakePair(113 - offset,  0), makeAnimMapping("bilsy", "xmas_throw_fireball"));
        map->insert(qMakePair(113 - offset,  1), makeAnimMapping("bilsy", "xmas_appear"));
        map->insert(qMakePair(113 - offset,  2), makeAnimMapping("bilsy", "xmas_vanish"));
        map->insert(qMakePair(113 - offset,  3), makeAnimMapping("bilsy", "xmas_bullet_fireball"));
        map->insert(qMakePair(113 - offset,  4), makeAnimMapping("bilsy", "xmas_idle"));
        map->insert(qMakePair(114 - offset,  0), makeAnimMapping("lizard", "xmas_copter_attack"));
        map->insert(qMakePair(114 - offset,  1), makeAnimMapping("lizard", "xmas_bomb"));
        map->insert(qMakePair(114 - offset,  2), makeAnimMapping("lizard", "xmas_copter_idle"));
        map->insert(qMakePair(114 - offset,  3), makeAnimMapping("lizard", "xmas_copter"));
        map->insert(qMakePair(114 - offset,  4), makeAnimMapping("lizard", "xmas_walk"));
        map->insert(qMakePair(115 - offset,  0), makeAnimMapping("turtle", "xmas_attack"));
        map->insert(qMakePair(115 - offset,  1), makeAnimMapping("turtle", "xmas_idle_flavor"));
        map->insert(qMakePair(115 - offset,  2), makeAnimMapping("turtle", "xmas_turn_start"));
        map->insert(qMakePair(115 - offset,  3), makeAnimMapping("turtle", "xmas_turn_end"));
        map->insert(qMakePair(115 - offset,  4), makeAnimMapping("turtle", "xmas_shell_reverse"));
        map->insert(qMakePair(115 - offset,  5), makeAnimMapping("turtle", "xmas_shell"));
        map->insert(qMakePair(115 - offset,  6), makeAnimMapping("turtle", "xmas_idle"));
        map->insert(qMakePair(115 - offset,  7), makeAnimMapping("turtle", "xmas_walk"));
        map->insert(qMakePair(116 - offset,  0), makeAnimMapping("doggy", "xmas_attack"));
        map->insert(qMakePair(116 - offset,  1), makeAnimMapping("doggy", "xmas_walk"));
        map->insert(qMakePair(117 - offset,  0), makeAnimMapping("sparks", "ghost_idle"));
    }

    return map;
}

std::unique_ptr<SampleIDMap> getSampleMappingForVersion(JJ2Version version) {
    auto map = std::make_unique<SampleIDMap>(SampleIDMap());

    if (version == JJ2Version::UNKNOWN) {
        return map;
    }

    // TODO: U.S. version of vanilla probably has a slightly different order of sets,
    // since the sets seem to be ordered alphabetically and the Project 2 Interactive logo
    // position and the Gathering of Developers position would likely not agree.
    // (existence of GoD and absence of P2 verified by https://www.youtube.com/watch?v=QB2MQQE6Bi8 -
    // seems to have low SFX volume but otherwise genuine)
    // Get a hold of U.S. 1.20/1.23 Anims.j2a to verify IDs and adjust accordingly.

    quint32 offset = 0;
    quint32 offset_local = 0;
    bool useOffsets = version != JJ2Version::JJ2_TSF;
    map->insert(qMakePair(  0,   0), makeSampleMapping("weapon", "bullet_shield_bubble_1"));
    map->insert(qMakePair(  0,   1), makeSampleMapping("weapon", "bullet_shield_bubble_2"));
    map->insert(qMakePair(  0,   2), makeSampleMapping("weapon", "unknown_bmp1"));
    map->insert(qMakePair(  0,   3), makeSampleMapping("weapon", "unknown_bmp2"));
    map->insert(qMakePair(  0,   4), makeSampleMapping("weapon", "unknown_bmp3"));
    map->insert(qMakePair(  0,   5), makeSampleMapping("weapon", "unknown_bmp4"));
    map->insert(qMakePair(  0,   6), makeSampleMapping("weapon", "unknown_bmp5"));
    map->insert(qMakePair(  0,   7), makeSampleMapping("weapon", "unknown_bmp6"));
    map->insert(qMakePair(  0,   8), makeSampleMapping("weapon", "tnt_explosion"));
    map->insert(qMakePair(  0,   9), makeSampleMapping("weapon", "ricochet_contact"));
    map->insert(qMakePair(  0,  10), makeSampleMapping("weapon", "ricochet_bullet_1"));
    map->insert(qMakePair(  0,  11), makeSampleMapping("weapon", "ricochet_bullet_2"));
    map->insert(qMakePair(  0,  12), makeSampleMapping("weapon", "ricochet_bullet_3"));
    map->insert(qMakePair(  0,  13), makeSampleMapping("weapon", "bullet_shield_fire_1"));
    map->insert(qMakePair(  0,  14), makeSampleMapping("weapon", "bullet_shield_fire_2"));
    map->insert(qMakePair(  0,  15), makeSampleMapping("weapon", "bullet_bouncer_1"));
    map->insert(qMakePair(  0,  16), makeSampleMapping("weapon", "bullet_blaster_jazz_1"));
    map->insert(qMakePair(  0,  17), makeSampleMapping("weapon", "bullet_blaster_jazz_2"));
    map->insert(qMakePair(  0,  18), makeSampleMapping("weapon", "bullet_blaster_jazz_3"));
    map->insert(qMakePair(  0,  19), makeSampleMapping("weapon", "bullet_bouncer_2"));
    map->insert(qMakePair(  0,  20), makeSampleMapping("weapon", "bullet_bouncer_3"));
    map->insert(qMakePair(  0,  21), makeSampleMapping("weapon", "bullet_bouncer_4"));
    map->insert(qMakePair(  0,  22), makeSampleMapping("weapon", "bullet_bouncer_5"));
    map->insert(qMakePair(  0,  23), makeSampleMapping("weapon", "bullet_bouncer_6"));
    map->insert(qMakePair(  0,  24), makeSampleMapping("weapon", "bullet_bouncer_7"));
    map->insert(qMakePair(  0,  25), makeSampleMapping("weapon", "bullet_blaster_jazz_4"));
    map->insert(qMakePair(  0,  26), makeSampleMapping("weapon", "bullet_pepper"));
    map->insert(qMakePair(  0,  27), makeSampleMapping("weapon", "bullet_freezer_1"));
    map->insert(qMakePair(  0,  28), makeSampleMapping("weapon", "bullet_freezer_2"));
    map->insert(qMakePair(  0,  29), makeSampleMapping("weapon", "bullet_freezer_upgraded_1"));
    map->insert(qMakePair(  0,  30), makeSampleMapping("weapon", "bullet_freezer_upgraded_2"));
    map->insert(qMakePair(  0,  31), makeSampleMapping("weapon", "bullet_freezer_upgraded_3"));
    map->insert(qMakePair(  0,  32), makeSampleMapping("weapon", "bullet_freezer_upgraded_4"));
    map->insert(qMakePair(  0,  33), makeSampleMapping("weapon", "bullet_freezer_upgraded_5"));
    map->insert(qMakePair(  0,  34), makeSampleMapping("weapon", "bullet_electro_1"));
    map->insert(qMakePair(  0,  35), makeSampleMapping("weapon", "bullet_electro_2"));
    map->insert(qMakePair(  0,  36), makeSampleMapping("weapon", "bullet_electro_3"));
    map->insert(qMakePair(  0,  37), makeSampleMapping("weapon", "bullet_rf"));
    map->insert(qMakePair(  0,  38), makeSampleMapping("weapon", "bullet_seeker"));
    map->insert(qMakePair(  0,  39), makeSampleMapping("weapon", "bullet_blaster_spaz_1"));
    map->insert(qMakePair(  0,  40), makeSampleMapping("weapon", "bullet_blaster_spaz_2"));
    map->insert(qMakePair(  0,  41), makeSampleMapping("weapon", "bullet_blaster_spaz_3"));
    map->insert(qMakePair(  1,   0), makeSampleMapping("bat", "noise"));
    map->insert(qMakePair(  7,   0), makeSampleMapping("bilsy", "appear_2"));
    map->insert(qMakePair(  7,   1), makeSampleMapping("bilsy", "snap"));
    map->insert(qMakePair(  7,   2), makeSampleMapping("bilsy", "throw_fireball"));
    map->insert(qMakePair(  7,   3), makeSampleMapping("bilsy", "fire_start"));
    map->insert(qMakePair(  7,   4), makeSampleMapping("bilsy", "scary"));
    map->insert(qMakePair(  7,   5), makeSampleMapping("bilsy", "thunder"));
    map->insert(qMakePair(  7,   6), makeSampleMapping("bilsy", "appear_1"));
    map->insert(qMakePair( 11,   0), makeSampleMapping("unknown", "unknown_bonus1"));
    map->insert(qMakePair( 11,   1), makeSampleMapping("unknown", "unknown_bonusblub"));
    map->insert(qMakePair( 14,   0), makeSampleMapping("bubba", "hop_1"));
    map->insert(qMakePair( 14,   1), makeSampleMapping("bubba", "hop_2"));
    map->insert(qMakePair( 14,   2), makeSampleMapping("bubba", "unknown_bubbaexplo"));
    map->insert(qMakePair( 14,   3), makeSampleMapping("bubba", "unknown_frog2"));
    map->insert(qMakePair( 14,   4), makeSampleMapping("bubba", "unknown_frog3"));
    map->insert(qMakePair( 14,   5), makeSampleMapping("bubba", "unknown_frog4"));
    map->insert(qMakePair( 14,   6), makeSampleMapping("bubba", "unknown_frog5"));
    map->insert(qMakePair( 14,   7), makeSampleMapping("bubba", "sneeze"));
    map->insert(qMakePair( 14,   8), makeSampleMapping("bubba", "tornado"));
    map->insert(qMakePair( 15,   0), makeSampleMapping("bee", "noise"));
    map->insert(qMakePair( 20,   0), makeSampleMapping("caterpillar", "dizzy"));
    map->insert(qMakePair( 22,   0), makeSampleMapping("common", "char_airboard"));
    map->insert(qMakePair( 22,   1), makeSampleMapping("common", "char_airboard_turn_1"));
    map->insert(qMakePair( 22,   2), makeSampleMapping("common", "char_airboard_turn_2"));
    map->insert(qMakePair( 22,   3), makeSampleMapping("common", "unknown_base"));
    map->insert(qMakePair( 22,   4), makeSampleMapping("common", "powerup_shield_damage_1"));
    map->insert(qMakePair( 22,   5), makeSampleMapping("common", "powerup_shield_damage_2"));
    map->insert(qMakePair( 22,   6), makeSampleMapping("common", "bomb"));
    map->insert(qMakePair( 22,   7), makeSampleMapping("birdy", "fly_1"));
    map->insert(qMakePair( 22,   8), makeSampleMapping("birdy", "fly_2"));
    map->insert(qMakePair( 22,   9), makeSampleMapping("weapon", "bouncer"));
    map->insert(qMakePair( 22,  10), makeSampleMapping("common", "blub1"));
    map->insert(qMakePair( 22,  11), makeSampleMapping("weapon", "shield_bubble_bullet"));
    map->insert(qMakePair( 22,  12), makeSampleMapping("weapon", "shield_fire_bullet"));
    map->insert(qMakePair( 22,  13), makeSampleMapping("common", "ambient_fire"));
    map->insert(qMakePair( 22,  14), makeSampleMapping("object", "container_barrel_break"));
    map->insert(qMakePair( 22,  15), makeSampleMapping("common", "powerup_shield_timer"));
    map->insert(qMakePair( 22,  16), makeSampleMapping("pickup", "coin"));
    map->insert(qMakePair( 22,  17), makeSampleMapping("common", "scenery_collapse"));
    map->insert(qMakePair( 22,  18), makeSampleMapping("common", "cup"));
    map->insert(qMakePair( 22,  19), makeSampleMapping("common", "scenery_destruct"));
    map->insert(qMakePair( 22,  20), makeSampleMapping("common", "down"));
    map->insert(qMakePair( 22,  21), makeSampleMapping("common", "downfl2"));
    map->insert(qMakePair( 22,  22), makeSampleMapping("pickup", "food_drink_1"));
    map->insert(qMakePair( 22,  23), makeSampleMapping("pickup", "food_drink_2"));
    map->insert(qMakePair( 22,  24), makeSampleMapping("pickup", "food_drink_3"));
    map->insert(qMakePair( 22,  25), makeSampleMapping("pickup", "food_drink_4"));
    map->insert(qMakePair( 22,  26), makeSampleMapping("pickup", "food_edible_1"));
    map->insert(qMakePair( 22,  27), makeSampleMapping("pickup", "food_edible_2"));
    map->insert(qMakePair( 22,  28), makeSampleMapping("pickup", "food_edible_3"));
    map->insert(qMakePair( 22,  29), makeSampleMapping("pickup", "food_edible_4"));
    map->insert(qMakePair( 22,  30), makeSampleMapping("pickup", "shield_lightning_bullet_1"));
    map->insert(qMakePair( 22,  31), makeSampleMapping("pickup", "shield_lightning_bullet_2"));
    map->insert(qMakePair( 22,  32), makeSampleMapping("pickup", "shield_lightning_bullet_3"));
    map->insert(qMakePair( 22,  33), makeSampleMapping("weapon", "tnt"));
    map->insert(qMakePair( 22,  34), makeSampleMapping("weapon", "wall_poof"));
    map->insert(qMakePair( 22,  35), makeSampleMapping("weapon", "toaster"));
    map->insert(qMakePair( 22,  36), makeSampleMapping("common", "flap"));
    map->insert(qMakePair( 22,  37), makeSampleMapping("common", "swish_9"));
    map->insert(qMakePair( 22,  38), makeSampleMapping("common", "swish_10"));
    map->insert(qMakePair( 22,  39), makeSampleMapping("common", "swish_11"));
    map->insert(qMakePair( 22,  40), makeSampleMapping("common", "swish_12"));
    map->insert(qMakePair( 22,  41), makeSampleMapping("common", "swish_13"));
    map->insert(qMakePair( 22,  42), makeSampleMapping("object", "gem_super_break"));
    map->insert(qMakePair( 22,  43), makeSampleMapping("object", "powerup_break"));
    map->insert(qMakePair( 22,  44), makeSampleMapping("common", "gunsm1"));
    map->insert(qMakePair( 22,  45), makeSampleMapping("pickup", "1up"));
    map->insert(qMakePair( 22,  46), makeSampleMapping("unknown", "common_head"));
    map->insert(qMakePair( 22,  47), makeSampleMapping("common", "copter_noise"));
    map->insert(qMakePair( 22,  48), makeSampleMapping("common", "hibell"));
    map->insert(qMakePair( 22,  49), makeSampleMapping("common", "holyflut"));
    map->insert(qMakePair( 22,  50), makeSampleMapping("ui", "weapon_change"));
    map->insert(qMakePair( 22,  51), makeSampleMapping("common", "ice_break"));
    map->insert(qMakePair( 22,  52), makeSampleMapping("object", "shell_noise_1"));
    map->insert(qMakePair( 22,  53), makeSampleMapping("object", "shell_noise_2"));
    map->insert(qMakePair( 22,  54), makeSampleMapping("object", "shell_noise_3"));
    map->insert(qMakePair( 22,  55), makeSampleMapping("object", "shell_noise_4"));
    map->insert(qMakePair( 22,  56), makeSampleMapping("object", "shell_noise_5"));
    map->insert(qMakePair( 22,  57), makeSampleMapping("object", "shell_noise_6"));
    map->insert(qMakePair( 22,  58), makeSampleMapping("object", "shell_noise_7"));
    map->insert(qMakePair( 22,  59), makeSampleMapping("object", "shell_noise_8"));
    map->insert(qMakePair( 22,  60), makeSampleMapping("object", "shell_noise_9"));
    map->insert(qMakePair( 22,  61), makeSampleMapping("unknown", "common_itemtre"));
    map->insert(qMakePair( 22,  62), makeSampleMapping("common", "char_jump"));
    map->insert(qMakePair( 22,  63), makeSampleMapping("common", "char_jump_alt"));
    map->insert(qMakePair( 22,  64), makeSampleMapping("common", "land1"));
    map->insert(qMakePair( 22,  65), makeSampleMapping("common", "land2"));
    map->insert(qMakePair( 22,  66), makeSampleMapping("common", "land3"));
    map->insert(qMakePair( 22,  67), makeSampleMapping("common", "land4"));
    map->insert(qMakePair( 22,  68), makeSampleMapping("common", "land5"));
    map->insert(qMakePair( 22,  69), makeSampleMapping("common", "char_land"));
    map->insert(qMakePair( 22,  70), makeSampleMapping("common", "loadjazz"));
    map->insert(qMakePair( 22,  71), makeSampleMapping("common", "loadspaz"));
    map->insert(qMakePair( 22,  72), makeSampleMapping("common", "metalhit"));
    map->insert(qMakePair( 22,  73), makeSampleMapping("unimplemented", "powerup_jazz1_style"));
    map->insert(qMakePair( 22,  74), makeSampleMapping("object", "bonus_not_enough_coins"));
    map->insert(qMakePair( 22,  75), makeSampleMapping("pickup", "gem"));
    map->insert(qMakePair( 22,  76), makeSampleMapping("pickup", "ammo"));
    map->insert(qMakePair( 22,  77), makeSampleMapping("common", "pistol1"));
    map->insert(qMakePair( 22,  78), makeSampleMapping("common", "plop_5"));
    map->insert(qMakePair( 22,  79), makeSampleMapping("common", "plop_1"));
    map->insert(qMakePair( 22,  80), makeSampleMapping("common", "plop_2"));
    map->insert(qMakePair( 22,  81), makeSampleMapping("common", "plop_3"));
    map->insert(qMakePair( 22,  82), makeSampleMapping("common", "plop_4"));
    map->insert(qMakePair( 22,  83), makeSampleMapping("common", "plop_6"));
    map->insert(qMakePair( 22,  84), makeSampleMapping("spaz", "idle_flavor_4_spaceship"));
    map->insert(qMakePair( 22,  85), makeSampleMapping("common", "copter_pre"));
    map->insert(qMakePair( 22,  86), makeSampleMapping("common", "char_revup"));
    map->insert(qMakePair( 22,  87), makeSampleMapping("common", "ringgun1"));
    map->insert(qMakePair( 22,  88), makeSampleMapping("common", "ringgun2"));
    map->insert(qMakePair( 22,  89), makeSampleMapping("weapon", "shield_fire_noise"));
    map->insert(qMakePair( 22,  90), makeSampleMapping("weapon", "shield_lightning_noise"));
    map->insert(qMakePair( 22,  91), makeSampleMapping("weapon", "shield_lightning_noise_2"));
    map->insert(qMakePair( 22,  92), makeSampleMapping("common", "shldof3"));
    map->insert(qMakePair( 22,  93), makeSampleMapping("common", "slip"));
    map->insert(qMakePair( 22,  94), makeSampleMapping("common", "splat_1"));
    map->insert(qMakePair( 22,  95), makeSampleMapping("common", "splat_2"));
    map->insert(qMakePair( 22,  96), makeSampleMapping("common", "splat_3"));
    map->insert(qMakePair( 22,  97), makeSampleMapping("common", "splat_4"));
    map->insert(qMakePair( 22,  98), makeSampleMapping("common", "splat_5"));
    map->insert(qMakePair( 22,  99), makeSampleMapping("common", "splat_6"));
    map->insert(qMakePair( 22, 100), makeSampleMapping("spring", "spring_2"));
    map->insert(qMakePair( 22, 101), makeSampleMapping("common", "steam_low"));
    map->insert(qMakePair( 22, 102), makeSampleMapping("common", "step"));
    map->insert(qMakePair( 22, 103), makeSampleMapping("common", "stretch"));
    map->insert(qMakePair( 22, 104), makeSampleMapping("common", "swish_1"));
    map->insert(qMakePair( 22, 105), makeSampleMapping("common", "swish_2"));
    map->insert(qMakePair( 22, 106), makeSampleMapping("common", "swish_3"));
    map->insert(qMakePair( 22, 107), makeSampleMapping("common", "swish_4"));
    map->insert(qMakePair( 22, 108), makeSampleMapping("common", "swish_5"));
    map->insert(qMakePair( 22, 109), makeSampleMapping("common", "swish_6"));
    map->insert(qMakePair( 22, 110), makeSampleMapping("common", "swish_7"));
    map->insert(qMakePair( 22, 111), makeSampleMapping("common", "swish_8"));
    map->insert(qMakePair( 22, 112), makeSampleMapping("common", "warp_in"));
    map->insert(qMakePair( 22, 113), makeSampleMapping("common", "warp_out"));
    map->insert(qMakePair( 22, 114), makeSampleMapping("common", "char_double_jump"));
    map->insert(qMakePair( 22, 115), makeSampleMapping("common", "water_splash"));
    map->insert(qMakePair( 22, 116), makeSampleMapping("object", "container_crate_break"));
    map->insert(qMakePair( 24,   0), makeSampleMapping("demon", "attack"));
    map->insert(qMakePair( 27,   0), makeSampleMapping("devan", "spit_fireball"));
    map->insert(qMakePair( 27,   1), makeSampleMapping("devan", "flap"));
    map->insert(qMakePair( 27,   2), makeSampleMapping("devan", "unknown_frog4"));
    map->insert(qMakePair( 27,   3), makeSampleMapping("devan", "jump_up"));
    map->insert(qMakePair( 27,   4), makeSampleMapping("devan", "laugh"));
    map->insert(qMakePair( 27,   5), makeSampleMapping("devan", "shoot"));
    map->insert(qMakePair( 27,   6), makeSampleMapping("devan", "transform_demon_stretch_2"));
    map->insert(qMakePair( 27,   7), makeSampleMapping("devan", "transform_demon_stretch_4"));
    map->insert(qMakePair( 27,   8), makeSampleMapping("devan", "transform_demon_stretch_1"));
    map->insert(qMakePair( 27,   9), makeSampleMapping("devan", "transform_demon_stretch_3"));
    map->insert(qMakePair( 27,  10), makeSampleMapping("devan", "unknown_vanish"));
    map->insert(qMakePair( 27,  11), makeSampleMapping("devan", "unknown_whistledescending2"));
    map->insert(qMakePair( 27,  12), makeSampleMapping("devan", "transform_demon_wings"));
    map->insert(qMakePair( 29,   0), makeSampleMapping("doggy", "attack"));
    map->insert(qMakePair( 29,   1), makeSampleMapping("doggy", "noise"));
    map->insert(qMakePair( 29,   2), makeSampleMapping("doggy", "woof_1"));
    map->insert(qMakePair( 29,   3), makeSampleMapping("doggy", "woof_2"));
    map->insert(qMakePair( 29,   4), makeSampleMapping("doggy", "woof_3"));
    map->insert(qMakePair( 31,   0), makeSampleMapping("dragonfly", "noise"));
    map->insert(qMakePair( 33,   0), makeSampleMapping("cinematic", "ending_eva_thankyou"));
    map->insert(qMakePair( 34,   0), makeSampleMapping("jazz", "level_complete"));
    if (useOffsets) {
        offset += 1;
    } else {
        map->insert(qMakePair( 35 - offset,   0), makeSampleMapping("lori", "level_complete"));
    }
    map->insert(qMakePair( 36 - offset,   0), makeSampleMapping("spaz", "level_complete"));
    map->insert(qMakePair( 37 - offset,   0), makeSampleMapping("cinematic", "logo_epic_1"));
    map->insert(qMakePair( 37 - offset,   1), makeSampleMapping("cinematic", "logo_epic_2"));
    map->insert(qMakePair( 38 - offset,   0), makeSampleMapping("eva", "kiss_1"));
    map->insert(qMakePair( 38 - offset,   1), makeSampleMapping("eva", "kiss_2"));
    map->insert(qMakePair( 38 - offset,   2), makeSampleMapping("eva", "kiss_3"));
    map->insert(qMakePair( 38 - offset,   3), makeSampleMapping("eva", "kiss_4"));
    map->insert(qMakePair( 40 - offset,   0), makeSampleMapping("unknown", "unknown_fan"));
    map->insert(qMakePair( 41 - offset,   0), makeSampleMapping("chick", "attack_1"));
    map->insert(qMakePair( 41 - offset,   1), makeSampleMapping("chick", "attack_2"));
    map->insert(qMakePair( 41 - offset,   2), makeSampleMapping("chick", "attack_3"));
    map->insert(qMakePair( 42 - offset,   0), makeSampleMapping("fencer", "attack"));
    map->insert(qMakePair( 47 - offset,   0), makeSampleMapping("frog", "noise_1"));
    map->insert(qMakePair( 47 - offset,   1), makeSampleMapping("frog", "noise_2"));
    map->insert(qMakePair( 47 - offset,   2), makeSampleMapping("frog", "noise_3"));
    map->insert(qMakePair( 47 - offset,   3), makeSampleMapping("frog", "noise_4"));
    map->insert(qMakePair( 47 - offset,   4), makeSampleMapping("frog", "noise_5"));
    map->insert(qMakePair( 47 - offset,   5), makeSampleMapping("frog", "noise_6"));
    map->insert(qMakePair( 47 - offset,   6), makeSampleMapping("frog", "transform"));
    map->insert(qMakePair( 47 - offset,   7), makeSampleMapping("frog", "tongue"));
    map->insert(qMakePair( 50 - offset,   0), makeSampleMapping("unimplemented", "boxing_glove_hit"));
    map->insert(qMakePair( 52 - offset,   0), makeSampleMapping("mad_hatter", "cup"));
    map->insert(qMakePair( 52 - offset,   1), makeSampleMapping("mad_hatter", "hat"));
    map->insert(qMakePair( 52 - offset,   2), makeSampleMapping("mad_hatter", "spit"));
    map->insert(qMakePair( 52 - offset,   3), makeSampleMapping("mad_hatter", "splash_1"));
    map->insert(qMakePair( 52 - offset,   4), makeSampleMapping("mad_hatter", "splash_2"));
    map->insert(qMakePair( 54 - offset,   0), makeSampleMapping("cinematic", "opening_blow"));
    map->insert(qMakePair( 54 - offset,   1), makeSampleMapping("cinematic", "opening_boom_1"));
    map->insert(qMakePair( 54 - offset,   2), makeSampleMapping("cinematic", "opening_boom_2"));
    map->insert(qMakePair( 54 - offset,   3), makeSampleMapping("cinematic", "opening_brake"));
    map->insert(qMakePair( 54 - offset,   4), makeSampleMapping("cinematic", "opening_end_shoot"));
    map->insert(qMakePair( 54 - offset,   5), makeSampleMapping("cinematic", "opening_rope_grab"));
    map->insert(qMakePair( 54 - offset,   6), makeSampleMapping("cinematic", "opening_sweep_1"));
    map->insert(qMakePair( 54 - offset,   7), makeSampleMapping("cinematic", "opening_sweep_2"));
    map->insert(qMakePair( 54 - offset,   8), makeSampleMapping("cinematic", "opening_sweep_3"));
    map->insert(qMakePair( 54 - offset,   9), makeSampleMapping("cinematic", "opening_gun_noise_1"));
    map->insert(qMakePair( 54 - offset,  10), makeSampleMapping("cinematic", "opening_gun_noise_2"));
    map->insert(qMakePair( 54 - offset,  11), makeSampleMapping("cinematic", "opening_gun_noise_3"));
    map->insert(qMakePair( 54 - offset,  12), makeSampleMapping("cinematic", "opening_helicopter"));
    map->insert(qMakePair( 54 - offset,  13), makeSampleMapping("cinematic", "opening_hit_spaz"));
    map->insert(qMakePair( 54 - offset,  14), makeSampleMapping("cinematic", "opening_hit_turtle"));
    map->insert(qMakePair( 54 - offset,  15), makeSampleMapping("cinematic", "opening_vo_1"));
    map->insert(qMakePair( 54 - offset,  16), makeSampleMapping("cinematic", "opening_gun_blow"));
    map->insert(qMakePair( 54 - offset,  17), makeSampleMapping("cinematic", "opening_insect"));
    map->insert(qMakePair( 54 - offset,  18), makeSampleMapping("cinematic", "opening_trolley_push"));
    map->insert(qMakePair( 54 - offset,  19), makeSampleMapping("cinematic", "opening_land"));
    map->insert(qMakePair( 54 - offset,  20), makeSampleMapping("cinematic", "opening_turtle_growl"));
    map->insert(qMakePair( 54 - offset,  21), makeSampleMapping("cinematic", "opening_turtle_grunt"));
    map->insert(qMakePair( 54 - offset,  22), makeSampleMapping("cinematic", "opening_rock"));
    map->insert(qMakePair( 54 - offset,  23), makeSampleMapping("cinematic", "opening_rope_1"));
    map->insert(qMakePair( 54 - offset,  24), makeSampleMapping("cinematic", "opening_rope_2"));
    map->insert(qMakePair( 54 - offset,  25), makeSampleMapping("cinematic", "opening_run"));
    map->insert(qMakePair( 54 - offset,  26), makeSampleMapping("cinematic", "opening_shot"));
    map->insert(qMakePair( 54 - offset,  27), makeSampleMapping("cinematic", "opening_shot_grn"));
    map->insert(qMakePair( 54 - offset,  28), makeSampleMapping("cinematic", "opening_slide"));
    map->insert(qMakePair( 54 - offset,  29), makeSampleMapping("cinematic", "opening_end_sfx"));
    map->insert(qMakePair( 54 - offset,  30), makeSampleMapping("cinematic", "opening_swish_1"));
    map->insert(qMakePair( 54 - offset,  31), makeSampleMapping("cinematic", "opening_swish_2"));
    map->insert(qMakePair( 54 - offset,  32), makeSampleMapping("cinematic", "opening_swish_3"));
    map->insert(qMakePair( 54 - offset,  33), makeSampleMapping("cinematic", "opening_swish_4"));
    map->insert(qMakePair( 54 - offset,  34), makeSampleMapping("cinematic", "opening_turtle_ugh"));
    map->insert(qMakePair( 54 - offset,  35), makeSampleMapping("cinematic", "opening_up_1"));
    map->insert(qMakePair( 54 - offset,  36), makeSampleMapping("cinematic", "opening_up_2"));
    map->insert(qMakePair( 54 - offset,  37), makeSampleMapping("cinematic", "opening_wind"));
    map->insert(qMakePair( 57 - offset,   0), makeSampleMapping("jazz", "ledge"));
    map->insert(qMakePair( 57 - offset,   1), makeSampleMapping("jazz", "hurt_1"));
    map->insert(qMakePair( 57 - offset,   2), makeSampleMapping("jazz", "hurt_2"));
    map->insert(qMakePair( 57 - offset,   3), makeSampleMapping("jazz", "hurt_3"));
    map->insert(qMakePair( 57 - offset,   4), makeSampleMapping("jazz", "hurt_4"));
    map->insert(qMakePair( 57 - offset,   5), makeSampleMapping("jazz", "idle_flavor_3"));
    map->insert(qMakePair( 57 - offset,   6), makeSampleMapping("jazz", "hurt_5"));
    map->insert(qMakePair( 57 - offset,   7), makeSampleMapping("jazz", "hurt_6"));
    map->insert(qMakePair( 57 - offset,   8), makeSampleMapping("jazz", "hurt_7"));
    map->insert(qMakePair( 57 - offset,   9), makeSampleMapping("jazz", "hurt_8"));
    map->insert(qMakePair( 57 - offset,  10), makeSampleMapping("jazz", "carrot"));
    map->insert(qMakePair( 57 - offset,  11), makeSampleMapping("jazz", "idle_flavor_4"));
    map->insert(qMakePair( 59 - offset,   0), makeSampleMapping("lab_rat", "attack"));
    map->insert(qMakePair( 59 - offset,   1), makeSampleMapping("lab_rat", "noise_1"));
    map->insert(qMakePair( 59 - offset,   2), makeSampleMapping("lab_rat", "noise_2"));
    map->insert(qMakePair( 59 - offset,   3), makeSampleMapping("lab_rat", "noise_3"));
    map->insert(qMakePair( 59 - offset,   4), makeSampleMapping("lab_rat", "noise_4"));
    map->insert(qMakePair( 59 - offset,   5), makeSampleMapping("lab_rat", "noise_5"));
    map->insert(qMakePair( 60 - offset,   0), makeSampleMapping("lizard", "noise_1"));
    map->insert(qMakePair( 60 - offset,   1), makeSampleMapping("lizard", "noise_2"));
    map->insert(qMakePair( 60 - offset,   2), makeSampleMapping("lizard", "noise_3"));
    map->insert(qMakePair( 60 - offset,   3), makeSampleMapping("lizard", "noise_4"));
    if (useOffsets) {
        offset += 3;
    } else {
        map->insert(qMakePair( 63 - offset,   0), makeSampleMapping("lori", "die"));
        map->insert(qMakePair( 63 - offset,   1), makeSampleMapping("lori", "hurt_1"));
        map->insert(qMakePair( 63 - offset,   2), makeSampleMapping("lori", "hurt_2"));
        map->insert(qMakePair( 63 - offset,   3), makeSampleMapping("lori", "hurt_3"));
        map->insert(qMakePair( 63 - offset,   4), makeSampleMapping("lori", "hurt_4"));
        map->insert(qMakePair( 63 - offset,   5), makeSampleMapping("lori", "hurt_5"));
        map->insert(qMakePair( 63 - offset,   6), makeSampleMapping("lori", "hurt_6"));
        map->insert(qMakePair( 63 - offset,   7), makeSampleMapping("lori", "hurt_7"));
        map->insert(qMakePair( 63 - offset,   8), makeSampleMapping("lori", "hurt_8"));
        map->insert(qMakePair( 63 - offset,   9), makeSampleMapping("lori", "unknown_mic1"));
        map->insert(qMakePair( 63 - offset,  10), makeSampleMapping("lori", "unknown_mic2"));
        map->insert(qMakePair( 63 - offset,  11), makeSampleMapping("lori", "sidekick"));
        map->insert(qMakePair( 63 - offset,  12), makeSampleMapping("lori", "fall"));
        map->insert(qMakePair( 63 - offset,  13), makeSampleMapping("lori", "jump_1"));
        map->insert(qMakePair( 63 - offset,  14), makeSampleMapping("lori", "jump_2"));
        map->insert(qMakePair( 63 - offset,  15), makeSampleMapping("lori", "jump_3"));
        map->insert(qMakePair( 63 - offset,  16), makeSampleMapping("lori", "jump_4"));
        map->insert(qMakePair( 63 - offset,  17), makeSampleMapping("lori", "unused_touch"));
        map->insert(qMakePair( 63 - offset,  18), makeSampleMapping("lori", "yahoo"));
    }
    map->insert(qMakePair( 66 - offset,   0), makeSampleMapping("ui", "select_1"));
    map->insert(qMakePair( 66 - offset,   1), makeSampleMapping("ui", "select_2"));
    map->insert(qMakePair( 66 - offset,   2), makeSampleMapping("ui", "select_3"));
    map->insert(qMakePair( 66 - offset,   3), makeSampleMapping("ui", "select_4"));
    map->insert(qMakePair( 66 - offset,   4), makeSampleMapping("ui", "select_5"));
    map->insert(qMakePair( 66 - offset,   5), makeSampleMapping("ui", "select_6"));
    map->insert(qMakePair( 66 - offset,   6), makeSampleMapping("ui", "select_7"));
    map->insert(qMakePair( 66 - offset,   7), makeSampleMapping("ui", "type_char"));
    map->insert(qMakePair( 66 - offset,   8), makeSampleMapping("ui", "type_enter"));
    map->insert(qMakePair( 67 - offset,   0), makeSampleMapping("monkey", "banana_splat"));
    map->insert(qMakePair( 67 - offset,   1), makeSampleMapping("monkey", "banana_throw"));
    map->insert(qMakePair( 68 - offset,   0), makeSampleMapping("moth", "flap"));
    map->insert(qMakePair( 69 - offset,   0), makeSampleMapping("cinematic", "orangegames_1_boom_l"));
    map->insert(qMakePair( 69 - offset,   1), makeSampleMapping("cinematic", "orangegames_1_boom_r"));
    map->insert(qMakePair( 69 - offset,   2), makeSampleMapping("cinematic", "orangegames_7_bubble_l"));
    map->insert(qMakePair( 69 - offset,   3), makeSampleMapping("cinematic", "orangegames_7_bubble_r"));
    map->insert(qMakePair( 69 - offset,   4), makeSampleMapping("cinematic", "orangegames_2_glass_1_l"));
    map->insert(qMakePair( 69 - offset,   5), makeSampleMapping("cinematic", "orangegames_2_glass_1_r"));
    map->insert(qMakePair( 69 - offset,   6), makeSampleMapping("cinematic", "orangegames_5_glass_2_l"));
    map->insert(qMakePair( 69 - offset,   7), makeSampleMapping("cinematic", "orangegames_5_glass_2_r"));
    map->insert(qMakePair( 69 - offset,   8), makeSampleMapping("cinematic", "orangegames_6_merge"));
    map->insert(qMakePair( 69 - offset,   9), makeSampleMapping("cinematic", "orangegames_3_sweep_1_l"));
    map->insert(qMakePair( 69 - offset,  10), makeSampleMapping("cinematic", "orangegames_3_sweep_1_r"));
    map->insert(qMakePair( 69 - offset,  11), makeSampleMapping("cinematic", "orangegames_4_sweep_2_l"));
    map->insert(qMakePair( 69 - offset,  12), makeSampleMapping("cinematic", "orangegames_4_sweep_2_r"));
    map->insert(qMakePair( 69 - offset,  13), makeSampleMapping("cinematic", "orangegames_5_sweep_3_l"));
    map->insert(qMakePair( 69 - offset,  14), makeSampleMapping("cinematic", "orangegames_5_sweep_3_r"));
    map->insert(qMakePair( 70 - offset,   0), makeSampleMapping("cinematic", "project2_unused_crunch"));
    map->insert(qMakePair( 70 - offset,   1), makeSampleMapping("cinematic", "project2_10_fart"));
    map->insert(qMakePair( 70 - offset,   2), makeSampleMapping("cinematic", "project2_unused_foew1"));
    map->insert(qMakePair( 70 - offset,   3), makeSampleMapping("cinematic", "project2_unused_foew4"));
    map->insert(qMakePair( 70 - offset,   4), makeSampleMapping("cinematic", "project2_unused_foew5"));
    map->insert(qMakePair( 70 - offset,   5), makeSampleMapping("cinematic", "project2_unused_frog1"));
    map->insert(qMakePair( 70 - offset,   6), makeSampleMapping("cinematic", "project2_unused_frog2"));
    map->insert(qMakePair( 70 - offset,   7), makeSampleMapping("cinematic", "project2_unused_frog3"));
    map->insert(qMakePair( 70 - offset,   8), makeSampleMapping("cinematic", "project2_unused_frog4"));
    map->insert(qMakePair( 70 - offset,   9), makeSampleMapping("cinematic", "project2_unused_frog5"));
    map->insert(qMakePair( 70 - offset,  10), makeSampleMapping("cinematic", "project2_unused_kiss4"));
    map->insert(qMakePair( 70 - offset,  11), makeSampleMapping("cinematic", "project2_unused_open"));
    map->insert(qMakePair( 70 - offset,  12), makeSampleMapping("cinematic", "project2_unused_pinch1"));
    map->insert(qMakePair( 70 - offset,  13), makeSampleMapping("cinematic", "project2_unused_pinch2"));
    map->insert(qMakePair( 70 - offset,  14), makeSampleMapping("cinematic", "project2_3_plop_1"));
    map->insert(qMakePair( 70 - offset,  15), makeSampleMapping("cinematic", "project2_4_plop_2"));
    map->insert(qMakePair( 70 - offset,  16), makeSampleMapping("cinematic", "project2_5_plop_3"));
    map->insert(qMakePair( 70 - offset,  17), makeSampleMapping("cinematic", "project2_6_plop_4"));
    map->insert(qMakePair( 70 - offset,  18), makeSampleMapping("cinematic", "project2_7_plop_5"));
    map->insert(qMakePair( 70 - offset,  19), makeSampleMapping("cinematic", "project2_9_spit"));
    map->insert(qMakePair( 70 - offset,  20), makeSampleMapping("cinematic", "project2_unused_splout"));
    map->insert(qMakePair( 70 - offset,  21), makeSampleMapping("cinematic", "project2_2_splat"));
    map->insert(qMakePair( 70 - offset,  22), makeSampleMapping("cinematic", "project2_1_8_throw"));
    map->insert(qMakePair( 70 - offset,  23), makeSampleMapping("cinematic", "project2_unused_tong"));
    map->insert(qMakePair( 71 - offset,   0), makeSampleMapping("object", "savepoint_open"));
    map->insert(qMakePair( 71 - offset,   1), makeSampleMapping("object", "copter"));
    map->insert(qMakePair( 71 - offset,   2), makeSampleMapping("unknown", "unknown_pickup_stretch1a"));
    map->insert(qMakePair( 72 - offset,   0), makeSampleMapping("pinball", "bumper_hit"));
    map->insert(qMakePair( 72 - offset,   1), makeSampleMapping("pinball", "flipper_1"));
    map->insert(qMakePair( 72 - offset,   2), makeSampleMapping("pinball", "flipper_2"));
    map->insert(qMakePair( 72 - offset,   3), makeSampleMapping("pinball", "flipper_3"));
    map->insert(qMakePair( 72 - offset,   4), makeSampleMapping("pinball", "flipper_4"));
    map->insert(qMakePair( 75 - offset,   0), makeSampleMapping("queen", "spring"));
    map->insert(qMakePair( 75 - offset,   1), makeSampleMapping("queen", "scream"));
    map->insert(qMakePair( 76 - offset,   0), makeSampleMapping("rapier", "die"));
    map->insert(qMakePair( 76 - offset,   1), makeSampleMapping("rapier", "noise_1"));
    map->insert(qMakePair( 76 - offset,   2), makeSampleMapping("rapier", "noise_2"));
    map->insert(qMakePair( 76 - offset,   3), makeSampleMapping("rapier", "noise_3"));
    map->insert(qMakePair( 76 - offset,   4), makeSampleMapping("rapier", "clunk"));
    map->insert(qMakePair( 78 - offset,   0), makeSampleMapping("robot", "unknown_big1"));
    map->insert(qMakePair( 78 - offset,   1), makeSampleMapping("robot", "unknown_big2"));
    map->insert(qMakePair( 78 - offset,   2), makeSampleMapping("robot", "unknown_can1"));
    map->insert(qMakePair( 78 - offset,   3), makeSampleMapping("robot", "unknown_can2"));
    map->insert(qMakePair( 78 - offset,   4), makeSampleMapping("robot", "attack_start"));
    map->insert(qMakePair( 78 - offset,   5), makeSampleMapping("robot", "attack_end"));
    map->insert(qMakePair( 78 - offset,   6), makeSampleMapping("robot", "attack"));
    map->insert(qMakePair( 78 - offset,   7), makeSampleMapping("robot", "unknown_hydropuf"));
    map->insert(qMakePair( 78 - offset,   8), makeSampleMapping("robot", "unknown_idle1"));
    map->insert(qMakePair( 78 - offset,   9), makeSampleMapping("robot", "unknown_idle2"));
    map->insert(qMakePair( 78 - offset,  10), makeSampleMapping("robot", "unknown_jmpcan1"));
    map->insert(qMakePair( 78 - offset,  11), makeSampleMapping("robot", "unknown_jmpcan10"));
    map->insert(qMakePair( 78 - offset,  12), makeSampleMapping("robot", "unknown_jmpcan2"));
    map->insert(qMakePair( 78 - offset,  13), makeSampleMapping("robot", "unknown_jmpcan3"));
    map->insert(qMakePair( 78 - offset,  14), makeSampleMapping("robot", "unknown_jmpcan4"));
    map->insert(qMakePair( 78 - offset,  15), makeSampleMapping("robot", "unknown_jmpcan5"));
    map->insert(qMakePair( 78 - offset,  16), makeSampleMapping("robot", "unknown_jmpcan6"));
    map->insert(qMakePair( 78 - offset,  17), makeSampleMapping("robot", "unknown_jmpcan7"));
    map->insert(qMakePair( 78 - offset,  18), makeSampleMapping("robot", "unknown_jmpcan8"));
    map->insert(qMakePair( 78 - offset,  19), makeSampleMapping("robot", "unknown_jmpcan9"));
    map->insert(qMakePair( 78 - offset,  20), makeSampleMapping("robot", "shrapnel_1"));
    map->insert(qMakePair( 78 - offset,  21), makeSampleMapping("robot", "shrapnel_2"));
    map->insert(qMakePair( 78 - offset,  22), makeSampleMapping("robot", "shrapnel_3"));
    map->insert(qMakePair( 78 - offset,  23), makeSampleMapping("robot", "shrapnel_4"));
    map->insert(qMakePair( 78 - offset,  24), makeSampleMapping("robot", "shrapnel_5"));
    map->insert(qMakePair( 78 - offset,  25), makeSampleMapping("robot", "attack_start_shutter"));
    map->insert(qMakePair( 78 - offset,  26), makeSampleMapping("robot", "unknown_out"));
    map->insert(qMakePair( 78 - offset,  27), makeSampleMapping("robot", "unknown_poep"));
    map->insert(qMakePair( 78 - offset,  28), makeSampleMapping("robot", "unknown_pole"));
    map->insert(qMakePair( 78 - offset,  29), makeSampleMapping("robot", "unknown_shoot"));
    map->insert(qMakePair( 78 - offset,  30), makeSampleMapping("robot", "walk_1"));
    map->insert(qMakePair( 78 - offset,  31), makeSampleMapping("robot", "walk_2"));
    map->insert(qMakePair( 78 - offset,  32), makeSampleMapping("robot", "walk_3"));
    map->insert(qMakePair( 79 - offset,   0), makeSampleMapping("object", "rolling_rock"));
    if (useOffsets) {
        map->insert(qMakePair(81 - offset, 0), makeSampleMapping("unknown", "sugar_rush_heartbeat"));
        offset_local = 1;
    }
    map->insert(qMakePair( 81 - offset,   0 + offset_local), makeSampleMapping("pickup", "food_sugar_rush"));
    map->insert(qMakePair( 82 - offset,   0), makeSampleMapping("common", "science_noise"));
    map->insert(qMakePair( 83 - offset,   0), makeSampleMapping("skeleton", "bone_1"));
    map->insert(qMakePair( 83 - offset,   1), makeSampleMapping("skeleton", "bone_2"));
    map->insert(qMakePair( 83 - offset,   2), makeSampleMapping("skeleton", "bone_3"));
    map->insert(qMakePair( 83 - offset,   3), makeSampleMapping("skeleton", "bone_4"));
    map->insert(qMakePair( 83 - offset,   4), makeSampleMapping("skeleton", "bone_5"));
    map->insert(qMakePair( 83 - offset,   5), makeSampleMapping("skeleton", "bone_6"));
    map->insert(qMakePair( 84 - offset,   0), makeSampleMapping("pole", "tree_fall_1"));
    map->insert(qMakePair( 84 - offset,   1), makeSampleMapping("pole", "tree_fall_2"));
    map->insert(qMakePair( 84 - offset,   2), makeSampleMapping("pole", "tree_fall_3"));
    map->insert(qMakePair( 86 - offset,   0), makeSampleMapping("spike", "missile_1"));
    map->insert(qMakePair( 86 - offset,   1), makeSampleMapping("spike", "missile_2"));
    map->insert(qMakePair( 86 - offset,   2), makeSampleMapping("spike", "missile_3"));
    map->insert(qMakePair( 86 - offset,   3), makeSampleMapping("spike", "noise"));
    map->insert(qMakePair( 86 - offset,   4), makeSampleMapping("spike", "lock_on"));
    map->insert(qMakePair( 92 - offset,   0), makeSampleMapping("spaz", "hurt_1"));
    map->insert(qMakePair( 92 - offset,   1), makeSampleMapping("spaz", "hurt_2"));
    map->insert(qMakePair( 92 - offset,   2), makeSampleMapping("spaz", "idle_flavor_3_bird_land"));
    map->insert(qMakePair( 92 - offset,   3), makeSampleMapping("spaz", "idle_flavor_4"));
    map->insert(qMakePair( 92 - offset,   4), makeSampleMapping("spaz", "idle_flavor_3_bird"));
    map->insert(qMakePair( 92 - offset,   5), makeSampleMapping("spaz", "idle_flavor_3_eat"));
    map->insert(qMakePair( 92 - offset,   6), makeSampleMapping("spaz", "jump_1"));
    map->insert(qMakePair( 92 - offset,   7), makeSampleMapping("spaz", "jump_2"));
    map->insert(qMakePair( 92 - offset,   8), makeSampleMapping("spaz", "idle_flavor_2"));
    map->insert(qMakePair( 92 - offset,   9), makeSampleMapping("spaz", "hihi"));
    map->insert(qMakePair( 92 - offset,  10), makeSampleMapping("spaz", "spring_1"));
    map->insert(qMakePair( 92 - offset,  11), makeSampleMapping("spaz", "double_jump"));
    map->insert(qMakePair( 92 - offset,  12), makeSampleMapping("spaz", "sidekick_1"));
    map->insert(qMakePair( 92 - offset,  13), makeSampleMapping("spaz", "sidekick_2"));
    map->insert(qMakePair( 92 - offset,  14), makeSampleMapping("spaz", "spring_2"));
    map->insert(qMakePair( 92 - offset,  15), makeSampleMapping("spaz", "oooh"));
    map->insert(qMakePair( 92 - offset,  16), makeSampleMapping("spaz", "ledge"));
    map->insert(qMakePair( 92 - offset,  17), makeSampleMapping("spaz", "jump_3"));
    map->insert(qMakePair( 92 - offset,  18), makeSampleMapping("spaz", "jump_4"));
    map->insert(qMakePair( 96 - offset,   0), makeSampleMapping("spring", "spring_ver_down"));
    map->insert(qMakePair( 96 - offset,   1), makeSampleMapping("spring", "spring"));
    map->insert(qMakePair( 97 - offset,   0), makeSampleMapping("common", "steam_note"));
    map->insert(qMakePair( 98 - offset,   0), makeSampleMapping("unimplemented", "dizzy"));
    map->insert(qMakePair( 99 - offset,   0), makeSampleMapping("sucker_tube", "deflate"));
    map->insert(qMakePair( 99 - offset,   1), makeSampleMapping("sucker_tube", "pinch_1"));
    map->insert(qMakePair( 99 - offset,   2), makeSampleMapping("sucker_tube", "pinch_2"));
    map->insert(qMakePair( 99 - offset,   3), makeSampleMapping("sucker_tube", "pinch_3"));
    map->insert(qMakePair( 99 - offset,   4), makeSampleMapping("sucker_tube", "plop_1"));
    map->insert(qMakePair( 99 - offset,   5), makeSampleMapping("sucker_tube", "plop_2"));
    map->insert(qMakePair( 99 - offset,   6), makeSampleMapping("sucker_tube", "plop_3"));
    map->insert(qMakePair( 99 - offset,   7), makeSampleMapping("sucker_tube", "plop_4"));
    map->insert(qMakePair( 99 - offset,   8), makeSampleMapping("sucker_tube", "up"));
    map->insert(qMakePair(101 - offset,   0), makeSampleMapping("tough_turtle_boss", "attack_start"));
    map->insert(qMakePair(101 - offset,   1), makeSampleMapping("tough_turtle_boss", "attack_end"));
    map->insert(qMakePair(101 - offset,   2), makeSampleMapping("tough_turtle_boss", "mace"));
    map->insert(qMakePair(103 - offset,   0), makeSampleMapping("turtle", "attack_bite"));
    map->insert(qMakePair(103 - offset,   1), makeSampleMapping("turtle", "turn_start"));
    map->insert(qMakePair(103 - offset,   2), makeSampleMapping("turtle", "shell_collide"));
    map->insert(qMakePair(103 - offset,   3), makeSampleMapping("turtle", "idle_1"));
    map->insert(qMakePair(103 - offset,   4), makeSampleMapping("turtle", "idle_2"));
    map->insert(qMakePair(103 - offset,   5), makeSampleMapping("turtle", "attack_neck"));
    map->insert(qMakePair(103 - offset,   6), makeSampleMapping("turtle", "noise_1"));
    map->insert(qMakePair(103 - offset,   7), makeSampleMapping("turtle", "noise_2"));
    map->insert(qMakePair(103 - offset,   8), makeSampleMapping("turtle", "noise_3"));
    map->insert(qMakePair(103 - offset,   9), makeSampleMapping("turtle", "noise_4"));
    map->insert(qMakePair(103 - offset,  10), makeSampleMapping("turtle", "turn_end"));
    map->insert(qMakePair(105 - offset,   0), makeSampleMapping("uterus", "closed_start"));
    map->insert(qMakePair(105 - offset,   1), makeSampleMapping("uterus", "closed_end"));
    map->insert(qMakePair(105 - offset,   2), makeSampleMapping("crab", "noise_1"));
    map->insert(qMakePair(105 - offset,   3), makeSampleMapping("crab", "noise_2"));
    map->insert(qMakePair(105 - offset,   4), makeSampleMapping("crab", "noise_3"));
    map->insert(qMakePair(105 - offset,   5), makeSampleMapping("crab", "noise_4"));
    map->insert(qMakePair(105 - offset,   6), makeSampleMapping("crab", "noise_5"));
    map->insert(qMakePair(105 - offset,   7), makeSampleMapping("crab", "noise_6"));
    map->insert(qMakePair(105 - offset,   8), makeSampleMapping("crab", "noise_7"));
    map->insert(qMakePair(105 - offset,   9), makeSampleMapping("crab", "noise_8"));
    map->insert(qMakePair(105 - offset,  10), makeSampleMapping("uterus", "scream"));
    map->insert(qMakePair(105 - offset,  11), makeSampleMapping("crab", "step_1"));
    map->insert(qMakePair(105 - offset,  12), makeSampleMapping("crab", "step_2"));
    map->insert(qMakePair(111 - offset,   0), makeSampleMapping("common", "wind"));
    map->insert(qMakePair(112 - offset,   0), makeSampleMapping("witch", "laugh"));
    map->insert(qMakePair(112 - offset,   1), makeSampleMapping("witch", "magic"));
    if (!useOffsets) {
        map->insert(qMakePair(113 - offset,   0), makeSampleMapping("bilsy", "xmas_appear_2"));
        map->insert(qMakePair(113 - offset,   1), makeSampleMapping("bilsy", "xmas_snap"));
        map->insert(qMakePair(113 - offset,   2), makeSampleMapping("bilsy", "xmas_throw_fireball"));
        map->insert(qMakePair(113 - offset,   3), makeSampleMapping("bilsy", "xmas_fire_start"));
        map->insert(qMakePair(113 - offset,   4), makeSampleMapping("bilsy", "xmas_scary"));
        map->insert(qMakePair(113 - offset,   5), makeSampleMapping("bilsy", "xmas_thunder"));
        map->insert(qMakePair(113 - offset,   6), makeSampleMapping("bilsy", "xmas_appear_1"));
        map->insert(qMakePair(114 - offset,   0), makeSampleMapping("lizard", "xmas_noise_1"));
        map->insert(qMakePair(114 - offset,   1), makeSampleMapping("lizard", "xmas_noise_2"));
        map->insert(qMakePair(114 - offset,   2), makeSampleMapping("lizard", "xmas_noise_3"));
        map->insert(qMakePair(114 - offset,   3), makeSampleMapping("lizard", "xmas_noise_4"));
        map->insert(qMakePair(115 - offset,   0), makeSampleMapping("turtle", "xmas_attack_bite"));
        map->insert(qMakePair(115 - offset,   1), makeSampleMapping("turtle", "xmas_turn_start"));
        map->insert(qMakePair(115 - offset,   2), makeSampleMapping("turtle", "xmas_shell_collide"));
        map->insert(qMakePair(115 - offset,   3), makeSampleMapping("turtle", "xmas_idle_1"));
        map->insert(qMakePair(115 - offset,   4), makeSampleMapping("turtle", "xmas_idle_2"));
        map->insert(qMakePair(115 - offset,   5), makeSampleMapping("turtle", "xmas_attack_neck"));
        map->insert(qMakePair(115 - offset,   6), makeSampleMapping("turtle", "xmas_noise_1"));
        map->insert(qMakePair(115 - offset,   7), makeSampleMapping("turtle", "xmas_noise_2"));
        map->insert(qMakePair(115 - offset,   8), makeSampleMapping("turtle", "xmas_noise_3"));
        map->insert(qMakePair(115 - offset,   9), makeSampleMapping("turtle", "xmas_noise_4"));
        map->insert(qMakePair(115 - offset,  10), makeSampleMapping("turtle", "xmas_turn_end"));
        map->insert(qMakePair(116 - offset,   0), makeSampleMapping("doggy", "xmas_attack"));
        map->insert(qMakePair(116 - offset,   1), makeSampleMapping("doggy", "xmas_noise"));
        map->insert(qMakePair(116 - offset,   2), makeSampleMapping("doggy", "xmas_woof_1"));
        map->insert(qMakePair(116 - offset,   3), makeSampleMapping("doggy", "xmas_woof_2"));
        map->insert(qMakePair(116 - offset,   4), makeSampleMapping("doggy", "xmas_woof_3"));
    }

    return map;
}