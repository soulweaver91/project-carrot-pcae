#include <memory>
#include <QMap>
#include <QString>
#include <version.h>
#include <palette.h>
#include <IDMapping.h>

SampleMapping IDMapper::makeSampleMapping(const std::string& first, const std::string& second) {
    return SampleMapping(QString::fromStdString(first), QString::fromStdString(second));
}

AnimMapping IDMapper::makeAnimMapping(const std::string& first, const std::string& second, const sf::Color* palette) {
    return AnimMapping(QString::fromStdString(first), QString::fromStdString(second), palette);
}

void IDMapper::nextSet(int advanceBy, uint appliesTo) {
    if ((jj2Version & appliesTo) > 0) {
        currentSet += advanceBy;
        currentItem = 0;
    }
}

void IDMapper::addAnimMapping(const uint appliesTo, const std::string& first, const std::string& second, const sf::Color* palette) {
    if ((jj2Version & appliesTo) > 0) {
        wipAnimMap->insert(qMakePair(currentSet, currentItem), makeAnimMapping(first, second, palette));
        currentItem++;
    }
}

void IDMapper::addAnimMapping(const std::string& first, const std::string& second, const sf::Color* palette) {
    addAnimMapping(JJ2Version::ALL, first, second, palette);
}

void IDMapper::addSampleMapping(const uint appliesTo, const std::string& first, const std::string& second) {
    if ((jj2Version & appliesTo) > 0) {
        wipSampleMap->insert(qMakePair(currentSet, currentItem), makeSampleMapping(first, second));
        currentItem++;
    }
}

void IDMapper::addSampleMapping(const std::string& first, const std::string& second) {
    addSampleMapping(JJ2Version::ALL, first, second);
}

const AnimMapping IDMapper::EMPTY_ANIM_MAPPING = makeAnimMapping("", "");
const SampleMapping IDMapper::EMPTY_SAMPLE_MAPPING = makeSampleMapping("", "");

std::unique_ptr<AnimIDMap> IDMapper::getAnimMapping() {
    wipAnimMap = std::make_unique<AnimIDMap>();
    std::unique_ptr<AnimIDMap> moved;
    currentItem = 0;
    currentSet = 0;

    if (jj2Version == JJ2Version::UNKNOWN) {
        moved.swap(wipAnimMap);
        return moved;
    }

    // set 0 (all)
    addAnimMapping("unknown", "flame_blue");
    addAnimMapping("common", "bomb");
    addAnimMapping("common", "smoke_poof");
    addAnimMapping("common", "explosion_rf");
    addAnimMapping("common", "explosion_small");
    addAnimMapping("common", "explosion_large");
    addAnimMapping("common", "smoke_circling_gray");
    addAnimMapping("common", "smoke_circling_brown");
    addAnimMapping("unknown", "bubble");
    addAnimMapping("unknown", "brown_thing");
    addAnimMapping("common", "explosion_pepper");
    addAnimMapping("unknown", "bullet_maybe_electro");
    addAnimMapping("unknown", "bullet_maybe_electro_trail");
    addAnimMapping("unknown", "flame_red");
    addAnimMapping("weapon", "bullet_shield_fireball");
    addAnimMapping("unknown", "flare_diag_downleft");
    addAnimMapping("unknown", "flare_hor");
    addAnimMapping("weapon", "bullet_blaster_upgraded_hor");
    addAnimMapping("ui", "blaster_upgraded_jazz");
    addAnimMapping("ui", "blaster_upgraded_spaz");
    addAnimMapping("weapon", "bullet_blaster_hor");
    addAnimMapping("weapon", "bullet_blaster_upgraded_ver");
    addAnimMapping("weapon", "bullet_blaster_ver");
    addAnimMapping("weapon", "bullet_bouncer");
    addAnimMapping("pickup", "ammo_bouncer_upgraded");
    addAnimMapping("pickup", "ammo_bouncer");
    addAnimMapping("weapon", "bullet_bouncer_upgraded");
    addAnimMapping("weapon", "bullet_freezer_hor");
    addAnimMapping("pickup", "ammo_freezer_upgraded");
    addAnimMapping("pickup", "ammo_freezer");
    addAnimMapping("weapon", "bullet_freezer_upgraded_hor");
    addAnimMapping("weapon", "bullet_freezer_ver");
    addAnimMapping("weapon", "bullet_freezer_upgraded_ver");
    addAnimMapping("pickup", "ammo_seeker_upgraded");
    addAnimMapping("pickup", "ammo_seeker");
    addAnimMapping("weapon", "bullet_seeker_ver_down");
    addAnimMapping("weapon", "bullet_seeker_diag_downright");
    addAnimMapping("weapon", "bullet_seeker_hor");
    addAnimMapping("weapon", "bullet_seeker_ver_up");
    addAnimMapping("weapon", "bullet_seeker_diag_upright");
    addAnimMapping("weapon", "bullet_seeker_upgraded_ver_down");
    addAnimMapping("weapon", "bullet_seeker_upgraded_diag_downright");
    addAnimMapping("weapon", "bullet_seeker_upgraded_hor");
    addAnimMapping("weapon", "bullet_seeker_upgraded_ver_up");
    addAnimMapping("weapon", "bullet_seeker_upgraded_diag_upright");
    addAnimMapping("weapon", "bullet_rf_hor");
    addAnimMapping("weapon", "bullet_rf_diag_downright");
    addAnimMapping("weapon", "bullet_rf_upgraded_diag_downright");
    addAnimMapping("pickup", "ammo_rf_upgraded");
    addAnimMapping("pickup", "ammo_rf");
    addAnimMapping("weapon", "bullet_rf_upgraded_hor");
    addAnimMapping("weapon", "bullet_rf_upgraded_ver");
    addAnimMapping("weapon", "bullet_rf_upgraded_diag_upright");
    addAnimMapping("weapon", "bullet_rf_ver");
    addAnimMapping("weapon", "bullet_rf_diag_upright");
    addAnimMapping("weapon", "bullet_toaster");
    addAnimMapping("pickup", "ammo_toaster_upgraded");
    addAnimMapping("pickup", "ammo_toaster");
    addAnimMapping("weapon", "bullet_toaster_upgraded");
    addAnimMapping("weapon", "bullet_tnt");
    addAnimMapping("weapon", "bullet_fireball_hor");
    addAnimMapping("pickup", "ammo_pepper_upgraded");
    addAnimMapping("pickup", "ammo_pepper");
    addAnimMapping("weapon", "bullet_fireball_upgraded_hor");
    addAnimMapping("weapon", "bullet_fireball_ver");
    addAnimMapping("weapon", "bullet_fireball_upgraded_ver");
    addAnimMapping("weapon", "bullet_bladegun");
    addAnimMapping("pickup", "ammo_electro_upgraded");
    addAnimMapping("pickup", "ammo_electro");
    addAnimMapping("weapon", "bullet_bladegun_upgraded");
    addAnimMapping("common", "explosion_tiny");
    addAnimMapping("common", "explosion_freezer_maybe");
    addAnimMapping("common", "explosion_tiny_black");
    addAnimMapping("weapon", "bullet_fireball_upgraded_hor_2");
    addAnimMapping("unknown", "flare_hor_2");
    addAnimMapping("unknown", "green_explosion");
    addAnimMapping("weapon", "bullet_bladegun_alt");
    addAnimMapping("weapon", "bullet_tnt_explosion");
    addAnimMapping("object", "container_ammo_shrapnel_1");
    addAnimMapping("object", "container_ammo_shrapnel_2");
    addAnimMapping("common", "explosion_upwards");
    addAnimMapping("common", "explosion_bomb");
    addAnimMapping("common", "smoke_circling_white");
    nextSet();
    addAnimMapping("bat", "idle");
    addAnimMapping("bat", "resting");
    addAnimMapping("bat", "takeoff_1");
    addAnimMapping("bat", "takeoff_2");
    addAnimMapping("bat", "roost");
    nextSet();
    addAnimMapping("bee", "swarm");
    nextSet();
    addAnimMapping("bee", "swarm_2");
    nextSet();
    addAnimMapping("object", "pushbox_crate");
    nextSet();
    addAnimMapping("object", "pushbox_rock");
    nextSet();
    addAnimMapping("unknown", "diamondus_tileset_tree");
    nextSet();
    addAnimMapping("bilsy", "throw_fireball");
    addAnimMapping("bilsy", "appear");
    addAnimMapping("bilsy", "vanish");
    addAnimMapping("bilsy", "bullet_fireball");
    addAnimMapping("bilsy", "idle");
    nextSet();
    addAnimMapping("birdy", "charge_diag_downright");
    addAnimMapping("birdy", "charge_ver");
    addAnimMapping("birdy", "charge_diag_upright");
    addAnimMapping("birdy", "caged");
    addAnimMapping("birdy", "cage_destroyed");
    addAnimMapping("birdy", "die");
    addAnimMapping("birdy", "feather_green");
    addAnimMapping("birdy", "feather_red");
    addAnimMapping("birdy", "feather_green_and_red");
    addAnimMapping("birdy", "fly");
    addAnimMapping("birdy", "hurt");
    addAnimMapping("birdy", "idle_worm");
    addAnimMapping("birdy", "idle_turn_head_left");
    addAnimMapping("birdy", "idle_look_left");
    addAnimMapping("birdy", "idle_turn_head_left_back");
    addAnimMapping("birdy", "idle_turn_head_right");
    addAnimMapping("birdy", "idle_look_right");
    addAnimMapping("birdy", "idle_turn_head_right_back");
    addAnimMapping("birdy", "idle");
    addAnimMapping("birdy", "corpse");
    nextSet();
    addAnimMapping("unimplemented", "bonus_birdy");
    nextSet(); // set 10 (all)
    addAnimMapping("platform", "ball");
    addAnimMapping("platform", "ball_chain");
    nextSet();
    addAnimMapping("object", "bonus_active");
    addAnimMapping("object", "bonus_inactive");
    nextSet();
    addAnimMapping("ui", "boss_health_bar");
    nextSet();
    addAnimMapping("bridge", "rope");
    addAnimMapping("bridge", "stone");
    addAnimMapping("bridge", "vine");
    addAnimMapping("bridge", "stone_red");
    addAnimMapping("bridge", "log");
    addAnimMapping("bridge", "gem");
    addAnimMapping("bridge", "lab");
    nextSet();
    addAnimMapping("bubba", "spew_fireball");
    addAnimMapping("bubba", "corpse");
    addAnimMapping("bubba", "jump");
    addAnimMapping("bubba", "jump_fall");
    addAnimMapping("bubba", "fireball");
    addAnimMapping("bubba", "hop");
    addAnimMapping("bubba", "tornado");
    addAnimMapping("bubba", "tornado_start");
    addAnimMapping("bubba", "tornado_end");
    nextSet();
    addAnimMapping("bee", "bee");
    addAnimMapping("bee", "bee_turn");
    nextSet();
    addAnimMapping("unimplemented", "butterfly");
    nextSet();
    addAnimMapping("pole", "carrotus", CARROTUS_POLE_PALETTE);
    nextSet();
    addAnimMapping("cheshire", "platform_appear");
    addAnimMapping("cheshire", "platform_vanish");
    addAnimMapping("cheshire", "platform_idle");
    addAnimMapping("cheshire", "platform_invisible");
    nextSet();
    addAnimMapping("cheshire", "hook_appear");
    addAnimMapping("cheshire", "hook_vanish");
    addAnimMapping("cheshire", "hook_idle");
    addAnimMapping("cheshire", "hook_invisible");
    nextSet(); // set 20 (all)
    addAnimMapping("caterpillar", "exhale_start");
    addAnimMapping("caterpillar", "exhale");
    addAnimMapping("caterpillar", "disoriented");
    addAnimMapping("caterpillar", "idle");
    addAnimMapping("caterpillar", "inhale_start");
    addAnimMapping("caterpillar", "inhale");
    addAnimMapping("caterpillar", "smoke");
    nextSet();
    addAnimMapping("birdy_yellow", "charge_diag_downright_placeholder");
    addAnimMapping("birdy_yellow", "charge_ver");
    addAnimMapping("birdy_yellow", "charge_diag_upright");
    addAnimMapping("birdy_yellow", "caged");
    addAnimMapping("birdy_yellow", "cage_destroyed");
    addAnimMapping("birdy_yellow", "die");
    addAnimMapping("birdy_yellow", "feather_blue");
    addAnimMapping("birdy_yellow", "feather_yellow");
    addAnimMapping("birdy_yellow", "feather_blue_and_yellow");
    addAnimMapping("birdy_yellow", "fly");
    addAnimMapping("birdy_yellow", "hurt");
    addAnimMapping("birdy_yellow", "idle_worm");
    addAnimMapping("birdy_yellow", "idle_turn_head_left");
    addAnimMapping("birdy_yellow", "idle_look_left");
    addAnimMapping("birdy_yellow", "idle_turn_head_left_back");
    addAnimMapping("birdy_yellow", "idle_turn_head_right");
    addAnimMapping("birdy_yellow", "idle_look_right");
    addAnimMapping("birdy_yellow", "idle_turn_head_right_back");
    addAnimMapping("birdy_yellow", "idle");
    addAnimMapping("birdy_yellow", "corpse");
    nextSet();
    addAnimMapping("common", "water_bubble_1");
    addAnimMapping("common", "water_bubble_2");
    addAnimMapping("common", "water_bubble_3");
    addAnimMapping("common", "water_splash");
    nextSet();
    addAnimMapping("jazz", "gameover_continue");
    addAnimMapping("jazz", "gameover_idle");
    addAnimMapping("jazz", "gameover_end");
    addAnimMapping("spaz", "gameover_continue");
    addAnimMapping("spaz", "gameover_idle");
    addAnimMapping("spaz", "gameover_end");
    nextSet();
    addAnimMapping("demon", "idle");
    addAnimMapping("demon", "attack_start");
    addAnimMapping("demon", "attack");
    addAnimMapping("demon", "attack_end");
    nextSet();
    currentItem += 4;
    addAnimMapping("common", "ice_block");
    nextSet();
    addAnimMapping("devan", "bullet_small");
    addAnimMapping("devan", "remote_idle");
    addAnimMapping("devan", "remote_fall_warp_out");
    addAnimMapping("devan", "remote_fall");
    addAnimMapping("devan", "remote_fall_rotate");
    addAnimMapping("devan", "remote_fall_warp_in");
    addAnimMapping("devan", "remote_warp_out");
    nextSet();
    addAnimMapping("devan", "demon_spew_fireball");
    addAnimMapping("devan", "disoriented");
    addAnimMapping("devan", "freefall");
    addAnimMapping("devan", "disoriented_start");
    addAnimMapping("devan", "demon_fireball");
    addAnimMapping("devan", "demon_fly");
    addAnimMapping("devan", "demon_transform_start");
    addAnimMapping("devan", "demon_transform_end");
    addAnimMapping("devan", "disarmed_idle");
    addAnimMapping("devan", "demon_turn");
    addAnimMapping("devan", "disarmed_warp_in");
    addAnimMapping("devan", "disoriented_warp_out");
    addAnimMapping("devan", "disarmed");
    addAnimMapping("devan", "crouch");
    addAnimMapping("devan", "shoot");
    addAnimMapping("devan", "disarmed_gun");
    addAnimMapping("devan", "jump");
    addAnimMapping("devan", "bullet");
    addAnimMapping("devan", "run");
    addAnimMapping("devan", "run_end");
    addAnimMapping("devan", "jump_end");
    addAnimMapping("devan", "idle");
    addAnimMapping("devan", "warp_in");
    addAnimMapping("devan", "warp_out");
    nextSet();
    addAnimMapping("pole", "diamondus", DIAMONDUS_POLE_PALETTE);
    nextSet();
    addAnimMapping("doggy", "attack");
    addAnimMapping("doggy", "walk");
    nextSet(); // set 30 (all)
    addAnimMapping("unimplemented", "door");
    addAnimMapping("unimplemented", "door_enter_jazz_spaz");
    nextSet();
    addAnimMapping("dragonfly", "idle");
    nextSet();
    addAnimMapping("dragon", "attack");
    addAnimMapping("dragon", "idle");
    addAnimMapping("dragon", "turn");
    nextSet(5, JJ2Version::ORIGINAL | JJ2Version::HH);
    nextSet(6, JJ2Version::TSF | JJ2Version::CC);
    addAnimMapping("eva", "blink");
    addAnimMapping("eva", "idle");
    addAnimMapping("eva", "kiss_start");
    addAnimMapping("eva", "kiss_end");
    nextSet();
    addAnimMapping("ui", "icon_birdy");
    addAnimMapping("ui", "icon_birdy_yellow");
    addAnimMapping("ui", "icon_frog");
    addAnimMapping("ui", "icon_jazz");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "ui", "icon_lori");
    addAnimMapping("ui", "icon_spaz");
    nextSet(2); // set 41 (1.24) / set 40 (1.23)
    addAnimMapping("chick", "attack");
    addAnimMapping("chick", "walk");
    nextSet();
    addAnimMapping("fencer", "attack");
    addAnimMapping("fencer", "idle");
    nextSet();
    addAnimMapping("fish", "attack");
    addAnimMapping("fish", "idle");
    nextSet();
    addAnimMapping("ctf", "arrow");
    addAnimMapping("ctf", "base");
    addAnimMapping("ctf", "lights");
    addAnimMapping("ctf", "flag_blue");
    addAnimMapping("ui", "ctf_flag_blue");
    addAnimMapping("ctf", "base_eva");
    addAnimMapping("ctf", "base_eva_cheer");
    addAnimMapping("ctf", "flag_red");
    addAnimMapping("ui", "ctf_flag_red");
    nextSet(2);
    addAnimMapping("ui", "font_medium");
    addAnimMapping("ui", "font_small");
    addAnimMapping("ui", "font_large");
    addAnimMapping("ui", "logo");
    addAnimMapping(JJ2Version::CC, "ui", "cc_logo");
    nextSet();
    addAnimMapping("frog", "fall_land");
    addAnimMapping("frog", "hurt");
    addAnimMapping("frog", "idle");
    addAnimMapping("jazz", "transform_frog");
    addAnimMapping("frog", "fall");
    addAnimMapping("frog", "jump_start");
    addAnimMapping("frog", "crouch");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "transform_frog");
    addAnimMapping("frog", "tongue_diag_upright");
    addAnimMapping("frog", "tongue_hor");
    addAnimMapping("frog", "tongue_ver");
    addAnimMapping("spaz", "transform_frog");
    addAnimMapping("frog", "run");
    nextSet();
    addAnimMapping("platform", "carrotus_fruit");
    addAnimMapping("platform", "carrotus_fruit_chain");
    nextSet();
    addAnimMapping("pickup", "gem_gemring", GEM_PALETTE);
    nextSet(); // set 50 (1.24) / set 49 (1.23)
    addAnimMapping("unimplemented", "boxing_glove_stiff");
    addAnimMapping("unimplemented", "boxing_glove_stiff_idle");
    addAnimMapping("unimplemented", "boxing_glove_normal");
    addAnimMapping("unimplemented", "boxing_glove_normal_idle");
    addAnimMapping("unimplemented", "boxing_glove_relaxed");
    addAnimMapping("unimplemented", "boxing_glove_relaxed_idle");
    nextSet();
    addAnimMapping("platform", "carrotus_grass");
    addAnimMapping("platform", "carrotus_grass_chain");
    nextSet();
    addAnimMapping("mad_hatter", "cup");
    addAnimMapping("mad_hatter", "hat");
    addAnimMapping("mad_hatter", "attack");
    addAnimMapping("mad_hatter", "bullet_spit");
    addAnimMapping("mad_hatter", "walk");
    nextSet();
    addAnimMapping("helmut", "idle");
    addAnimMapping("helmut", "walk");
    nextSet(2);
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_unknown_disoriented");
    addAnimMapping("jazz", "airboard");
    addAnimMapping("jazz", "airboard_turn");
    addAnimMapping("jazz", "buttstomp_end");
    addAnimMapping("jazz", "corpse");
    addAnimMapping("jazz", "die");
    addAnimMapping("jazz", "crouch_start");
    addAnimMapping("jazz", "crouch");
    addAnimMapping("jazz", "crouch_shoot");
    addAnimMapping("jazz", "crouch_end");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_door_enter");
    addAnimMapping("jazz", "vine_walk");
    addAnimMapping("jazz", "eol");
    addAnimMapping("jazz", "fall");
    addAnimMapping("jazz", "buttstomp");
    addAnimMapping("jazz", "fall_end");
    addAnimMapping("jazz", "shoot");
    addAnimMapping("jazz", "shoot_ver");
    addAnimMapping("jazz", "shoot_end");
    addAnimMapping("jazz", "transform_frog_end");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_ledge_climb");
    addAnimMapping("jazz", "vine_shoot_start");
    addAnimMapping("jazz", "vine_shoot_up_end");
    addAnimMapping("jazz", "vine_shoot_up");
    addAnimMapping("jazz", "vine_idle");
    addAnimMapping("jazz", "vine_idle_flavor");
    addAnimMapping("jazz", "vine_shoot_end");
    addAnimMapping("jazz", "vine_shoot");
    addAnimMapping("jazz", "copter");
    addAnimMapping("jazz", "copter_shoot_start");
    addAnimMapping("jazz", "copter_shoot");
    addAnimMapping("jazz", "pole_h");
    addAnimMapping("jazz", "hurt");
    addAnimMapping("jazz", "idle_flavor_1");
    addAnimMapping("jazz", "idle_flavor_2");
    addAnimMapping("jazz", "idle_flavor_3");
    addAnimMapping("jazz", "idle_flavor_4");
    addAnimMapping("jazz", "idle_flavor_5");
    addAnimMapping("jazz", "vine_shoot_up_start");
    addAnimMapping("jazz", "fall_shoot");
    addAnimMapping("jazz", "jump_unknown_1");
    addAnimMapping("jazz", "jump_unknown_2");
    addAnimMapping("jazz", "jump");
    addAnimMapping("jazz", "ledge");
    addAnimMapping("jazz", "lift");
    addAnimMapping("jazz", "lift_jump_light");
    addAnimMapping("jazz", "lift_jump_heavy");
    addAnimMapping("jazz", "lookup_start");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_run_diag_upright");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_run_ver_up");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_run_diag_upleft_reverse");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_run_reverse");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_run_diag_downleft_reverse");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_run_ver_down");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_run_diag_downright");
    addAnimMapping("jazz", "dizzy_walk");
    addAnimMapping("jazz", "push");
    addAnimMapping("jazz", "shoot_start");
    addAnimMapping("jazz", "revup_start");
    addAnimMapping("jazz", "revup");
    addAnimMapping("jazz", "revup_end");
    addAnimMapping("jazz", "fall_diag");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_unknown_mid_frame");
    addAnimMapping("jazz", "jump_diag");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_jump_shoot_end");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_jump_shoot_ver_start");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_jump_shoot_ver");
    addAnimMapping("jazz", "ball");
    addAnimMapping("jazz", "run");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_run_aim_diag");
    addAnimMapping("jazz", "dash_start");
    addAnimMapping("jazz", "dash");
    addAnimMapping("jazz", "dash_stop");
    addAnimMapping("jazz", "walk_stop");
    addAnimMapping("jazz", "run_stop");
    addAnimMapping("jazz", "spring");
    addAnimMapping("jazz", "idle");
    addAnimMapping("jazz", "uppercut");
    addAnimMapping("jazz", "uppercut_end");
    addAnimMapping("jazz", "uppercut_start");
    addAnimMapping("jazz", "dizzy");
    addAnimMapping("jazz", "swim_diag_downright");
    addAnimMapping("jazz", "swim_right");
    addAnimMapping("jazz", "swim_diag_right_to_downright");
    addAnimMapping("jazz", "swim_diag_right_to_upright");
    addAnimMapping("jazz", "swim_diag_upright");
    addAnimMapping("jazz", "swing");
    addAnimMapping("jazz", "warp_in");
    addAnimMapping("jazz", "warp_out_freefall");
    addAnimMapping("jazz", "freefall");
    addAnimMapping("jazz", "warp_in_freefall");
    addAnimMapping("jazz", "warp_out");
    addAnimMapping("jazz", "pole_v");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_unarmed_crouch_start");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_unarmed_crouch_end");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_unarmed_fall");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_unarmed_hurt");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_unarmed_idle");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_unarmed_jump");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_unarmed_crouch_end_2");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_lookup_start");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_unarmed_run");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_unarmed_stare");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "jazz", "unused_lookup_start_2");
    nextSet();
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "unimplemented", "bonus_jazz_idle_flavor_2");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "unimplemented", "bonus_jazz_jump_2");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "unimplemented", "bonus_jazz_dash_2");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "unimplemented", "bonus_jazz_rotate_2");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "unimplemented", "bonus_jazz_ball_2");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "unimplemented", "bonus_jazz_run_2");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "unimplemented", "bonus_jazz_idle_2");
    addAnimMapping("unimplemented", "bonus_jazz_idle_flavor");
    addAnimMapping("unimplemented", "bonus_jazz_jump");
    addAnimMapping("unimplemented", "bonus_jazz_ball");
    addAnimMapping("unimplemented", "bonus_jazz_run");
    addAnimMapping("unimplemented", "bonus_jazz_dash");
    addAnimMapping("unimplemented", "bonus_jazz_rotate");
    addAnimMapping("unimplemented", "bonus_jazz_idle");
    nextSet(2);
    addAnimMapping("pole", "jungle", JUNGLE_POLE_PALETTE);
    nextSet();
    addAnimMapping("lab_rat", "attack");
    addAnimMapping("lab_rat", "idle");
    addAnimMapping("lab_rat", "walk");
    nextSet(); // set 60 (1.24) / set 59 (1.23)
    addAnimMapping("lizard", "copter_attack");
    addAnimMapping("lizard", "bomb");
    addAnimMapping("lizard", "copter_idle");
    addAnimMapping("lizard", "copter");
    addAnimMapping("lizard", "walk");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC);
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "airboard");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "airboard_turn");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "buttstomp_end");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "corpse");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "die");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "crouch_start");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "crouch");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "crouch_shoot");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "crouch_end");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "vine_walk");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "eol");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "fall");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "buttstomp");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "fall_end");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "shoot");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "shoot_ver");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "shoot_end");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "transform_frog_end");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "vine_shoot_start");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "vine_shoot_up_end");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "vine_shoot_up");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "vine_idle");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "vine_idle_flavor");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "vine_shoot_end");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "vine_shoot");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "copter");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "copter_shoot_start");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "copter_shoot");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "pole_h");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "hurt");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "idle_flavor_1");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "idle_flavor_2");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "idle_flavor_3");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "idle_flavor_4");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "idle_flavor_5");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "vine_shoot_up_start");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "fall_shoot");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "jump_unknown_1");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "jump_unknown_2");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "jump");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "ledge");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "lift");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "lift_jump_light");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "lift_jump_heavy");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "lookup_start");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "dizzy_walk");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "push");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "shoot_start");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "revup_start");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "revup");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "revup_end");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "fall_diag");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "jump_diag");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "ball");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "run");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "dash_start");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "dash");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "dash_stop");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "walk_stop");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "run_stop");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "spring");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "idle");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "uppercut_placeholder_1");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "uppercut_placeholder_2");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "sidekick");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "dizzy");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "swim_diag_downright");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "swim_right");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "swim_diag_right_to_downright");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "swim_diag_right_to_upright");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "swim_diag_upright");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "swing");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "warp_in");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "warp_out_freefall");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "freefall");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "warp_in_freefall");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "warp_out");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "pole_v");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC);
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "idle_2");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "gun");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC);
    nextSet();
    addAnimMapping("ui", "multiplayer_char", MENU_PALETTE);
    addAnimMapping("ui", "multiplayer_color", MENU_PALETTE);
    addAnimMapping("ui", "character_art_difficulty_jazz", MENU_PALETTE);
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "ui", "character_art_difficulty_lori", MENU_PALETTE);
    addAnimMapping("ui", "character_art_difficulty_spaz", MENU_PALETTE);
    addAnimMapping("unimplemented", "key", MENU_PALETTE);
    addAnimMapping("ui", "loading_bar", MENU_PALETTE);
    addAnimMapping("ui", "multiplayer_mode", MENU_PALETTE);
    addAnimMapping("ui", "character_name_jazz", MENU_PALETTE);
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "ui", "character_name_lori", MENU_PALETTE);
    addAnimMapping("ui", "character_name_spaz", MENU_PALETTE);
    addAnimMapping("ui", "character_art_jazz", MENU_PALETTE);
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "ui", "character_art_lori", MENU_PALETTE);
    addAnimMapping("ui", "character_art_spaz", MENU_PALETTE);
    nextSet();
    addAnimMapping("ui", "font_medium_2", MENU_PALETTE);
    addAnimMapping("ui", "font_small_2", MENU_PALETTE);
    addAnimMapping("ui", "logo_large", MENU_PALETTE);
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "ui", "tsf_title", MENU_PALETTE);
    addAnimMapping(JJ2Version::CC, "ui", "menu_snow", MENU_PALETTE);
    addAnimMapping("ui", "logo_small", MENU_PALETTE);
    addAnimMapping(JJ2Version::CC, "ui", "cc_title", MENU_PALETTE);
    addAnimMapping(JJ2Version::CC, "ui", "cc_title_small", MENU_PALETTE);
    nextSet(2);
    addAnimMapping("monkey", "banana");
    addAnimMapping("monkey", "banana_splat");
    addAnimMapping("monkey", "jump");
    addAnimMapping("monkey", "walk_start");
    addAnimMapping("monkey", "walk_end");
    addAnimMapping("monkey", "attack");
    addAnimMapping("monkey", "walk");
    nextSet();
    addAnimMapping("moth", "green");
    addAnimMapping("moth", "gray");
    addAnimMapping("moth", "purple");
    addAnimMapping("moth", "pink");
    nextSet(3); // set 71 (1.24) / set 67 (1.23)
    addAnimMapping("pickup", "1up");
    addAnimMapping("pickup", "food_apple");
    addAnimMapping("pickup", "food_banana");
    addAnimMapping("object", "container_barrel");
    addAnimMapping("common", "poof_brown");
    addAnimMapping("object", "container_box_crush");
    addAnimMapping("object", "container_barrel_shrapnel_1");
    addAnimMapping("object", "container_barrel_shrapnel_2");
    addAnimMapping("object", "container_barrel_shrapnel_3");
    addAnimMapping("object", "container_barrel_shrapnel_4");
    addAnimMapping("object", "powerup_shield_bubble");
    addAnimMapping("pickup", "food_burger");
    addAnimMapping("pickup", "food_cake");
    addAnimMapping("pickup", "food_candy");
    addAnimMapping("object", "savepoint");
    addAnimMapping("pickup", "food_cheese");
    addAnimMapping("pickup", "food_cherry");
    addAnimMapping("pickup", "food_chicken");
    addAnimMapping("pickup", "food_chips");
    addAnimMapping("pickup", "food_chocolate");
    addAnimMapping("pickup", "food_cola");
    addAnimMapping("pickup", "carrot");
    addAnimMapping("pickup", "gem", GEM_PALETTE);
    addAnimMapping("pickup", "food_cucumber");
    addAnimMapping("pickup", "food_cupcake");
    addAnimMapping("pickup", "food_donut");
    addAnimMapping("pickup", "food_eggplant");
    addAnimMapping("unknown", "green_blast_thing");
    addAnimMapping("object", "exit_sign");
    addAnimMapping("pickup", "fast_fire_jazz");
    addAnimMapping("pickup", "fast_fire_spaz");
    addAnimMapping("object", "powerup_shield_fire");
    addAnimMapping("pickup", "food_fries");
    addAnimMapping("pickup", "fast_feet");
    addAnimMapping("object", "gem_super", GEM_PALETTE);
    addAnimMapping("pickup", "gem_2", GEM_PALETTE);
    addAnimMapping("pickup", "airboard");
    addAnimMapping("pickup", "coin_gold");
    addAnimMapping("pickup", "food_grapes");
    addAnimMapping("pickup", "food_ham");
    addAnimMapping("pickup", "carrot_fly");
    addAnimMapping("ui", "heart");
    addAnimMapping("pickup", "freeze_enemies");
    addAnimMapping("pickup", "food_ice_cream");
    addAnimMapping("common", "ice_break_shrapnel_1");
    addAnimMapping("common", "ice_break_shrapnel_2");
    addAnimMapping("common", "ice_break_shrapnel_3");
    addAnimMapping("common", "ice_break_shrapnel_4");
    addAnimMapping("pickup", "food_lemon");
    addAnimMapping("pickup", "food_lettuce");
    addAnimMapping("pickup", "food_lime");
    addAnimMapping("object", "powerup_shield_lightning");
    addAnimMapping("object", "trigger_crate");
    addAnimMapping("pickup", "food_milk");
    addAnimMapping("object", "crate_ammo_bouncer");
    addAnimMapping("object", "crate_ammo_freezer");
    addAnimMapping("object", "crate_ammo_seeker");
    addAnimMapping("object", "crate_ammo_rf");
    addAnimMapping("object", "crate_ammo_toaster");
    addAnimMapping("object", "crate_ammo_tnt");
    addAnimMapping("object", "powerup_upgrade_blaster_jazz");
    addAnimMapping("object", "powerup_upgrade_bouncer");
    addAnimMapping("object", "powerup_upgrade_freezer");
    addAnimMapping("object", "powerup_upgrade_seeker");
    addAnimMapping("object", "powerup_upgrade_rf");
    addAnimMapping("object", "powerup_upgrade_toaster");
    addAnimMapping("object", "powerup_upgrade_pepper");
    addAnimMapping("object", "powerup_upgrade_electro");
    addAnimMapping("object", "powerup_transform_birdy");
    addAnimMapping("object", "powerup_transform_birdy_yellow");
    addAnimMapping("object", "powerup_swap_characters");
    addAnimMapping("pickup", "food_orange");
    addAnimMapping("pickup", "carrot_invincibility");
    addAnimMapping("pickup", "food_peach");
    addAnimMapping("pickup", "food_pear");
    addAnimMapping("pickup", "food_soda");
    addAnimMapping("pickup", "food_pie");
    addAnimMapping("pickup", "food_pizza");
    addAnimMapping("pickup", "potion");
    addAnimMapping("pickup", "food_pretzel");
    addAnimMapping("pickup", "food_sandwich");
    addAnimMapping("pickup", "food_strawberry");
    addAnimMapping("pickup", "carrot_full");
    addAnimMapping("object", "powerup_upgrade_blaster_spaz");
    addAnimMapping("pickup", "coin_silver");
    addAnimMapping("unknown", "green_blast_thing_2");
    addAnimMapping("common", "generator");
    addAnimMapping("pickup", "stopwatch");
    addAnimMapping("pickup", "food_taco");
    addAnimMapping("pickup", "food_thing");
    addAnimMapping("object", "tnt");
    addAnimMapping("pickup", "food_hotdog");
    addAnimMapping("pickup", "food_watermelon");
    addAnimMapping("object", "container_crate_shrapnel_1");
    addAnimMapping("object", "container_crate_shrapnel_2");
    nextSet();
    addAnimMapping("pinball", "bumper_500", PINBALL_PALETTE);
    addAnimMapping("pinball", "bumper_500_hit", PINBALL_PALETTE);
    addAnimMapping("pinball", "bumper_carrot", PINBALL_PALETTE);
    addAnimMapping("pinball", "bumper_carrot_hit", PINBALL_PALETTE);
    addAnimMapping("pinball", "paddle_left");
    addAnimMapping("pinball", "paddle_right");
    nextSet();
    addAnimMapping("platform", "lab");
    addAnimMapping("platform", "lab_chain");
    nextSet();
    addAnimMapping("pole", "psych", PSYCH_POLE_PALETTE);
    nextSet();
    addAnimMapping("queen", "scream");
    addAnimMapping("queen", "ledge");
    addAnimMapping("queen", "ledge_recover");
    addAnimMapping("queen", "idle");
    addAnimMapping("queen", "brick");
    addAnimMapping("queen", "fall");
    addAnimMapping("queen", "stomp");
    addAnimMapping("queen", "backstep");
    nextSet();
    addAnimMapping("rapier", "attack");
    addAnimMapping("rapier", "attack_swing");
    addAnimMapping("rapier", "idle");
    addAnimMapping("rapier", "attack_start");
    addAnimMapping("rapier", "attack_end");
    nextSet();
    addAnimMapping("raven", "attack");
    addAnimMapping("raven", "idle");
    addAnimMapping("raven", "turn");
    nextSet();
    addAnimMapping("robot", "spike_ball");
    addAnimMapping("robot", "attack_start");
    addAnimMapping("robot", "attack");
    addAnimMapping("robot", "copter");
    addAnimMapping("robot", "idle");
    addAnimMapping("robot", "attack_end");
    addAnimMapping("robot", "shrapnel_1");
    addAnimMapping("robot", "shrapnel_2");
    addAnimMapping("robot", "shrapnel_3");
    addAnimMapping("robot", "shrapnel_4");
    addAnimMapping("robot", "shrapnel_5");
    addAnimMapping("robot", "shrapnel_6");
    addAnimMapping("robot", "shrapnel_7");
    addAnimMapping("robot", "shrapnel_8");
    addAnimMapping("robot", "shrapnel_9");
    addAnimMapping("robot", "run");
    addAnimMapping("robot", "copter_start");
    addAnimMapping("robot", "copter_end");
    nextSet();
    addAnimMapping("object", "rolling_rock");
    nextSet(); // set 80 (1.24) / set 76 (1.23)
    addAnimMapping("rocket_turtle", "downright");
    addAnimMapping("rocket_turtle", "upright");
    addAnimMapping("rocket_turtle", "smoke");
    addAnimMapping("rocket_turtle", "upright_to_downright");
    nextSet(3);
    addAnimMapping("skeleton", "bone");
    addAnimMapping("skeleton", "skull");
    addAnimMapping("skeleton", "walk");
    nextSet();
    addAnimMapping("pole", "diamondus_tree", DIAMONDUS_POLE_PALETTE);
    nextSet();
    addAnimMapping("common", "snow", SNOW_PALETTE);
    nextSet();
    addAnimMapping("spike", "rocket");
    addAnimMapping("spike", "mace_chain");
    addAnimMapping("spike", "bottom");
    addAnimMapping("spike", "top");
    addAnimMapping("spike", "puff");
    addAnimMapping("spike", "mace");
    addAnimMapping("spike", "turret");
    addAnimMapping("spike", "crosshairs");
    nextSet();
    addAnimMapping("platform", "sonic");
    addAnimMapping("platform", "sonic_chain");
    nextSet();
    addAnimMapping("sparks", "idle");
    nextSet();
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_unknown_disoriented");
    addAnimMapping("spaz", "airboard");
    addAnimMapping("spaz", "airboard_turn");
    addAnimMapping("spaz", "buttstomp_end");
    addAnimMapping("spaz", "corpse");
    addAnimMapping("spaz", "die");
    addAnimMapping("spaz", "crouch_start");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "crouch_shoot_2");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "spaz", "crouch");
    addAnimMapping("spaz", "crouch_shoot");
    addAnimMapping("spaz", "crouch_end");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_door_enter");
    addAnimMapping("spaz", "vine_walk");
    addAnimMapping("spaz", "eol");
    addAnimMapping("spaz", "fall");
    addAnimMapping("spaz", "buttstomp");
    addAnimMapping("spaz", "fall_end");
    addAnimMapping("spaz", "shoot");
    addAnimMapping("spaz", "shoot_ver");
    addAnimMapping("spaz", "shoot_end");
    addAnimMapping("spaz", "transform_frog_end");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_ledge_climb");
    addAnimMapping("spaz", "vine_shoot_start");
    addAnimMapping("spaz", "vine_shoot_up_end");
    addAnimMapping("spaz", "vine_shoot_up");
    addAnimMapping("spaz", "vine_idle");
    addAnimMapping("spaz", "vine_idle_flavor");
    addAnimMapping("spaz", "vine_shoot_end");
    addAnimMapping("spaz", "vine_shoot");
    addAnimMapping("spaz", "copter");
    addAnimMapping("spaz", "copter_shoot_start");
    addAnimMapping("spaz", "copter_shoot");
    addAnimMapping("spaz", "pole_h");
    addAnimMapping("spaz", "hurt");
    addAnimMapping("spaz", "idle_flavor_1");
    addAnimMapping("spaz", "idle_flavor_2");
    addAnimMapping("spaz", "idle_flavor_3_placeholder");
    addAnimMapping("spaz", "idle_flavor_4");
    addAnimMapping("spaz", "idle_flavor_5");
    addAnimMapping("spaz", "vine_shoot_up_start");
    addAnimMapping("spaz", "fall_shoot");
    addAnimMapping("spaz", "jump_unknown_1");
    addAnimMapping("spaz", "jump_unknown_2");
    addAnimMapping("spaz", "jump");
    addAnimMapping("spaz", "ledge");
    addAnimMapping("spaz", "lift");
    addAnimMapping("spaz", "lift_jump_light");
    addAnimMapping("spaz", "lift_jump_heavy");
    addAnimMapping("spaz", "lookup_start");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_run_diag_upright");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_run_ver_up");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_run_diag_upleft_reverse");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_run_reverse");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_run_diag_downleft_reverse");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_run_ver_down");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_run_diag_downright");
    addAnimMapping("spaz", "dizzy_walk");
    addAnimMapping("spaz", "push");
    addAnimMapping("spaz", "shoot_start");
    addAnimMapping("spaz", "revup_start");
    addAnimMapping("spaz", "revup");
    addAnimMapping("spaz", "revup_end");
    addAnimMapping("spaz", "fall_diag");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_unknown_mid_frame");
    addAnimMapping("spaz", "jump_diag");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_jump_shoot_end");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_jump_shoot_ver_start");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_jump_shoot_ver");
    addAnimMapping("spaz", "ball");
    addAnimMapping("spaz", "run");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_run_aim_diag");
    addAnimMapping("spaz", "dash_start");
    addAnimMapping("spaz", "dash");
    addAnimMapping("spaz", "dash_stop");
    addAnimMapping("spaz", "walk_stop");
    addAnimMapping("spaz", "run_stop");
    addAnimMapping("spaz", "spring");
    addAnimMapping("spaz", "idle");
    addAnimMapping("spaz", "sidekick");
    addAnimMapping("spaz", "sidekick_end");
    addAnimMapping("spaz", "sidekick_start");
    addAnimMapping("spaz", "dizzy");
    addAnimMapping("spaz", "swim_diag_downright");
    addAnimMapping("spaz", "swim_right");
    addAnimMapping("spaz", "swim_diag_right_to_downright");
    addAnimMapping("spaz", "swim_diag_right_to_upright");
    addAnimMapping("spaz", "swim_diag_upright");
    addAnimMapping("spaz", "swing");
    addAnimMapping("spaz", "warp_in");
    addAnimMapping("spaz", "warp_out_freefall");
    addAnimMapping("spaz", "freefall");
    addAnimMapping("spaz", "warp_in_freefall");
    addAnimMapping("spaz", "warp_out");
    addAnimMapping("spaz", "pole_v");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_unarmed_crouch_start");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_unarmed_crouch_end");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_unarmed_fall");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_unarmed_hurt");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_unarmed_idle");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_unarmed_jump");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_unarmed_crouch_end_2");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_lookup_start");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_unarmed_run");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_unarmed_stare");
    addAnimMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "spaz", "unused_lookup_start_2");
    nextSet(); // set 90 (1.24) / set 86 (1.23)
    addAnimMapping("spaz", "idle_flavor_3_start");
    addAnimMapping("spaz", "idle_flavor_3");
    addAnimMapping("spaz", "idle_flavor_3_bird");
    addAnimMapping("spaz", "idle_flavor_5_spaceship");
    nextSet();
    addAnimMapping("unimplemented", "bonus_spaz_idle_flavor");
    addAnimMapping("unimplemented", "bonus_spaz_jump");
    addAnimMapping("unimplemented", "bonus_spaz_ball");
    addAnimMapping("unimplemented", "bonus_spaz_run");
    addAnimMapping("unimplemented", "bonus_spaz_dash");
    addAnimMapping("unimplemented", "bonus_spaz_rotate");
    addAnimMapping("unimplemented", "bonus_spaz_idle");
    nextSet(2);
    addAnimMapping("object", "3d_spike");
    addAnimMapping("object", "3d_spike_chain");
    nextSet();
    addAnimMapping("object", "3d_spike_2");
    addAnimMapping("object", "3d_spike_2_chain");
    nextSet();
    addAnimMapping("platform", "spike");
    addAnimMapping("platform", "spike_chain");
    nextSet();
    addAnimMapping("object", "spring_blue_ver");
    addAnimMapping("object", "spring_blue_hor");
    addAnimMapping("object", "spring_blue_ver_reverse");
    addAnimMapping("object", "spring_green_ver_reverse");
    addAnimMapping("object", "spring_red_ver_reverse");
    addAnimMapping("object", "spring_green_ver");
    addAnimMapping("object", "spring_green_hor");
    addAnimMapping("object", "spring_red_ver");
    addAnimMapping("object", "spring_red_hor");
    nextSet();
    addAnimMapping("common", "steam_note");
    nextSet(2);
    addAnimMapping("sucker_tube", "walk_top");
    addAnimMapping("sucker_tube", "inflated_deflate");
    addAnimMapping("sucker_tube", "walk_ver_down");
    addAnimMapping("sucker_tube", "fall");
    addAnimMapping("sucker_tube", "inflated");
    addAnimMapping("sucker_tube", "poof");
    addAnimMapping("sucker_tube", "walk");
    addAnimMapping("sucker_tube", "walk_ver_up");
    nextSet(); // set 100 (1.24) / set 96 (1.23)
    addAnimMapping("tube_turtle", "idle");
    nextSet();
    addAnimMapping("tough_turtle_boss", "attack_start");
    addAnimMapping("tough_turtle_boss", "attack_end");
    addAnimMapping("tough_turtle_boss", "shell");
    addAnimMapping("tough_turtle_boss", "mace");
    addAnimMapping("tough_turtle_boss", "idle");
    addAnimMapping("tough_turtle_boss", "walk");
    nextSet();
    addAnimMapping("tough_turtle", "walk");
    nextSet();
    addAnimMapping("turtle", "attack");
    addAnimMapping("turtle", "idle_flavor");
    addAnimMapping("turtle", "turn_start");
    addAnimMapping("turtle", "turn_end");
    addAnimMapping("turtle", "shell_reverse");
    addAnimMapping("turtle", "shell");
    addAnimMapping("turtle", "idle");
    addAnimMapping("turtle", "walk");
    nextSet();
    addAnimMapping("tweedle", "magnet_start");
    addAnimMapping("tweedle", "spin");
    addAnimMapping("tweedle", "magnet_end");
    addAnimMapping("tweedle", "shoot_jazz");
    addAnimMapping("tweedle", "shoot_spaz");
    addAnimMapping("tweedle", "hurt");
    addAnimMapping("tweedle", "idle");
    addAnimMapping("tweedle", "magnet");
    addAnimMapping("tweedle", "walk");
    nextSet();
    addAnimMapping("uterus", "closed_start");
    addAnimMapping("uterus", "crab_spawn");
    addAnimMapping("uterus", "closed_idle");
    addAnimMapping("uterus", "idle");
    addAnimMapping("crab", "fall_end");
    addAnimMapping("uterus", "closed_end");
    addAnimMapping("uterus", "shield");
    addAnimMapping("crab", "walk");
    nextSet();
    currentItem += 1;
    addAnimMapping("object", "vine");
    nextSet();
    addAnimMapping("object", "bonus_10");
    nextSet();
    addAnimMapping("object", "bonus_100");
    nextSet();
    addAnimMapping("object", "bonus_20");
    nextSet(); // set 110 (1.24) / set 106 (1.23)
    addAnimMapping("object", "bonus_50");
    nextSet(2);
    addAnimMapping("witch", "attack");
    addAnimMapping("witch", "die");
    addAnimMapping("witch", "idle");
    addAnimMapping("witch", "bullet_magic");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH);
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "bilsy", "xmas_throw_fireball");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "bilsy", "xmas_appear");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "bilsy", "xmas_vanish");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "bilsy", "xmas_bullet_fireball");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "bilsy", "xmas_idle");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH);
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "lizard", "xmas_copter_attack");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "lizard", "xmas_bomb");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "lizard", "xmas_copter_idle");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "lizard", "xmas_copter");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "lizard", "xmas_walk");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH);
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_attack");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_idle_flavor");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_turn_start");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_turn_end");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_shell_reverse");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_shell");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_idle");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_walk");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC);
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "doggy", "xmas_attack");
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "doggy", "xmas_walk");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC);
    addAnimMapping(JJ2Version::TSF | JJ2Version::CC, "sparks", "ghost_idle");

    moved.swap(wipAnimMap);
    return moved;
}

std::unique_ptr<SampleIDMap> IDMapper::getSampleMapping() {
    wipSampleMap = std::make_unique<SampleIDMap>();
    std::unique_ptr<SampleIDMap> moved;
    currentItem = 0;
    currentSet = 0;

    if (jj2Version == JJ2Version::UNKNOWN) {
        moved.swap(wipSampleMap);
        return moved;
    }

    // TODO: U.S. version of vanilla probably has a slightly different order of sets,
    // since the sets seem to be ordered alphabetically and the Project 2 Interactive logo
    // position and the Gathering of Developers position would likely not agree.
    // (existence of GoD and absence of P2 verified by https://www.youtube.com/watch?v=QB2MQQE6Bi8 -
    // seems to have low SFX volume but otherwise genuine)
    // Get a hold of U.S. 1.20/1.23 Anims.j2a to verify IDs and adjust accordingly.

    // set 0 (all)
    addSampleMapping("weapon", "bullet_shield_bubble_1");
    addSampleMapping("weapon", "bullet_shield_bubble_2");
    addSampleMapping("weapon", "unknown_bmp1");
    addSampleMapping("weapon", "unknown_bmp2");
    addSampleMapping("weapon", "unknown_bmp3");
    addSampleMapping("weapon", "unknown_bmp4");
    addSampleMapping("weapon", "unknown_bmp5");
    addSampleMapping("weapon", "unknown_bmp6");
    addSampleMapping("weapon", "tnt_explosion");
    addSampleMapping("weapon", "ricochet_contact");
    addSampleMapping("weapon", "ricochet_bullet_1");
    addSampleMapping("weapon", "ricochet_bullet_2");
    addSampleMapping("weapon", "ricochet_bullet_3");
    addSampleMapping("weapon", "bullet_shield_fire_1");
    addSampleMapping("weapon", "bullet_shield_fire_2");
    addSampleMapping("weapon", "bullet_bouncer_1");
    addSampleMapping("weapon", "bullet_blaster_jazz_1");
    addSampleMapping("weapon", "bullet_blaster_jazz_2");
    addSampleMapping("weapon", "bullet_blaster_jazz_3");
    addSampleMapping("weapon", "bullet_bouncer_2");
    addSampleMapping("weapon", "bullet_bouncer_3");
    addSampleMapping("weapon", "bullet_bouncer_4");
    addSampleMapping("weapon", "bullet_bouncer_5");
    addSampleMapping("weapon", "bullet_bouncer_6");
    addSampleMapping("weapon", "bullet_bouncer_7");
    addSampleMapping("weapon", "bullet_blaster_jazz_4");
    addSampleMapping("weapon", "bullet_pepper");
    addSampleMapping("weapon", "bullet_freezer_1");
    addSampleMapping("weapon", "bullet_freezer_2");
    addSampleMapping("weapon", "bullet_freezer_upgraded_1");
    addSampleMapping("weapon", "bullet_freezer_upgraded_2");
    addSampleMapping("weapon", "bullet_freezer_upgraded_3");
    addSampleMapping("weapon", "bullet_freezer_upgraded_4");
    addSampleMapping("weapon", "bullet_freezer_upgraded_5");
    addSampleMapping("weapon", "bullet_electro_1");
    addSampleMapping("weapon", "bullet_electro_2");
    addSampleMapping("weapon", "bullet_electro_3");
    addSampleMapping("weapon", "bullet_rf");
    addSampleMapping("weapon", "bullet_seeker");
    addSampleMapping("weapon", "bullet_blaster_spaz_1");
    addSampleMapping("weapon", "bullet_blaster_spaz_2");
    addSampleMapping("weapon", "bullet_blaster_spaz_3");
    nextSet();
    addSampleMapping("bat", "noise");
    nextSet(6);
    addSampleMapping("bilsy", "appear_2");
    addSampleMapping("bilsy", "snap");
    addSampleMapping("bilsy", "throw_fireball");
    addSampleMapping("bilsy", "fire_start");
    addSampleMapping("bilsy", "scary");
    addSampleMapping("bilsy", "thunder");
    addSampleMapping("bilsy", "appear_1");
    nextSet(4); // set 11 (all)
    addSampleMapping("unknown", "unknown_bonus1");
    addSampleMapping("unknown", "unknown_bonusblub");
    nextSet(3);
    addSampleMapping("bubba", "hop_1");
    addSampleMapping("bubba", "hop_2");
    addSampleMapping("bubba", "unknown_bubbaexplo");
    addSampleMapping("bubba", "unknown_frog2");
    addSampleMapping("bubba", "unknown_frog3");
    addSampleMapping("bubba", "unknown_frog4");
    addSampleMapping("bubba", "unknown_frog5");
    addSampleMapping("bubba", "sneeze");
    addSampleMapping("bubba", "tornado");
    nextSet();
    addSampleMapping("bee", "noise");
    nextSet(5); // set 20 (all)
    addSampleMapping("caterpillar", "dizzy");
    nextSet(2);
    addSampleMapping("common", "char_airboard");
    addSampleMapping("common", "char_airboard_turn_1");
    addSampleMapping("common", "char_airboard_turn_2");
    addSampleMapping("common", "unknown_base");
    addSampleMapping("common", "powerup_shield_damage_1");
    addSampleMapping("common", "powerup_shield_damage_2");
    addSampleMapping("common", "bomb");
    addSampleMapping("birdy", "fly_1");
    addSampleMapping("birdy", "fly_2");
    addSampleMapping("weapon", "bouncer");
    addSampleMapping("common", "blub1");
    addSampleMapping("weapon", "shield_bubble_bullet");
    addSampleMapping("weapon", "shield_fire_bullet");
    addSampleMapping("common", "ambient_fire");
    addSampleMapping("object", "container_barrel_break");
    addSampleMapping("common", "powerup_shield_timer");
    addSampleMapping("pickup", "coin");
    addSampleMapping("common", "scenery_collapse");
    addSampleMapping("common", "cup");
    addSampleMapping("common", "scenery_destruct");
    addSampleMapping("common", "down");
    addSampleMapping("common", "downfl2");
    addSampleMapping("pickup", "food_drink_1");
    addSampleMapping("pickup", "food_drink_2");
    addSampleMapping("pickup", "food_drink_3");
    addSampleMapping("pickup", "food_drink_4");
    addSampleMapping("pickup", "food_edible_1");
    addSampleMapping("pickup", "food_edible_2");
    addSampleMapping("pickup", "food_edible_3");
    addSampleMapping("pickup", "food_edible_4");
    addSampleMapping("pickup", "shield_lightning_bullet_1");
    addSampleMapping("pickup", "shield_lightning_bullet_2");
    addSampleMapping("pickup", "shield_lightning_bullet_3");
    addSampleMapping("weapon", "tnt");
    addSampleMapping("weapon", "wall_poof");
    addSampleMapping("weapon", "toaster");
    addSampleMapping("common", "flap");
    addSampleMapping("common", "swish_9");
    addSampleMapping("common", "swish_10");
    addSampleMapping("common", "swish_11");
    addSampleMapping("common", "swish_12");
    addSampleMapping("common", "swish_13");
    addSampleMapping("object", "gem_super_break");
    addSampleMapping("object", "powerup_break");
    addSampleMapping("common", "gunsm1");
    addSampleMapping("pickup", "1up");
    addSampleMapping("unknown", "common_head");
    addSampleMapping("common", "copter_noise");
    addSampleMapping("common", "hibell");
    addSampleMapping("common", "holyflut");
    addSampleMapping("ui", "weapon_change");
    addSampleMapping("common", "ice_break");
    addSampleMapping("object", "shell_noise_1");
    addSampleMapping("object", "shell_noise_2");
    addSampleMapping("object", "shell_noise_3");
    addSampleMapping("object", "shell_noise_4");
    addSampleMapping("object", "shell_noise_5");
    addSampleMapping("object", "shell_noise_6");
    addSampleMapping("object", "shell_noise_7");
    addSampleMapping("object", "shell_noise_8");
    addSampleMapping("object", "shell_noise_9");
    addSampleMapping("unknown", "common_itemtre");
    addSampleMapping("common", "char_jump");
    addSampleMapping("common", "char_jump_alt");
    addSampleMapping("common", "land1");
    addSampleMapping("common", "land2");
    addSampleMapping("common", "land3");
    addSampleMapping("common", "land4");
    addSampleMapping("common", "land5");
    addSampleMapping("common", "char_land");
    addSampleMapping("common", "loadjazz");
    addSampleMapping("common", "loadspaz");
    addSampleMapping("common", "metalhit");
    addSampleMapping("unimplemented", "powerup_jazz1_style");
    addSampleMapping("object", "bonus_not_enough_coins");
    addSampleMapping("pickup", "gem");
    addSampleMapping("pickup", "ammo");
    addSampleMapping("common", "pistol1");
    addSampleMapping("common", "plop_5");
    addSampleMapping("common", "plop_1");
    addSampleMapping("common", "plop_2");
    addSampleMapping("common", "plop_3");
    addSampleMapping("common", "plop_4");
    addSampleMapping("common", "plop_6");
    addSampleMapping("spaz", "idle_flavor_4_spaceship");
    addSampleMapping("common", "copter_pre");
    addSampleMapping("common", "char_revup");
    addSampleMapping("common", "ringgun1");
    addSampleMapping("common", "ringgun2");
    addSampleMapping("weapon", "shield_fire_noise");
    addSampleMapping("weapon", "shield_lightning_noise");
    addSampleMapping("weapon", "shield_lightning_noise_2");
    addSampleMapping("common", "shldof3");
    addSampleMapping("common", "slip");
    addSampleMapping("common", "splat_1");
    addSampleMapping("common", "splat_2");
    addSampleMapping("common", "splat_3");
    addSampleMapping("common", "splat_4");
    addSampleMapping("common", "splat_5");
    addSampleMapping("common", "splat_6");
    addSampleMapping("spring", "spring_2");
    addSampleMapping("common", "steam_low");
    addSampleMapping("common", "step");
    addSampleMapping("common", "stretch");
    addSampleMapping("common", "swish_1");
    addSampleMapping("common", "swish_2");
    addSampleMapping("common", "swish_3");
    addSampleMapping("common", "swish_4");
    addSampleMapping("common", "swish_5");
    addSampleMapping("common", "swish_6");
    addSampleMapping("common", "swish_7");
    addSampleMapping("common", "swish_8");
    addSampleMapping("common", "warp_in");
    addSampleMapping("common", "warp_out");
    addSampleMapping("common", "char_double_jump");
    addSampleMapping("common", "water_splash");
    addSampleMapping("object", "container_crate_break");
    nextSet(2);
    addSampleMapping("demon", "attack");
    nextSet(3);
    addSampleMapping("devan", "spit_fireball");
    addSampleMapping("devan", "flap");
    addSampleMapping("devan", "unknown_frog4");
    addSampleMapping("devan", "jump_up");
    addSampleMapping("devan", "laugh");
    addSampleMapping("devan", "shoot");
    addSampleMapping("devan", "transform_demon_stretch_2");
    addSampleMapping("devan", "transform_demon_stretch_4");
    addSampleMapping("devan", "transform_demon_stretch_1");
    addSampleMapping("devan", "transform_demon_stretch_3");
    addSampleMapping("devan", "unknown_vanish");
    addSampleMapping("devan", "unknown_whistledescending2");
    addSampleMapping("devan", "transform_demon_wings");
    nextSet(2);
    addSampleMapping("doggy", "attack");
    addSampleMapping("doggy", "noise");
    addSampleMapping("doggy", "woof_1");
    addSampleMapping("doggy", "woof_2");
    addSampleMapping("doggy", "woof_3");
    nextSet(2); // set 31 (all)
    addSampleMapping("dragonfly", "noise");
    nextSet(2);
    addSampleMapping("cinematic", "ending_eva_thankyou");
    nextSet();
    addSampleMapping("jazz", "level_complete");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC);
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "level_complete");
    nextSet();
    addSampleMapping("spaz", "level_complete");
    nextSet();
    addSampleMapping("cinematic", "logo_epic_1");
    addSampleMapping("cinematic", "logo_epic_2");
    nextSet();
    addSampleMapping("eva", "kiss_1");
    addSampleMapping("eva", "kiss_2");
    addSampleMapping("eva", "kiss_3");
    addSampleMapping("eva", "kiss_4");
    nextSet(2); // set 40 (1.24) / set 39 (1.23)
    addSampleMapping("unknown", "unknown_fan");
    nextSet();
    addSampleMapping("chick", "attack_1");
    addSampleMapping("chick", "attack_2");
    addSampleMapping("chick", "attack_3");
    nextSet();
    addSampleMapping("fencer", "attack");
    nextSet(5);
    addSampleMapping("frog", "noise_1");
    addSampleMapping("frog", "noise_2");
    addSampleMapping("frog", "noise_3");
    addSampleMapping("frog", "noise_4");
    addSampleMapping("frog", "noise_5");
    addSampleMapping("frog", "noise_6");
    addSampleMapping("frog", "transform");
    addSampleMapping("frog", "tongue");
    nextSet(3); // set 50 (1.24) / set 49 (1.23)
    addSampleMapping("unimplemented", "boxing_glove_hit");
    nextSet(2);
    addSampleMapping("mad_hatter", "cup");
    addSampleMapping("mad_hatter", "hat");
    addSampleMapping("mad_hatter", "spit");
    addSampleMapping("mad_hatter", "splash_1");
    addSampleMapping("mad_hatter", "splash_2");
    nextSet(2);
    addSampleMapping("cinematic", "opening_blow");
    addSampleMapping("cinematic", "opening_boom_1");
    addSampleMapping("cinematic", "opening_boom_2");
    addSampleMapping("cinematic", "opening_brake");
    addSampleMapping("cinematic", "opening_end_shoot");
    addSampleMapping("cinematic", "opening_rope_grab");
    addSampleMapping("cinematic", "opening_sweep_1");
    addSampleMapping("cinematic", "opening_sweep_2");
    addSampleMapping("cinematic", "opening_sweep_3");
    addSampleMapping("cinematic", "opening_gun_noise_1");
    addSampleMapping("cinematic", "opening_gun_noise_2");
    addSampleMapping("cinematic", "opening_gun_noise_3");
    addSampleMapping("cinematic", "opening_helicopter");
    addSampleMapping("cinematic", "opening_hit_spaz");
    addSampleMapping("cinematic", "opening_hit_turtle");
    addSampleMapping("cinematic", "opening_vo_1");
    addSampleMapping("cinematic", "opening_gun_blow");
    addSampleMapping("cinematic", "opening_insect");
    addSampleMapping("cinematic", "opening_trolley_push");
    addSampleMapping("cinematic", "opening_land");
    addSampleMapping("cinematic", "opening_turtle_growl");
    addSampleMapping("cinematic", "opening_turtle_grunt");
    addSampleMapping("cinematic", "opening_rock");
    addSampleMapping("cinematic", "opening_rope_1");
    addSampleMapping("cinematic", "opening_rope_2");
    addSampleMapping("cinematic", "opening_run");
    addSampleMapping("cinematic", "opening_shot");
    addSampleMapping("cinematic", "opening_shot_grn");
    addSampleMapping("cinematic", "opening_slide");
    addSampleMapping("cinematic", "opening_end_sfx");
    addSampleMapping("cinematic", "opening_swish_1");
    addSampleMapping("cinematic", "opening_swish_2");
    addSampleMapping("cinematic", "opening_swish_3");
    addSampleMapping("cinematic", "opening_swish_4");
    addSampleMapping("cinematic", "opening_turtle_ugh");
    addSampleMapping("cinematic", "opening_up_1");
    addSampleMapping("cinematic", "opening_up_2");
    addSampleMapping("cinematic", "opening_wind");
    nextSet(3);
    addSampleMapping("jazz", "ledge");
    addSampleMapping("jazz", "hurt_1");
    addSampleMapping("jazz", "hurt_2");
    addSampleMapping("jazz", "hurt_3");
    addSampleMapping("jazz", "hurt_4");
    addSampleMapping("jazz", "idle_flavor_3");
    addSampleMapping("jazz", "hurt_5");
    addSampleMapping("jazz", "hurt_6");
    addSampleMapping("jazz", "hurt_7");
    addSampleMapping("jazz", "hurt_8");
    addSampleMapping("jazz", "carrot");
    addSampleMapping("jazz", "idle_flavor_4");
    nextSet(2);
    addSampleMapping("lab_rat", "attack");
    addSampleMapping("lab_rat", "noise_1");
    addSampleMapping("lab_rat", "noise_2");
    addSampleMapping("lab_rat", "noise_3");
    addSampleMapping("lab_rat", "noise_4");
    addSampleMapping("lab_rat", "noise_5");
    nextSet(); // set 60 (1.24) / set 59 (1.23)
    addSampleMapping("lizard", "noise_1");
    addSampleMapping("lizard", "noise_2");
    addSampleMapping("lizard", "noise_3");
    addSampleMapping("lizard", "noise_4");
    nextSet(3, JJ2Version::TSF | JJ2Version::CC);
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "die");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "hurt_1");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "hurt_2");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "hurt_3");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "hurt_4");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "hurt_5");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "hurt_6");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "hurt_7");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "hurt_8");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "unknown_mic1");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "unknown_mic2");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "sidekick");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "fall");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "jump_1");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "jump_2");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "jump_3");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "jump_4");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "unused_touch");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC, "lori", "yahoo");
    nextSet(3);
    addSampleMapping("ui", "select_1");
    addSampleMapping("ui", "select_2");
    addSampleMapping("ui", "select_3");
    addSampleMapping("ui", "select_4");
    addSampleMapping("ui", "select_5");
    addSampleMapping("ui", "select_6");
    addSampleMapping("ui", "select_7");
    addSampleMapping("ui", "type_char");
    addSampleMapping("ui", "type_enter");
    nextSet();
    addSampleMapping("monkey", "banana_splat");
    addSampleMapping("monkey", "banana_throw");
    nextSet();
    addSampleMapping("moth", "flap");
    nextSet();
    addSampleMapping("cinematic", "orangegames_1_boom_l");
    addSampleMapping("cinematic", "orangegames_1_boom_r");
    addSampleMapping("cinematic", "orangegames_7_bubble_l");
    addSampleMapping("cinematic", "orangegames_7_bubble_r");
    addSampleMapping("cinematic", "orangegames_2_glass_1_l");
    addSampleMapping("cinematic", "orangegames_2_glass_1_r");
    addSampleMapping("cinematic", "orangegames_5_glass_2_l");
    addSampleMapping("cinematic", "orangegames_5_glass_2_r");
    addSampleMapping("cinematic", "orangegames_6_merge");
    addSampleMapping("cinematic", "orangegames_3_sweep_1_l");
    addSampleMapping("cinematic", "orangegames_3_sweep_1_r");
    addSampleMapping("cinematic", "orangegames_4_sweep_2_l");
    addSampleMapping("cinematic", "orangegames_4_sweep_2_r");
    addSampleMapping("cinematic", "orangegames_5_sweep_3_l");
    addSampleMapping("cinematic", "orangegames_5_sweep_3_r");
    nextSet(); // set 70 (1.24) / set 66 (1.23)
    addSampleMapping("cinematic", "project2_unused_crunch");
    addSampleMapping("cinematic", "project2_10_fart");
    addSampleMapping("cinematic", "project2_unused_foew1");
    addSampleMapping("cinematic", "project2_unused_foew4");
    addSampleMapping("cinematic", "project2_unused_foew5");
    addSampleMapping("cinematic", "project2_unused_frog1");
    addSampleMapping("cinematic", "project2_unused_frog2");
    addSampleMapping("cinematic", "project2_unused_frog3");
    addSampleMapping("cinematic", "project2_unused_frog4");
    addSampleMapping("cinematic", "project2_unused_frog5");
    addSampleMapping("cinematic", "project2_unused_kiss4");
    addSampleMapping("cinematic", "project2_unused_open");
    addSampleMapping("cinematic", "project2_unused_pinch1");
    addSampleMapping("cinematic", "project2_unused_pinch2");
    addSampleMapping("cinematic", "project2_3_plop_1");
    addSampleMapping("cinematic", "project2_4_plop_2");
    addSampleMapping("cinematic", "project2_5_plop_3");
    addSampleMapping("cinematic", "project2_6_plop_4");
    addSampleMapping("cinematic", "project2_7_plop_5");
    addSampleMapping("cinematic", "project2_9_spit");
    addSampleMapping("cinematic", "project2_unused_splout");
    addSampleMapping("cinematic", "project2_2_splat");
    addSampleMapping("cinematic", "project2_1_8_throw");
    addSampleMapping("cinematic", "project2_unused_tong");
    nextSet();
    addSampleMapping("object", "savepoint_open");
    addSampleMapping("object", "copter");
    addSampleMapping("unknown", "unknown_pickup_stretch1a");
    nextSet();
    addSampleMapping("pinball", "bumper_hit");
    addSampleMapping("pinball", "flipper_1");
    addSampleMapping("pinball", "flipper_2");
    addSampleMapping("pinball", "flipper_3");
    addSampleMapping("pinball", "flipper_4");
    nextSet(3);
    addSampleMapping("queen", "spring");
    addSampleMapping("queen", "scream");
    nextSet();
    addSampleMapping("rapier", "die");
    addSampleMapping("rapier", "noise_1");
    addSampleMapping("rapier", "noise_2");
    addSampleMapping("rapier", "noise_3");
    addSampleMapping("rapier", "clunk");
    nextSet(2);
    addSampleMapping("robot", "unknown_big1");
    addSampleMapping("robot", "unknown_big2");
    addSampleMapping("robot", "unknown_can1");
    addSampleMapping("robot", "unknown_can2");
    addSampleMapping("robot", "attack_start");
    addSampleMapping("robot", "attack_end");
    addSampleMapping("robot", "attack");
    addSampleMapping("robot", "unknown_hydropuf");
    addSampleMapping("robot", "unknown_idle1");
    addSampleMapping("robot", "unknown_idle2");
    addSampleMapping("robot", "unknown_jmpcan1");
    addSampleMapping("robot", "unknown_jmpcan10");
    addSampleMapping("robot", "unknown_jmpcan2");
    addSampleMapping("robot", "unknown_jmpcan3");
    addSampleMapping("robot", "unknown_jmpcan4");
    addSampleMapping("robot", "unknown_jmpcan5");
    addSampleMapping("robot", "unknown_jmpcan6");
    addSampleMapping("robot", "unknown_jmpcan7");
    addSampleMapping("robot", "unknown_jmpcan8");
    addSampleMapping("robot", "unknown_jmpcan9");
    addSampleMapping("robot", "shrapnel_1");
    addSampleMapping("robot", "shrapnel_2");
    addSampleMapping("robot", "shrapnel_3");
    addSampleMapping("robot", "shrapnel_4");
    addSampleMapping("robot", "shrapnel_5");
    addSampleMapping("robot", "attack_start_shutter");
    addSampleMapping("robot", "unknown_out");
    addSampleMapping("robot", "unknown_poep");
    addSampleMapping("robot", "unknown_pole");
    addSampleMapping("robot", "unknown_shoot");
    addSampleMapping("robot", "walk_1");
    addSampleMapping("robot", "walk_2");
    addSampleMapping("robot", "walk_3");
    nextSet();
    addSampleMapping("object", "rolling_rock");
    nextSet(2); // set 81 (1.24) / set 77 (1.23)
    addSampleMapping(JJ2Version::ORIGINAL | JJ2Version::HH, "unknown", "sugar_rush_heartbeat");
    addSampleMapping("pickup", "food_sugar_rush");
    nextSet();
    addSampleMapping("common", "science_noise");
    nextSet();
    addSampleMapping("skeleton", "bone_1");
    addSampleMapping("skeleton", "bone_2");
    addSampleMapping("skeleton", "bone_3");
    addSampleMapping("skeleton", "bone_4");
    addSampleMapping("skeleton", "bone_5");
    addSampleMapping("skeleton", "bone_6");
    nextSet();
    addSampleMapping("pole", "tree_fall_1");
    addSampleMapping("pole", "tree_fall_2");
    addSampleMapping("pole", "tree_fall_3");
    nextSet(2);
    addSampleMapping("spike", "missile_1");
    addSampleMapping("spike", "missile_2");
    addSampleMapping("spike", "missile_3");
    addSampleMapping("spike", "noise");
    addSampleMapping("spike", "lock_on");
    nextSet(6); // set 92 (1.24) / set 88 (1.23)
    addSampleMapping("spaz", "hurt_1");
    addSampleMapping("spaz", "hurt_2");
    addSampleMapping("spaz", "idle_flavor_3_bird_land");
    addSampleMapping("spaz", "idle_flavor_4");
    addSampleMapping("spaz", "idle_flavor_3_bird");
    addSampleMapping("spaz", "idle_flavor_3_eat");
    addSampleMapping("spaz", "jump_1");
    addSampleMapping("spaz", "jump_2");
    addSampleMapping("spaz", "idle_flavor_2");
    addSampleMapping("spaz", "hihi");
    addSampleMapping("spaz", "spring_1");
    addSampleMapping("spaz", "double_jump");
    addSampleMapping("spaz", "sidekick_1");
    addSampleMapping("spaz", "sidekick_2");
    addSampleMapping("spaz", "spring_2");
    addSampleMapping("spaz", "oooh");
    addSampleMapping("spaz", "ledge");
    addSampleMapping("spaz", "jump_3");
    addSampleMapping("spaz", "jump_4");
    nextSet(4);
    addSampleMapping("spring", "spring_ver_down");
    addSampleMapping("spring", "spring");
    nextSet();
    addSampleMapping("common", "steam_note");
    nextSet();
    addSampleMapping("unimplemented", "dizzy");
    nextSet();
    addSampleMapping("sucker_tube", "deflate");
    addSampleMapping("sucker_tube", "pinch_1");
    addSampleMapping("sucker_tube", "pinch_2");
    addSampleMapping("sucker_tube", "pinch_3");
    addSampleMapping("sucker_tube", "plop_1");
    addSampleMapping("sucker_tube", "plop_2");
    addSampleMapping("sucker_tube", "plop_3");
    addSampleMapping("sucker_tube", "plop_4");
    addSampleMapping("sucker_tube", "up");
    nextSet(2); // set 101 (1.24) / set 97 (1.23)
    addSampleMapping("tough_turtle_boss", "attack_start");
    addSampleMapping("tough_turtle_boss", "attack_end");
    addSampleMapping("tough_turtle_boss", "mace");
    nextSet(2);
    addSampleMapping("turtle", "attack_bite");
    addSampleMapping("turtle", "turn_start");
    addSampleMapping("turtle", "shell_collide");
    addSampleMapping("turtle", "idle_1");
    addSampleMapping("turtle", "idle_2");
    addSampleMapping("turtle", "attack_neck");
    addSampleMapping("turtle", "noise_1");
    addSampleMapping("turtle", "noise_2");
    addSampleMapping("turtle", "noise_3");
    addSampleMapping("turtle", "noise_4");
    addSampleMapping("turtle", "turn_end");
    nextSet(2);
    addSampleMapping("uterus", "closed_start");
    addSampleMapping("uterus", "closed_end");
    addSampleMapping("crab", "noise_1");
    addSampleMapping("crab", "noise_2");
    addSampleMapping("crab", "noise_3");
    addSampleMapping("crab", "noise_4");
    addSampleMapping("crab", "noise_5");
    addSampleMapping("crab", "noise_6");
    addSampleMapping("crab", "noise_7");
    addSampleMapping("crab", "noise_8");
    addSampleMapping("uterus", "scream");
    addSampleMapping("crab", "step_1");
    addSampleMapping("crab", "step_2");
    nextSet(6); // set 111 (1.24) / set 107 (1.23)
    addSampleMapping("common", "wind");
    nextSet();
    addSampleMapping("witch", "laugh");
    addSampleMapping("witch", "magic");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH);
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "bilsy", "xmas_appear_2");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "bilsy", "xmas_snap");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "bilsy", "xmas_throw_fireball");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "bilsy", "xmas_fire_start");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "bilsy", "xmas_scary");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "bilsy", "xmas_thunder");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "bilsy", "xmas_appear_1");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH);
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "lizard", "xmas_noise_1");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "lizard", "xmas_noise_2");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "lizard", "xmas_noise_3");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "lizard", "xmas_noise_4");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH);
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_attack_bite");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_turn_start");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_shell_collide");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_idle_1");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_idle_2");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_attack_neck");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_noise_1");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_noise_2");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_noise_3");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_noise_4");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "turtle", "xmas_turn_end");
    nextSet(1, JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH);
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "doggy", "xmas_attack");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "doggy", "xmas_noise");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "doggy", "xmas_woof_1");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "doggy", "xmas_woof_2");
    addSampleMapping(JJ2Version::TSF | JJ2Version::CC | JJ2Version::HH, "doggy", "xmas_woof_3");

    moved.swap(wipSampleMap);
    return moved;
}

IDMapper::IDMapper(const uint& version) : jj2Version(version), currentItem(0), currentSet(0) {
}
